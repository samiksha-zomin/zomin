{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/BasicInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState, useContext } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { useHistory } from \"react-router-dom\";\nimport Axios from \"axios\"; //SESSION and INPUT\n\nimport { AuthContext } from \"../Helpers/AuthContext\";\nimport useInput from \"../Helpers/use-input\";\nimport { Container, Row, Col, InputGroup, Form } from \"react-bootstrap\";\nimport { BiMessageCheck, BiMinusCircle } from \"react-icons/bi\";\nimport DatePicker from \"react-datepicker\";\nimport { Typeahead } from \"react-bootstrap-typeahead\"; //Toast\n\nimport { toast } from \"react-toastify\"; //Components\n\nimport Heading from \"../Components/Heading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== \"\";\n\nfunction BasicInfo() {\n  _s();\n\n  let history = useHistory();\n  const {\n    authState,\n    setAuthState\n  } = useContext(AuthContext);\n  const [universityList, setUniversityList] = useState([]);\n  const [eduList, setEduList] = useState([]);\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/university`).then(response => {\n      const uni = response.data;\n      var rows = [];\n\n      for (var i = 0; i < uni.length; i++) {\n        rows.push(response.data[i].university_name);\n      }\n\n      setUniversityList(rows);\n    });\n  }, []); //Education Level\n\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/eduLevel`).then(response => {\n      setEduList(response.data);\n    });\n  }, []);\n  const [currentStatus, setCurrentStatus] = useState(0); // 0: no show, 1: show yes, 2: show no.\n\n  const jobStatus = currentStatus => {\n    setCurrentStatus(currentStatus);\n  }; //GENDER Input Check\n\n\n  const [genderInput, setGenderInput] = useState(\"\"); //DOB Input Check\n\n  const {\n    value: enteredDob,\n    isValid: enteredDobIsValid,\n    hasError: dobInputHasError,\n    valueChangeHandler: dobChangeHandler,\n    inputBlurHandler: dobBlurHandler,\n    reset: resetDobInput\n  } = useInput(isNotEmpty); //About Input Check\n\n  const {\n    value: enteredAbout,\n    isValid: enteredAboutIsValid,\n    hasError: aboutInputHasError,\n    valueChangeHandler: aboutChangeHandler,\n    inputBlurHandler: aboutBlurHandler,\n    reset: resetAboutInput\n  } = useInput(isNotEmpty); //School Input Check\n\n  const [school, setSchool] = useState(\"\"); //Highest Education Level Input Check\n\n  const {\n    value: enteredHighLevel,\n    isValid: enteredHighLevelIsValid,\n    hasError: highLevelInputHasError,\n    valueChangeHandler: highLevelChangeHandler,\n    inputBlurHandler: highLevelBlurHandler,\n    reset: resetHighLevelInput\n  } = useInput(isNotEmpty); //Study Field Level Input Check\n\n  const {\n    value: enteredStudyField,\n    isValid: enteredStudyFieldIsValid,\n    hasError: studyFieldInputHasError,\n    valueChangeHandler: studyFieldChangeHandler,\n    inputBlurHandler: studyFieldBlurHandler,\n    reset: resetStudyFieldInput\n  } = useInput(isNotEmpty); //Start Year Input Check\n\n  const [startDate, setStartDate] = useState(); //End Year Input Check\n\n  const [endDate, setEndDate] = useState(); //Current Status Level Input Check\n\n  const {\n    value: enteredCurrentStatus,\n    isValid: enteredCurrentStatusIsValid,\n    hasError: currentStatusInputHasError,\n    valueChangeHandler: currentStatusChangeHandler,\n    inputBlurHandler: currentStatusBlurHandler,\n    reset: resetCurrentStatusInput\n  } = useInput(isNotEmpty); //Company Name Input Check\n\n  const [companyName, setCompanyName] = useState(\"\"); //Current Position Input Check\n\n  const [currentPosition, setCurrentPosition] = useState(\"\");\n  const [skill, setSkill] = useState(\"\");\n  let userBasicInfoFormIsValid = false;\n\n  if (genderInput !== \"\" && enteredDobIsValid && enteredAboutIsValid && school !== \"\" && enteredHighLevelIsValid && enteredCurrentStatusIsValid && enteredHighLevelIsValid) {\n    userBasicInfoFormIsValid = true;\n  }\n\n  const userBasicInfoFormSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (genderInput === \"\" && !enteredDobIsValid && !enteredAboutIsValid && school === \"\" && !enteredHighLevelIsValid && !enteredCurrentStatusIsValid && !enteredStudyFieldIsValid) {\n      return;\n    } else {\n      Axios.post(`${process.env.REACT_APP_SERVER_DOMAIN}/basicinfo/user`, {\n        gender: genderInput,\n        dob: enteredDob,\n        about: enteredAbout,\n        school: school,\n        eduLevel: enteredHighLevel,\n        studyField: enteredStudyField,\n        startDate: startDate,\n        endDate: endDate,\n        currentStatus: enteredCurrentStatus,\n        companyName: companyName,\n        currentPosition: currentPosition,\n        skill: skill\n      }, {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        if (response.data.error) {\n          return toast.error( /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(BiMinusCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: response.data.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this));\n        } else {\n          console.log(response.data);\n          console.log(\"here \" + response.data.attempt); // const attemptValue=1;\n\n          setAuthState({ ...authState,\n            attempt: \"1\"\n          });\n          console.log(authState);\n          return toast.success( /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(BiMessageCheck, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: response.data.success\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this));\n        }\n      });\n    }\n\n    setGenderInput(\"\");\n    resetDobInput();\n    resetAboutInput();\n    setSchool(\"\");\n    resetHighLevelInput();\n    resetCurrentStatusInput();\n    resetStudyFieldInput();\n\n    if (authState.attempt === 1) {\n      history.push('/homepage');\n    } else {\n      history.push('/lol');\n    }\n  };\n\n  const dobClasses = dobInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const aboutClasses = aboutInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const highLevelClasses = highLevelInputHasError ? \"form-select form-select-sm is-invalid\" : \"form-select form-select-sm\";\n  const studyFieldClasses = studyFieldInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HelmetProvider, {\n      children: /*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \" Basic Info | Zom - IN \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"basicInfo\",\n      className: \"basicInfo\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"my-5\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            sm: 6,\n            xs: 12,\n            className: \"mx-auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: authState.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: authState.attempt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Heading, {\n              content: \"Basic Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: userBasicInfoFormSubmissionHandler,\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                sm: 12,\n                className: \"form-group mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"inputgender\",\n                  className: \"required\",\n                  children: \"You are\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      className: \"btn-check\",\n                      name: \"gender\",\n                      required: true,\n                      id: \"male\",\n                      autoComplete: \"off\",\n                      onChange: e => setGenderInput(e.target.value),\n                      value: [genderInput === \"Male\" || \"Male\"]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"btn btn-outline-success\",\n                      htmlFor: \"male\",\n                      children: \"Male\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ms-2 \",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      className: \"btn-check\",\n                      name: \"gender\",\n                      id: \"female\",\n                      autoComplete: \"off\",\n                      onChange: e => setGenderInput(e.target.value),\n                      value: [genderInput === \"Female\" || \"Female\"]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"btn btn-outline-info\",\n                      htmlFor: \"female\",\n                      children: \"Female\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 12,\n                className: \"form-group mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"inputdob\",\n                  className: \"required\",\n                  children: \"Date of Birth\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  id: \"inputdob\",\n                  placeholder: \"Your Birthday\",\n                  className: dobClasses,\n                  onChange: dobChangeHandler,\n                  onBlur: dobBlurHandler,\n                  value: enteredDob\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 19\n                }, this), dobInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: \"Please select your birthdate.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 12,\n                className: \"form-group mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"inputabout\",\n                  className: \"required\",\n                  children: \"About\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  placeholder: \"Tell us about you\",\n                  className: aboutClasses,\n                  onChange: aboutChangeHandler,\n                  onBlur: aboutBlurHandler,\n                  value: enteredAbout\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 19\n                }, this), aboutInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: \"Tell us about you.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                className: \"my-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Heading, {\n                content: \"Education\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 12,\n                className: \"form-group mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"inputSchool\",\n                  className: \"required\",\n                  children: \"School\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typeahead, {\n                  inputProps: {\n                    required: true\n                  },\n                  id: \"valid-styles-example\",\n                  size: \"small\",\n                  placeholder: \"Choose a School\",\n                  options: universityList,\n                  onChange: value => {\n                    setSchool(value);\n                  },\n                  onInputChange: value => {\n                    setSchool(value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 12,\n                className: \"form-group mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"eduLevel\",\n                  className: \"required\",\n                  children: \"Highest Education Level\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  defaultValue: \"\",\n                  \"aria-label\": \"Education Level\",\n                  className: highLevelClasses,\n                  onChange: highLevelChangeHandler,\n                  onBlur: highLevelBlurHandler,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Please Choose One\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 21\n                  }, this), eduList.map((eduList, key) => {\n                    const enteredHighLevel = eduList.child_name;\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: enteredHighLevel,\n                      children: enteredHighLevel\n                    }, enteredHighLevel, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 359,\n                      columnNumber: 25\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 19\n                }, this), highLevelInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: \"Please choose your highest education Level.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 12,\n                className: \"form-group mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"studyField\",\n                  className: \"required\",\n                  children: \"Field of Study\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: studyFieldClasses,\n                  onChange: studyFieldChangeHandler,\n                  onBlur: studyFieldBlurHandler,\n                  value: enteredStudyField\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 19\n                }, this), studyFieldInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: \"Please fill in your field of study.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 12,\n                className: \"form-group mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"eduYear\",\n                  className: \"required\",\n                  children: \"Year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    sm: 4,\n                    xs: 6,\n                    children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                      required: true,\n                      selected: startDate,\n                      onChange: date => setStartDate(date),\n                      showYearPicker: true,\n                      dateFormat: \"yyyy\",\n                      yearItemNumber: 10,\n                      placeholderText: \"Year Start\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 398,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                      selected: endDate,\n                      onChange: date => setEndDate(date),\n                      showYearPicker: true,\n                      dateFormat: \"yyyy\",\n                      yearItemNumber: 10,\n                      placeholderText: \"Year End\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 409,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                className: \"my-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Heading, {\n                content: \"Working Experience\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 12,\n                className: \"form-group mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"currentStatus\",\n                  className: \"required\",\n                  children: \"Current Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      className: \"btn-check\",\n                      name: \"status\",\n                      id: \"employedCS\",\n                      autoComplete: \"off\",\n                      onChange: currentStatusChangeHandler,\n                      onBlur: currentStatusBlurHandler,\n                      value: [enteredCurrentStatus === \"employee\" || \"employee\"],\n                      checked: currentStatus === 2,\n                      onClick: e => jobStatus(2)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 431,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"btn btn-outline-success\",\n                      htmlFor: \"employedCS\",\n                      children: \"Employed\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 445,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 430,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ms-2 \",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      className: \"btn-check\",\n                      name: \"status\",\n                      id: \"unemployedCS\",\n                      autoComplete: \"off\",\n                      onChange: currentStatusChangeHandler,\n                      onBlur: currentStatusBlurHandler,\n                      value: [enteredCurrentStatus === \"unemployed\" || \"unemployed\"],\n                      checked: currentStatus === 1,\n                      onClick: e => jobStatus(1)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 454,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"btn btn-outline-info\",\n                      htmlFor: \"unemployedCS\",\n                      children: \"Unemployed\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 468,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ms-2 \",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      className: \"btn-check\",\n                      name: \"status\",\n                      id: \"internCS\",\n                      autoComplete: \"off\",\n                      onChange: currentStatusChangeHandler,\n                      onBlur: currentStatusBlurHandler,\n                      value: [enteredCurrentStatus === \"intern\" || \"intern\"],\n                      checked: currentStatus === 3,\n                      onClick: e => jobStatus(3)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 477,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"btn btn-outline-warning\",\n                      htmlFor: \"internCS\",\n                      children: \"Intern\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 489,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 476,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 17\n              }, this), currentStatus > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"companyName\",\n                    className: \"required\",\n                    children: \"Company Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    id: \"companyName\",\n                    placeholder: \"Company Name\",\n                    value: companyName,\n                    onChange: e => {\n                      setCompanyName(e.target.value);\n                      console.log(companyName);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 505,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"currentPos\",\n                    className: \"required\",\n                    children: \"Current Position\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 519,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    size: \"sm\",\n                    type: \"text\",\n                    className: \"form-control\",\n                    id: \"currentPos\",\n                    placeholder: \"Current Position\",\n                    value: currentPosition,\n                    onChange: e => {\n                      setCurrentPosition(e.target.value);\n                      console.log(companyName);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 522,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                className: \"my-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Heading, {\n                content: \"Skills & Experience\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 12,\n                className: \"form-group mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"inputskillexp\",\n                  children: \"Skills & Experience\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typeahead, {\n                  options: [],\n                  onChange: value => {\n                    setSkill(value);\n                  },\n                  onInputChange: value => {\n                    setSkill(value);\n                  },\n                  newSelectionPrefix: \"Add a new skill: \",\n                  allowNew: true,\n                  id: \"public-methods-example\",\n                  multiple: true,\n                  placeholder: \"Add a new skill:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                className: \"text-end my-3\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \" btn btn-primary\",\n                  disabled: !userBasicInfoFormIsValid,\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BasicInfo, \"DUGEaW+WPODdpxmSv/pr5c3TF8w=\", false, function () {\n  return [useHistory, useInput, useInput, useInput, useInput, useInput];\n});\n\n_c = BasicInfo;\nexport default BasicInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicInfo\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/BasicInfo.jsx"],"names":["React","Fragment","useEffect","useState","useContext","Helmet","HelmetProvider","useHistory","Axios","AuthContext","useInput","Container","Row","Col","InputGroup","Form","BiMessageCheck","BiMinusCircle","DatePicker","Typeahead","toast","Heading","isNotEmpty","value","trim","BasicInfo","history","authState","setAuthState","universityList","setUniversityList","eduList","setEduList","get","process","env","REACT_APP_SERVER_DOMAIN","then","response","uni","data","rows","i","length","push","university_name","currentStatus","setCurrentStatus","jobStatus","genderInput","setGenderInput","enteredDob","isValid","enteredDobIsValid","hasError","dobInputHasError","valueChangeHandler","dobChangeHandler","inputBlurHandler","dobBlurHandler","reset","resetDobInput","enteredAbout","enteredAboutIsValid","aboutInputHasError","aboutChangeHandler","aboutBlurHandler","resetAboutInput","school","setSchool","enteredHighLevel","enteredHighLevelIsValid","highLevelInputHasError","highLevelChangeHandler","highLevelBlurHandler","resetHighLevelInput","enteredStudyField","enteredStudyFieldIsValid","studyFieldInputHasError","studyFieldChangeHandler","studyFieldBlurHandler","resetStudyFieldInput","startDate","setStartDate","endDate","setEndDate","enteredCurrentStatus","enteredCurrentStatusIsValid","currentStatusInputHasError","currentStatusChangeHandler","currentStatusBlurHandler","resetCurrentStatusInput","companyName","setCompanyName","currentPosition","setCurrentPosition","skill","setSkill","userBasicInfoFormIsValid","userBasicInfoFormSubmissionHandler","event","preventDefault","post","gender","dob","about","eduLevel","studyField","headers","accessToken","localStorage","getItem","error","console","log","attempt","success","dobClasses","aboutClasses","highLevelClasses","studyFieldClasses","id","e","target","required","map","key","child_name","date"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState, useContext } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { useHistory } from \"react-router-dom\";\nimport Axios from \"axios\";\n\n\n//SESSION and INPUT\nimport { AuthContext } from \"../Helpers/AuthContext\";\nimport useInput from \"../Helpers/use-input\";\n\nimport { Container, Row, Col, InputGroup, Form } from \"react-bootstrap\";\nimport { BiMessageCheck, BiMinusCircle } from \"react-icons/bi\";\nimport DatePicker from \"react-datepicker\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\n//Toast\nimport { toast } from \"react-toastify\";\n\n//Components\nimport Heading from \"../Components/Heading\";\n\nconst isNotEmpty = (value) => value.trim() !== \"\";\n\nfunction BasicInfo() {\n  let history = useHistory();\n  const { authState, setAuthState } = useContext(AuthContext);\n\n\n  const [universityList, setUniversityList] = useState([]);\n  const [eduList, setEduList] = useState([]);\n\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/university`).then(\n      (response) => {\n        const uni = response.data;\n        var rows = [];\n        for (var i = 0; i < uni.length; i++) {\n          rows.push(response.data[i].university_name);\n        }\n        setUniversityList(rows);\n      }\n    );\n  }, []);\n\n  //Education Level\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/eduLevel`).then(\n      (response) => {\n        setEduList(response.data);\n      }\n    );\n  }, []);\n\n  const [currentStatus, setCurrentStatus] = useState(0); // 0: no show, 1: show yes, 2: show no.\n  const jobStatus = (currentStatus) => {\n    setCurrentStatus(currentStatus);\n  };\n\n  //GENDER Input Check\n  const [genderInput, setGenderInput] = useState(\"\");\n\n  //DOB Input Check\n  const {\n    value: enteredDob,\n    isValid: enteredDobIsValid,\n    hasError: dobInputHasError,\n    valueChangeHandler: dobChangeHandler,\n    inputBlurHandler: dobBlurHandler,\n    reset: resetDobInput,\n  } = useInput(isNotEmpty);\n\n  //About Input Check\n  const {\n    value: enteredAbout,\n    isValid: enteredAboutIsValid,\n    hasError: aboutInputHasError,\n    valueChangeHandler: aboutChangeHandler,\n    inputBlurHandler: aboutBlurHandler,\n    reset: resetAboutInput,\n  } = useInput(isNotEmpty);\n\n  //School Input Check\n  const [school, setSchool] = useState(\"\");\n\n  //Highest Education Level Input Check\n  const {\n    value: enteredHighLevel,\n    isValid: enteredHighLevelIsValid,\n    hasError: highLevelInputHasError,\n    valueChangeHandler: highLevelChangeHandler,\n    inputBlurHandler: highLevelBlurHandler,\n    reset: resetHighLevelInput,\n  } = useInput(isNotEmpty);\n\n  //Study Field Level Input Check\n  const {\n    value: enteredStudyField,\n    isValid: enteredStudyFieldIsValid,\n    hasError: studyFieldInputHasError,\n    valueChangeHandler: studyFieldChangeHandler,\n    inputBlurHandler: studyFieldBlurHandler,\n    reset: resetStudyFieldInput,\n  } = useInput(isNotEmpty);\n\n  //Start Year Input Check\n  const [startDate, setStartDate] = useState();\n\n  //End Year Input Check\n  const [endDate, setEndDate] = useState();\n\n  //Current Status Level Input Check\n  const {\n    value: enteredCurrentStatus,\n    isValid: enteredCurrentStatusIsValid,\n    hasError: currentStatusInputHasError,\n    valueChangeHandler: currentStatusChangeHandler,\n    inputBlurHandler: currentStatusBlurHandler,\n    reset: resetCurrentStatusInput,\n  } = useInput(isNotEmpty);\n\n  //Company Name Input Check\n  const [companyName, setCompanyName] = useState(\"\");\n\n  //Current Position Input Check\n  const [currentPosition, setCurrentPosition] = useState(\"\");\n\n  const [skill, setSkill] = useState(\"\");\n\n  let userBasicInfoFormIsValid = false;\n\n  if (\n    genderInput !== \"\" &&\n    enteredDobIsValid &&\n    enteredAboutIsValid &&\n    school !== \"\" &&\n    enteredHighLevelIsValid &&\n    enteredCurrentStatusIsValid &&\n    enteredHighLevelIsValid\n  ) {\n    userBasicInfoFormIsValid = true;\n  }\n  const userBasicInfoFormSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (\n      genderInput === \"\" &&\n      !enteredDobIsValid &&\n      !enteredAboutIsValid &&\n      school === \"\" &&\n      !enteredHighLevelIsValid &&\n      !enteredCurrentStatusIsValid &&\n      !enteredStudyFieldIsValid\n    ) {\n      return;\n    } else {\n      Axios.post(\n        `${process.env.REACT_APP_SERVER_DOMAIN}/basicinfo/user`,\n        {\n          gender: genderInput,\n          dob: enteredDob,\n          about: enteredAbout,\n          school: school,\n          eduLevel: enteredHighLevel,\n          studyField: enteredStudyField,\n          startDate: startDate,\n          endDate: endDate,\n          currentStatus: enteredCurrentStatus,\n          companyName: companyName,\n          currentPosition: currentPosition,\n          skill: skill,\n        },\n        {\n          headers: {\n            accessToken: localStorage.getItem(\"accessToken\"),\n          },\n        }\n      ).then((response) => {\n        if (response.data.error) {\n          return toast.error(\n            <Fragment>\n              <BiMinusCircle /> <span>{response.data.error}</span>\n            </Fragment>\n          );\n        } else {\n          console.log(response.data);\n          console.log(\"here \"+response.data.attempt);\n          // const attemptValue=1;\n        setAuthState({...authState, attempt: \"1\"});\n        console.log(authState);\n          return toast.success(\n            <Fragment>\n              <BiMessageCheck /> <span>{response.data.success}</span>\n            </Fragment>\n          );\n        }\n      });\n    }\n    setGenderInput(\"\");\n    resetDobInput();\n    resetAboutInput();\n    setSchool(\"\");\n    resetHighLevelInput();\n    resetCurrentStatusInput();\n    resetStudyFieldInput();\n    if (authState.attempt === 1) {\n    history.push('/homepage');\n    } else {\n      history.push('/lol');\n\n    }\n  };\n\n  const dobClasses = dobInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const aboutClasses = aboutInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const highLevelClasses = highLevelInputHasError\n    ? \"form-select form-select-sm is-invalid\"\n    : \"form-select form-select-sm\";\n\n  const studyFieldClasses = studyFieldInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  return (\n\n    <Fragment>\n      <HelmetProvider>\n        <Helmet>\n          <title> Basic Info | Zom - IN </title>\n        </Helmet>\n      </HelmetProvider>\n      <div id=\"basicInfo\" className=\"basicInfo\">\n        <Container className=\"my-5\">\n          <Row>\n            <Col sm={6} xs={12} className=\"mx-auto\">\n              <h1>{authState.id}</h1>\n              <h1>{authState.attempt}</h1>\n              <Heading content=\"Basic Info\" />\n              <Form onSubmit={userBasicInfoFormSubmissionHandler}>\n                <Col sm={12} className=\"form-group mb-3\">\n                  <label htmlFor=\"inputgender\" className=\"required\">\n                    You are\n                  </label>\n                  <InputGroup>\n                    <div>\n                      <input\n                        type=\"radio\"\n                        className=\"btn-check\"\n                        name=\"gender\"\n                        required\n                        id=\"male\"\n                        autoComplete=\"off\"\n                        onChange={(e) => setGenderInput(e.target.value)}\n                        value={[genderInput === \"Male\" || \"Male\"]}\n                      />\n                      <label className=\"btn btn-outline-success\" htmlFor=\"male\">\n                        Male\n                      </label>\n                    </div>\n\n                    <div className=\"ms-2 \">\n                      <input\n                        type=\"radio\"\n                        className=\"btn-check\"\n                        name=\"gender\"\n                        id=\"female\"\n                        autoComplete=\"off\"\n                        onChange={(e) => setGenderInput(e.target.value)}\n                        value={[genderInput === \"Female\" || \"Female\"]}\n                      />\n                      <label className=\"btn btn-outline-info\" htmlFor=\"female\">\n                        Female\n                      </label>\n                    </div>\n                  </InputGroup>\n                </Col>\n                <Col sm={12} className=\"form-group mb-3\">\n                  <label htmlFor=\"inputdob\" className=\"required\">\n                    Date of Birth\n                  </label>\n                  <input\n                    type=\"date\"\n                    id=\"inputdob\"\n                    placeholder=\"Your Birthday\"\n                    className={dobClasses}\n                    onChange={dobChangeHandler}\n                    onBlur={dobBlurHandler}\n                    value={enteredDob}\n                  />\n                  {dobInputHasError && (\n                    <Form.Control.Feedback type=\"invalid\">\n                      Please select your birthdate.\n                    </Form.Control.Feedback>\n                  )}\n                </Col>\n\n                <Col sm={12} className=\"form-group mb-2\">\n                  <label htmlFor=\"inputabout\" className=\"required\">\n                    About\n                  </label>\n                  <Form.Control\n                    as=\"textarea\"\n                    placeholder=\"Tell us about you\"\n                    className={aboutClasses}\n                    onChange={aboutChangeHandler}\n                    onBlur={aboutBlurHandler}\n                    value={enteredAbout}\n                  />\n                  {aboutInputHasError && (\n                    <Form.Control.Feedback type=\"invalid\">\n                      Tell us about you.\n                    </Form.Control.Feedback>\n                  )}\n                </Col>\n\n                <hr className=\"my-4\" />\n                <Heading content=\"Education\" />\n\n                <Col sm={12} className=\"form-group mb-2\">\n                  <label htmlFor=\"inputSchool\" className=\"required\">\n                    School\n                  </label>\n\n                  <Typeahead\n                    inputProps={{ required: true }}\n                    id=\"valid-styles-example\"\n                    size=\"small\"\n                    placeholder=\"Choose a School\"\n                    options={universityList}\n                    onChange={(value) => {\n                      setSchool(value);\n                    }}\n                    onInputChange={(value) => {\n                      setSchool(value);\n                    }}\n                  />\n                </Col>\n\n                <Col sm={12} className=\"form-group mb-2\">\n                  <label htmlFor=\"eduLevel\" className=\"required\">\n                    Highest Education Level\n                  </label>\n                  <select\n                    defaultValue={\"\"}\n                    aria-label=\"Education Level\"\n                    className={highLevelClasses}\n                    onChange={highLevelChangeHandler}\n                    onBlur={highLevelBlurHandler}\n                  >\n                    <option value=\"\">Please Choose One</option>\n                    {eduList.map((eduList, key) => {\n                      const enteredHighLevel = eduList.child_name;\n                      return (\n                        <option key={enteredHighLevel} value={enteredHighLevel}>\n                          {enteredHighLevel}\n                        </option>\n                      );\n                    })}\n                  </select>\n\n                  {highLevelInputHasError && (\n                    <Form.Control.Feedback type=\"invalid\">\n                      Please choose your highest education Level.\n                    </Form.Control.Feedback>\n                  )}\n                </Col>\n\n                <Col sm={12} className=\"form-group mb-2\">\n                  <label htmlFor=\"studyField\" className=\"required\">\n                    Field of Study\n                  </label>\n                  <input\n                    type=\"text\"\n                    className={studyFieldClasses}\n                    onChange={studyFieldChangeHandler}\n                    onBlur={studyFieldBlurHandler}\n                    value={enteredStudyField}\n                  />\n\n                  {studyFieldInputHasError && (\n                    <Form.Control.Feedback type=\"invalid\">\n                      Please fill in your field of study.\n                    </Form.Control.Feedback>\n                  )}\n                </Col>\n\n                <Col sm={12} className=\"form-group mb-2\">\n                  <label htmlFor=\"eduYear\" className=\"required\">\n                    Year\n                  </label>\n                  <InputGroup className=\"mb-3\">\n                    <Col sm={4} xs={6}>\n                      <DatePicker\n                        required\n                        selected={startDate}\n                        onChange={(date) => setStartDate(date)}\n                        showYearPicker\n                        dateFormat=\"yyyy\"\n                        yearItemNumber={10}\n                        placeholderText=\"Year Start\"\n                      />\n                    </Col>\n                    <Col>\n                      <DatePicker\n                        selected={endDate}\n                        onChange={(date) => setEndDate(date)}\n                        showYearPicker\n                        dateFormat=\"yyyy\"\n                        yearItemNumber={10}\n                        placeholderText=\"Year End\"\n                      />\n                    </Col>\n                  </InputGroup>\n                </Col>\n\n                <hr className=\"my-4\" />\n\n                <Heading content=\"Working Experience\" />\n                <Col sm={12} className=\"form-group mb-2\">\n                  <label htmlFor=\"currentStatus\" className=\"required\">\n                    Current Status\n                  </label>\n\n                  <InputGroup className=\"mb-3\">\n                    <div>\n                      <input\n                        type=\"radio\"\n                        className=\"btn-check\"\n                        name=\"status\"\n                        id=\"employedCS\"\n                        autoComplete=\"off\"\n                        onChange={currentStatusChangeHandler}\n                        onBlur={currentStatusBlurHandler}\n                        value={[\n                          enteredCurrentStatus === \"employee\" || \"employee\",\n                        ]}\n                        checked={currentStatus === 2}\n                        onClick={(e) => jobStatus(2)}\n                      />\n                      <label\n                        className=\"btn btn-outline-success\"\n                        htmlFor=\"employedCS\"\n                      >\n                        Employed\n                      </label>\n                    </div>\n\n                    <div className=\"ms-2 \">\n                      <input\n                        type=\"radio\"\n                        className=\"btn-check\"\n                        name=\"status\"\n                        id=\"unemployedCS\"\n                        autoComplete=\"off\"\n                        onChange={currentStatusChangeHandler}\n                        onBlur={currentStatusBlurHandler}\n                        value={[\n                          enteredCurrentStatus === \"unemployed\" || \"unemployed\",\n                        ]}\n                        checked={currentStatus === 1}\n                        onClick={(e) => jobStatus(1)}\n                      />\n                      <label\n                        className=\"btn btn-outline-info\"\n                        htmlFor=\"unemployedCS\"\n                      >\n                        Unemployed\n                      </label>\n                    </div>\n\n                    <div className=\"ms-2 \">\n                      <input\n                        type=\"radio\"\n                        className=\"btn-check\"\n                        name=\"status\"\n                        id=\"internCS\"\n                        autoComplete=\"off\"\n                        onChange={currentStatusChangeHandler}\n                        onBlur={currentStatusBlurHandler}\n                        value={[enteredCurrentStatus === \"intern\" || \"intern\"]}\n                        checked={currentStatus === 3}\n                        onClick={(e) => jobStatus(3)}\n                      />\n                      <label\n                        className=\"btn btn-outline-warning\"\n                        htmlFor=\"internCS\"\n                      >\n                        Intern\n                      </label>\n                    </div>\n                  </InputGroup>\n                </Col>\n\n                {currentStatus > 1 && (\n                  <div>\n                    <Col sm={12} className=\"form-group mb-2\">\n                      <label htmlFor=\"companyName\" className=\"required\">\n                        Company Name\n                      </label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"companyName\"\n                        placeholder=\"Company Name\"\n                        value={companyName}\n                        onChange={(e) => {\n                          setCompanyName(e.target.value);\n                          console.log(companyName);\n                        }}\n                      />\n                    </Col>\n\n                    <Col sm={12} className=\"form-group mb-2\">\n                      <label htmlFor=\"currentPos\" className=\"required\">\n                        Current Position\n                      </label>\n                      <input\n                        size=\"sm\"\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"currentPos\"\n                        placeholder=\"Current Position\"\n                        value={currentPosition}\n                        onChange={(e) => {\n                          setCurrentPosition(e.target.value);\n                          console.log(companyName);\n                        }}\n                      />\n                    </Col>\n                  </div>\n                )}\n\n                <hr className=\"my-4\" />\n                <Heading content=\"Skills & Experience\" />\n                <Col sm={12} className=\"form-group mb-2\">\n                  <label htmlFor=\"inputskillexp\">Skills & Experience</label>\n                  <Typeahead\n                    options={[]}\n                    onChange={(value) => {\n                      setSkill(value);\n                    }}\n                    onInputChange={(value) => {\n                      setSkill(value);\n                    }}\n                    newSelectionPrefix=\"Add a new skill: \"\n                    allowNew\n                    id=\"public-methods-example\"\n                    multiple\n                    placeholder=\"Add a new skill:\"\n                  />\n                </Col>\n\n                <Col className=\"text-end my-3\">\n                  <button\n                    type=\"submit\"\n                    className=\" btn btn-primary\"\n                    disabled={!userBasicInfoFormIsValid}\n                  >\n                    Submit\n                  </button>\n                </Col>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default BasicInfo;\n"]},"metadata":{},"sourceType":"module"}