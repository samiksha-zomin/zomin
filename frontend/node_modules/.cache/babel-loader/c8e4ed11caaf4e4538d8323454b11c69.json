{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/SignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport useInput from \"../Hooks/use-input\"; //import Components\n\nimport Heading from \"../Components/Heading\";\nimport { Row, Col, Form, Button } from \"react-bootstrap\"; //Toast\n\nimport { toast } from \"react-toastify\"; //Custom Style\n\nimport \"../Styles/signup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== \"\";\n\nfunction SignUp() {\n  _s();\n\n  //LOGIN\n  //LOGIN EMAIL \n  // Gender Input Check\n  const {\n    value: enteredLogEmail,\n    isValid: enteredLogEmailIsValid,\n    hasError: logEmailInputHasError,\n    valueChangeHandler: logEmailChangeHandler,\n    inputBlurHandler: logEmailBlurHandler,\n    reset: resetLogEmailInput\n  } = useInput(isNotEmpty);\n  let loginFormIsValid = false;\n\n  if (enteredLogEmailIsValid) {\n    loginFormIsValid = true;\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredLogEmailIsValid) {\n      return;\n    } else {\n      alert(\"posting\");\n    }\n\n    console.log(\"submitting\");\n    resetLogEmailInput();\n  };\n\n  const logEmailClasses = logEmailInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HelmetProvider, {\n      children: /*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \" Sign Up & Log In | Zom - IN \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"signUp\",\n      className: \"signUp\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 11,\n        md: 9,\n        className: \"mx-auto text-center\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Heading, {\n                content: \"Log In Now!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    id: \"inputEmail\",\n                    placeholder: \"Email Address\",\n                    class: \"form-control form-control-sm\",\n                    className: logEmailClasses,\n                    onChange: logEmailChangeHandler,\n                    onBlur: logEmailBlurHandler,\n                    value: enteredLogEmail\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 21\n                  }, this), logEmailInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please enter a valid Email Address.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            md: 6,\n            className: \"divider\",\n            children: \"fvd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUp, \"vv+u7eBaTdVA/T4WBePsPaFXWxY=\", false, function () {\n  return [useInput];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/SignUp.jsx"],"names":["React","Fragment","Helmet","HelmetProvider","useInput","Heading","Row","Col","Form","Button","toast","isNotEmpty","value","trim","SignUp","enteredLogEmail","isValid","enteredLogEmailIsValid","hasError","logEmailInputHasError","valueChangeHandler","logEmailChangeHandler","inputBlurHandler","logEmailBlurHandler","reset","resetLogEmailInput","loginFormIsValid","formSubmissionHandler","event","preventDefault","alert","console","log","logEmailClasses"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\r\nimport useInput from \"../Hooks/use-input\";\r\n\r\n//import Components\r\nimport Heading from \"../Components/Heading\";\r\n\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\r\n\r\n//Toast\r\nimport { toast } from \"react-toastify\";\r\n\r\n//Custom Style\r\nimport \"../Styles/signup.css\";\r\n\r\n\r\n\r\nconst isNotEmpty = (value) => value.trim() !== \"\";\r\n\r\nfunction SignUp() {\r\n\r\n//LOGIN\r\n//LOGIN EMAIL \r\n  // Gender Input Check\r\n  const {\r\n    value: enteredLogEmail,\r\n    isValid: enteredLogEmailIsValid,\r\n    hasError: logEmailInputHasError,\r\n    valueChangeHandler: logEmailChangeHandler,\r\n    inputBlurHandler: logEmailBlurHandler,\r\n    reset: resetLogEmailInput,\r\n  } = useInput(isNotEmpty);\r\n\r\n\r\n  let loginFormIsValid = false;\r\n\r\n  if ( enteredLogEmailIsValid ) {\r\n    loginFormIsValid = true;\r\n  }\r\n\r\n  const formSubmissionHandler = (event) => {\r\n      event.preventDefault();\r\n      if(!enteredLogEmailIsValid) {\r\n          return;\r\n      } else {\r\n          alert(\"posting\");\r\n      }\r\n      console.log(\"submitting\");\r\n      resetLogEmailInput();\r\n  }\r\n\r\n  const logEmailClasses = logEmailInputHasError\r\n  ? \"form-control form-control-sm is-invalid\"\r\n  : \"form-control form-control-sm\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <HelmetProvider>\r\n        <Helmet>\r\n          <title> Sign Up & Log In | Zom - IN </title>\r\n        </Helmet>\r\n      </HelmetProvider>\r\n      <div id=\"signUp\" className=\"signUp\">\r\n        <Col sm={11} md={9} className=\"mx-auto text-center\">\r\n          <Row>\r\n            <Col sm={12} md={6}>\r\n              <>\r\n                <Heading content=\"Log In Now!\" />\r\n                <Form>\r\n                  <Col sm={12} className=\"mb-3\" >\r\n                    <input\r\n                      type=\"email\"\r\n                      id=\"inputEmail\"\r\n                      placeholder=\"Email Address\"\r\n                      class=\"form-control form-control-sm\"\r\n                      className={logEmailClasses}\r\n                      onChange={logEmailChangeHandler}\r\n                      onBlur={logEmailBlurHandler}\r\n                      value={enteredLogEmail}\r\n                    />\r\n                    {logEmailInputHasError && (\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please enter a valid Email Address.\r\n                  </Form.Control.Feedback>\r\n                )}\r\n                  </Col>\r\n                </Form>\r\n              </>\r\n            </Col>\r\n            <Col sm={12} md={6} className=\"divider\">\r\n              fvd\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}