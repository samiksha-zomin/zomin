{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/FullTime.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport { Row, Col, Form } from \"react-bootstrap\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport useInput from \"../../Helpers/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== \"\";\n\nfunction FullTime() {\n  _s();\n\n  const [location, setlocation] = useState([]);\n  const [eduList, setEduList] = useState([]);\n  const [addData, setAdddata] = useState(\"\"); //Location\n\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/stateLocation`).then(response => {\n      setlocation(response.data);\n    });\n  }, []); //Education Level\n\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/eduLevel`).then(response => {\n      setEduList(response.data);\n    });\n  }); //JobTitle Input Check\n\n  const {\n    value: enteredJobTitle,\n    isValid: enteredJobTitleIsValid,\n    hasError: jobTitleInputHasError,\n    valueChangeHandler: jobTitleChangeHandler,\n    inputBlurHandler: jobTitleBlurHandler,\n    reset: resetjobTitle\n  } = useInput(isNotEmpty); //Salary Input Check\n\n  const {\n    value: enteredSalary,\n    isValid: enteredSalaryIsValid,\n    hasError: salaryInputHasError,\n    valueChangeHandler: salaryChangeHandler,\n    inputBlurHandler: salaryBlurHandler,\n    reset: resetSalary\n  } = useInput(isNotEmpty); //Location Input Check\n\n  const {\n    value: enteredLocation,\n    isValid: enteredLocationIsValid,\n    hasError: locationInputHasError,\n    valueChangeHandler: locationChangeHandler,\n    inputBlurHandler: locationBlurHandler,\n    reset: resetLocation\n  } = useInput(isNotEmpty); //Experience Year Input Check\n\n  const {\n    value: enteredExpYear,\n    isValid: enteredExpYearIsValid,\n    hasError: expYearInputHasError,\n    valueChangeHandler: expYearChangeHandler,\n    inputBlurHandler: expYearBlurHandler,\n    reset: resetExpYear\n  } = useInput(isNotEmpty);\n  const jobTitleClasses = jobTitleInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const salaryClasses = salaryInputHasError ? \"form-select form-select-sm is-invalid\" : \"form-select form-select-sm\";\n  const locationClasses = locationInputHasError ? \"form-select form-select-sm is-invalid\" : \"form-select form-select-sm\";\n  const expYearClasses = expYearInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const highLevelClasses = \"form-select form-select-sm\"; // = highLevelInputHasError\n  // ? \"form-select form-select-sm is-invalid\"\n  // : \"form-select form-select-sm\";\n\n  const studyFieldClasses = \"form-control form-control-sm\"; // = studyFieldInputHasError\n  //   ? \"form-control form-control-sm is-invalid\"\n  //   : \"form-control form-control-sm\";\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"my-2\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        className: \"form-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"jobTitle\",\n          className: \"required\",\n          children: \"Job Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your Job Title\",\n          autoComplete: \"off\",\n          className: \"form-control form-control-sm\",\n          className: jobTitleClasses,\n          onChange: jobTitleChangeHandler,\n          onBlur: jobTitleBlurHandler,\n          value: enteredJobTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"fs-7 text-danger\",\n          children: [\"* Make sure the Job title is correct and it is not editable\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), jobTitleInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Please fill in the job title.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        className: \"form-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"salary\",\n          className: \"required\",\n          children: \"Salary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          \"aria-label\": \"Salary\",\n          className: salaryClasses,\n          value: enteredSalary,\n          onChange: salaryChangeHandler,\n          onBlur: salaryBlurHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Please Choose One\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"MYR 1000 and Below\",\n            children: \"MYR 1000 and Below\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"MYR 1001 to MYR 2000\",\n            children: \"MYR 1001 to MYR 2000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"MYR 2001 and MYR 3000\",\n            children: \"MYR 2001 and MYR 3000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"MYR 3001 and MYR 4000\",\n            children: \"MYR 3001 and MYR 4000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"MYR 4001 and MYR 5000\",\n            children: \"MYR 4001 and MYR 5000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"MYR 5001 and Above\",\n            children: \"MYR 5001 and Above\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"salary_status\",\n            value: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), \" Do not disclose salary range to job seeker.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), salaryInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Please choose the salary range.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        className: \"form-group mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"location\",\n          className: \"required\",\n          children: \"Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          defaultValue: \"\",\n          \"aria-label\": \"Location\",\n          className: locationClasses,\n          onChange: locationChangeHandler,\n          onBlur: locationBlurHandler,\n          value: enteredLocation,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Please Choose One\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), location.map(location => {\n            const enteredLocation = location.child_name;\n            const enteredLocationID = location.child_id;\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: enteredLocation,\n              children: enteredLocation\n            }, enteredLocationID, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), locationInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Please choose your location.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        className: \"form-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fullName\",\n          className: \"required\",\n          children: \"Experience in years\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          max: \"30\",\n          placeholder: \"Enter experience in years\",\n          className: \"form-control form-control-sm\",\n          className: expYearClasses,\n          onChange: expYearChangeHandler,\n          onBlur: expYearBlurHandler,\n          value: enteredExpYear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), expYearInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Please fill in the experience.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        className: \"form-group mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"eduLevel\",\n          className: \"required\",\n          children: \"Highest Education Level\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          \"aria-label\": \"Education Level\",\n          className: highLevelClasses // onChange={highLevelChangeHandler}\n          // onBlur={highLevelBlurHandler}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Please Choose One\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), eduList.map((eduList, key) => {\n            const enteredHighLevel = eduList.child_name;\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: enteredHighLevel,\n              children: enteredHighLevel\n            }, enteredHighLevel, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        className: \"form-group mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"studyField\",\n          className: \"required\",\n          children: \"Field of Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Field of Study\",\n          className: studyFieldClasses // onChange={studyFieldChangeHandler}\n          // onBlur={studyFieldBlurHandler}\n          // value={enteredStudyField}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        className: \"form-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nationality\",\n          className: \"required\",\n          children: \"Nationality\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          defaultValue: \"\",\n          \"aria-label\": \"Nationality\",\n          className: \"form-select form-select-sm\" // onChange={locationChangeHandler}\n          // onBlur={locationBlurHandler}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Malaysian only\",\n            children: \"Malaysian Only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Not specific\",\n            children: \"Not specific\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        className: \"form-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"interviewOption\",\n          className: \"required\",\n          children: \"Interview Option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          defaultValue: \"\",\n          \"aria-label\": \"InterviewOption\",\n          className: \"form-select form-select-sm\" // onChange={locationChangeHandler}\n          // onBlur={locationBlurHandler}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Face to Face\",\n            children: \"Face to Face\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Video Call\",\n            children: \"Video Call\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Face to Face / Video Call\",\n            children: \"Face to Face / Video Call\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        className: \"form-group mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"experience\",\n          className: \"required\",\n          children: \"Job Requirement / Responsibility\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CKEditor, {\n          editor: ClassicEditor,\n          config: {\n            placeholder: \"Job Requirement / Responsibility\",\n            removePlugins: [\"Heading\", // // \"Essentials\",\n            // // \"Italic\",\n            // \"Bold\",\n            // \"Link\",\n            \"imageUpload\", \"EasyImage\", \"ImageUpload\", \"MediaEmbed\", \"BlockQuote\", // // \"List\",\n            \"Indent\", \"Table\"]\n          },\n          data: addData,\n          onReady: editor => {// You can store the \"editor\" and use when it is needed.\n            // console.log(\"Editor is ready to use!\", editor);\n          },\n          onChange: (event, editor) => {\n            const data = editor.getData();\n            setAdddata(data);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FullTime, \"YfeRAXlCWoknXfEO1bvFslS8mME=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c = FullTime;\nexport default FullTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"FullTime\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/FullTime.js"],"names":["React","useEffect","useState","Axios","Row","Col","Form","CKEditor","ClassicEditor","useInput","isNotEmpty","value","trim","FullTime","location","setlocation","eduList","setEduList","addData","setAdddata","get","process","env","REACT_APP_SERVER_DOMAIN","then","response","data","enteredJobTitle","isValid","enteredJobTitleIsValid","hasError","jobTitleInputHasError","valueChangeHandler","jobTitleChangeHandler","inputBlurHandler","jobTitleBlurHandler","reset","resetjobTitle","enteredSalary","enteredSalaryIsValid","salaryInputHasError","salaryChangeHandler","salaryBlurHandler","resetSalary","enteredLocation","enteredLocationIsValid","locationInputHasError","locationChangeHandler","locationBlurHandler","resetLocation","enteredExpYear","enteredExpYearIsValid","expYearInputHasError","expYearChangeHandler","expYearBlurHandler","resetExpYear","jobTitleClasses","salaryClasses","locationClasses","expYearClasses","highLevelClasses","studyFieldClasses","map","child_name","enteredLocationID","child_id","key","enteredHighLevel","placeholder","removePlugins","editor","event","getData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\n\nimport { Row, Col, Form } from \"react-bootstrap\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n\nimport useInput from \"../../Helpers/use-input\";\n\nconst isNotEmpty = (value) => value.trim() !== \"\";\n\nfunction FullTime() {\n  const [location, setlocation] = useState([]);\n  const [eduList, setEduList] = useState([]);\n\n  const [addData, setAdddata] = useState(\"\");\n\n  //Location\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/stateLocation`).then(\n      (response) => {\n        setlocation(response.data);\n      }\n    );\n  }, []);\n\n  //Education Level\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/eduLevel`).then(\n      (response) => {\n        setEduList(response.data);\n      }\n    );\n  });\n\n  //JobTitle Input Check\n  const {\n    value: enteredJobTitle,\n    isValid: enteredJobTitleIsValid,\n    hasError: jobTitleInputHasError,\n    valueChangeHandler: jobTitleChangeHandler,\n    inputBlurHandler: jobTitleBlurHandler,\n    reset: resetjobTitle,\n  } = useInput(isNotEmpty);\n\n  //Salary Input Check\n  const {\n    value: enteredSalary,\n    isValid: enteredSalaryIsValid,\n    hasError: salaryInputHasError,\n    valueChangeHandler: salaryChangeHandler,\n    inputBlurHandler: salaryBlurHandler,\n    reset: resetSalary,\n  } = useInput(isNotEmpty);\n\n  //Location Input Check\n  const {\n    value: enteredLocation,\n    isValid: enteredLocationIsValid,\n    hasError: locationInputHasError,\n    valueChangeHandler: locationChangeHandler,\n    inputBlurHandler: locationBlurHandler,\n    reset: resetLocation,\n  } = useInput(isNotEmpty);\n\n    //Experience Year Input Check\n    const {\n      value: enteredExpYear,\n      isValid: enteredExpYearIsValid,\n      hasError: expYearInputHasError,\n      valueChangeHandler: expYearChangeHandler,\n      inputBlurHandler: expYearBlurHandler,\n      reset: resetExpYear,\n    } = useInput(isNotEmpty);\n\n  const jobTitleClasses = jobTitleInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const salaryClasses = salaryInputHasError\n    ? \"form-select form-select-sm is-invalid\"\n    : \"form-select form-select-sm\";\n\n  const locationClasses = locationInputHasError\n    ? \"form-select form-select-sm is-invalid\"\n    : \"form-select form-select-sm\";\n\n    const expYearClasses = expYearInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const highLevelClasses = \"form-select form-select-sm\";\n  // = highLevelInputHasError\n  // ? \"form-select form-select-sm is-invalid\"\n  // : \"form-select form-select-sm\";\n\n  const studyFieldClasses = \"form-control form-control-sm\";\n  // = studyFieldInputHasError\n  //   ? \"form-control form-control-sm is-invalid\"\n  //   : \"form-control form-control-sm\";\n\n  return (\n    <Row className=\"my-2\">\n      <Form>\n        <Col sm={12} className=\"form-group mb-3\">\n          <label htmlFor=\"jobTitle\" className=\"required\">\n            Job Title\n          </label>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your Job Title\"\n            autoComplete=\"off\"\n            className=\"form-control form-control-sm\"\n            className={jobTitleClasses}\n            onChange={jobTitleChangeHandler}\n            onBlur={jobTitleBlurHandler}\n            value={enteredJobTitle}\n          />\n          <p class=\"fs-7 text-danger\">\n            * Make sure the Job title is correct and it is not editable{\" \"}\n          </p>\n\n          {jobTitleInputHasError && (\n            <Form.Control.Feedback type=\"invalid\">\n              Please fill in the job title.\n            </Form.Control.Feedback>\n          )}\n        </Col>\n\n        <Col sm={12} className=\"form-group mb-3\">\n          <label htmlFor=\"salary\" className=\"required\">\n            Salary\n          </label>\n          <select\n            aria-label=\"Salary\"\n            className={salaryClasses}\n            value={enteredSalary}\n            onChange={salaryChangeHandler}\n            onBlur={salaryBlurHandler}\n          >\n            <option value=\"\">Please Choose One</option>\n            <option value=\"MYR 1000 and Below\">MYR 1000 and Below</option>\n            <option value=\"MYR 1001 to MYR 2000\">MYR 1001 to MYR 2000</option>\n            <option value=\"MYR 2001 and MYR 3000\">MYR 2001 and MYR 3000</option>\n            <option value=\"MYR 3001 and MYR 4000\">MYR 3001 and MYR 4000</option>\n            <option value=\"MYR 4001 and MYR 5000\">MYR 4001 and MYR 5000</option>\n            <option value=\"MYR 5001 and Above\">MYR 5001 and Above</option>\n          </select>\n          <p>\n            <input type=\"checkbox\" name=\"salary_status\" value=\"0\" /> Do not\n            disclose salary range to job seeker.\n          </p>\n\n          {salaryInputHasError && (\n            <Form.Control.Feedback type=\"invalid\">\n              Please choose the salary range.\n            </Form.Control.Feedback>\n          )}\n        </Col>\n\n        <Col sm={12} className=\"form-group mb-2\">\n          <label htmlFor=\"location\" className=\"required\">\n            Location\n          </label>\n          <select\n            defaultValue={\"\"}\n            aria-label=\"Location\"\n            className={locationClasses}\n            onChange={locationChangeHandler}\n            onBlur={locationBlurHandler}\n            value={enteredLocation}\n          >\n            <option value=\"\">Please Choose One</option>\n            {location.map((location) => {\n              const enteredLocation = location.child_name;\n              const enteredLocationID = location.child_id;\n              return (\n                <option key={enteredLocationID} value={enteredLocation}>\n                  {enteredLocation}\n                </option>\n              );\n            })}\n          </select>\n          {locationInputHasError && (\n            <Form.Control.Feedback type=\"invalid\">\n              Please choose your location.\n            </Form.Control.Feedback>\n          )}\n        </Col>\n\n        <Col sm={12} className=\"form-group mb-3\">\n          <label htmlFor=\"fullName\" className=\"required\">\n            Experience in years\n          </label>\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"30\"\n            placeholder=\"Enter experience in years\"\n            className=\"form-control form-control-sm\"\n            className={expYearClasses}\n            onChange={expYearChangeHandler}\n            onBlur={expYearBlurHandler}\n            value={enteredExpYear}\n          />\n\n          {expYearInputHasError && (\n      <Form.Control.Feedback type=\"invalid\">\n        Please fill in the experience.\n      </Form.Control.Feedback>\n    )}\n        </Col>\n\n        <Col sm={12} className=\"form-group mb-2\">\n          <label htmlFor=\"eduLevel\" className=\"required\">\n            Highest Education Level\n          </label>\n          <select\n            aria-label=\"Education Level\"\n            className={highLevelClasses}\n            // onChange={highLevelChangeHandler}\n            // onBlur={highLevelBlurHandler}\n          >\n            <option value=\"\">Please Choose One</option>\n            {eduList.map((eduList, key) => {\n              const enteredHighLevel = eduList.child_name;\n              return (\n                <option key={enteredHighLevel} value={enteredHighLevel}>\n                  {enteredHighLevel}\n                </option>\n              );\n            })}\n          </select>\n\n          {/* {highLevelInputHasError && (\n            <Form.Control.Feedback type=\"invalid\">\n              Please choose your highest education Level.\n            </Form.Control.Feedback>\n          )} */}\n        </Col>\n\n        <Col sm={12} className=\"form-group mb-2\">\n          <label htmlFor=\"studyField\" className=\"required\">\n            Field of Study\n          </label>\n          <input\n            type=\"text\"\n            placeholder=\"Enter Field of Study\"\n            className={studyFieldClasses}\n            // onChange={studyFieldChangeHandler}\n            // onBlur={studyFieldBlurHandler}\n            // value={enteredStudyField}\n          />\n\n          {/* {studyFieldInputHasError && (\n            <Form.Control.Feedback type=\"invalid\">\n              Please fill in your field of study.\n            </Form.Control.Feedback>\n          )} */}\n        </Col>\n\n        <Col sm={12} className=\"form-group mb-3\">\n          <label htmlFor=\"nationality\" className=\"required\">\n            Nationality\n          </label>\n          <select\n            defaultValue={\"\"}\n            aria-label=\"Nationality\"\n            className=\"form-select form-select-sm\"\n            // onChange={locationChangeHandler}\n            // onBlur={locationBlurHandler}\n          >\n            <option value=\"Malaysian only\">Malaysian Only</option>\n            <option value=\"Not specific\">Not specific</option>\n          </select>\n\n          {/* {nameInputHasError && (\n      <Form.Control.Feedback type=\"invalid\">\n        Please fill in person-in-charge name.\n      </Form.Control.Feedback>\n    )} */}\n        </Col>\n\n        <Col sm={12} className=\"form-group mb-3\">\n          <label htmlFor=\"interviewOption\" className=\"required\">\n            Interview Option\n          </label>\n          <select\n            defaultValue={\"\"}\n            aria-label=\"InterviewOption\"\n            className=\"form-select form-select-sm\"\n            // onChange={locationChangeHandler}\n            // onBlur={locationBlurHandler}\n          >\n            <option value=\"Face to Face\">Face to Face</option>\n            <option value=\"Video Call\">Video Call</option>\n            <option value=\"Face to Face / Video Call\">\n              Face to Face / Video Call\n            </option>\n          </select>\n\n          {/* {nameInputHasError && (\n      <Form.Control.Feedback type=\"invalid\">\n        Please fill in person-in-charge name.\n      </Form.Control.Feedback>\n    )} */}\n        </Col>\n\n        <Col sm={12} className=\"form-group mb-2\">\n          <label htmlFor=\"experience\" className=\"required\">\n            Job Requirement / Responsibility\n          </label>\n          <CKEditor\n            editor={ClassicEditor}\n            config={{\n              placeholder: \"Job Requirement / Responsibility\",\n              removePlugins: [\n                \"Heading\",\n                // // \"Essentials\",\n                // // \"Italic\",\n                // \"Bold\",\n                // \"Link\",\n                \"imageUpload\",\n                \"EasyImage\",\n                \"ImageUpload\",\n                \"MediaEmbed\",\n                \"BlockQuote\",\n                // // \"List\",\n                \"Indent\",\n                \"Table\",\n              ],\n            }}\n            data={addData}\n            onReady={(editor) => {\n              // You can store the \"editor\" and use when it is needed.\n              // console.log(\"Editor is ready to use!\", editor);\n            }}\n            onChange={(event, editor) => {\n              const data = editor.getData();\n              setAdddata(data);\n            }}\n          />\n          {/* {positionInputHasError && (\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please enter your position.\n                        </Form.Control.Feedback>\n                      )} */}\n        </Col>\n      </Form>\n    </Row>\n  );\n}\n\nexport default FullTime;\n"]},"metadata":{},"sourceType":"module"}