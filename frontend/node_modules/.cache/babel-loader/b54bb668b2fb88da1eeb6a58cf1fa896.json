{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Home/Comment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from 'react';\nimport Axios from 'axios';\nimport { Container, Col, Form, Row } from \"react-bootstrap\";\nimport useInput from '../../Helpers/use-input';\nimport { BsClockFill } from \"react-icons/bs\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== \"\";\n\nfunction Comment(props) {\n  _s();\n\n  const userID = props.userID;\n  const postID = props.postID;\n  const [viewProfile, setViewProfile] = useState(\"avatar/male.svg\");\n  const [viewComment, setViewComment] = useState([]);\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/home/userProfile/` + userID).then(response => {\n      const profileDetail1 = response.data[0];\n      const profileDetail2 = response.data[1];\n      var profile;\n\n      if (profileDetail1.length === 0) {\n        if (profileDetail2[0].gender === \"Male\") {\n          profile = `${process.env.REACT_APP_SERVER_DOMAIN}/public/Assests/Images/avatar/male.svg`;\n          setViewProfile(profile);\n        } else {\n          profile = `${process.env.REACT_APP_SERVER_DOMAIN}/public/Assests/Images/avatar/female.svg`;\n          setViewProfile(profile);\n        }\n      } else {\n        profile = `${process.env.REACT_APP_SERVER_DOMAIN}/public/Assests/Images/user/` + profileDetail1[0].profile_photo;\n        setViewProfile(profile);\n      }\n    });\n  }, [userID]);\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/home/commentlist/` + postID).then(response => {\n      setViewComment(response.data);\n      console.log(response.data);\n    });\n  }, [postID]); //COMMENT Input Check\n\n  const {\n    value: enteredComment,\n    isValid: enteredCommentIsValid,\n    hasError: commentInputHasError,\n    valueChangeHandler: commentChangeHandler,\n    inputBlurHandler: commentBlurHandler,\n    reset: resetCommentInput\n  } = useInput(isNotEmpty);\n  let commentFormIsValid = false;\n\n  if (enteredComment !== \"\") {\n    commentFormIsValid = true;\n  }\n\n  const commentFormSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredCommentIsValid) {\n      return;\n    } else {\n      Axios.post(`${process.env.REACT_APP_SERVER_DOMAIN}/home/comment/`, {\n        userID: userID,\n        postID: postID,\n        enteredComment: enteredComment\n      }).then(response => {\n        const newCommentData = response.data[1];\n\n        if (response.data[0].error) {\n          return toast.error( /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(BiMinusCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: response.data[0].error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }, this));\n        } else {\n          return [toast.success( /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(BiMessageCheck, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 23\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: response.data[0].success\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this)), setViewComment([{\n            commentID: newCommentData[0].commentID,\n            post_id: newCommentData[0].post_id,\n            comment: newCommentData[0].comment,\n            comment_user_id: newCommentData[0].comment_user_id,\n            company: newCommentData[0].company,\n            name: newCommentData[0].name,\n            companyname: newCommentData[0].companyname,\n            comment_time: newCommentData[0].comment_time\n          }, ...viewComment])];\n        }\n      });\n    }\n\n    resetCommentInput();\n  };\n\n  const commentClasses = commentInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: commentFormSubmissionHandler,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"align-items-center py-3\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 1,\n          sm: 1,\n          className: \"p-0 ps-2 ps-xs-1\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: viewProfile,\n            alt: \"Zom-In User\",\n            className: \" col w-100 rounded-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 8,\n          sm: 9,\n          className: \"pe-xs-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"comment\",\n              placeholder: \"Comments\",\n              autoComplete: \"off\",\n              className: commentClasses,\n              onChange: commentChangeHandler,\n              onBlur: commentBlurHandler,\n              value: enteredComment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), commentInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please share your thought on this post.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2,\n          sm: 2,\n          className: \"p-0\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-sm btn-primary\",\n            type: \"submit\",\n            disabled: !commentFormIsValid,\n            children: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this), viewComment.map((commentDetails, key) => {\n      const commentID = commentDetails.commentID;\n      const postID = commentDetails.post_id;\n      const comment = commentDetails.comment;\n      const commentOwnerID = commentDetails.comment_user_id;\n      const companyRole = commentDetails.company;\n      const commentUserName = commentDetails.name;\n      const commentCompanyName = commentDetails.companyname;\n      const comment_time = new Date(commentDetails.comment_time);\n      const commentTime = comment_time.toLocaleDateString(\"en-GB\", {\n        day: \"numeric\",\n        month: \"short\",\n        year: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true\n      }).replace(/ /g, \" \");\n      return /*#__PURE__*/_jsxDEV(Row, {\n        className: \"py-1\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 1,\n          sm: 1,\n          className: \"p-0 ps-2\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: viewProfile,\n            alt: \"Zom-IN User\",\n            className: \" col w-100 rounded-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 11,\n          sm: 11,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 border rounded bg-light bg-gradient\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"fw-bold mb-0\",\n              children: companyRole === 1 ? /*#__PURE__*/_jsxDEV(\"a\", {\n                // href={postCompanyLink}\n                target: \"_blank\",\n                rel: \"noreferrer\",\n                className: \"text-decoration-none text-dark\",\n                children: commentCompanyName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/home\",\n                className: \"text-decoration-none text-dark\",\n                children: [\" \", commentUserName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-0\",\n              children: comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted fw-light fs-7\",\n            children: [/*#__PURE__*/_jsxDEV(BsClockFill, {\n              size: 12,\n              className: \"me-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), commentTime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Comment, \"pWg1RJC/w7BLm060DPN8bAt3Zzk=\", false, function () {\n  return [useInput];\n});\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Home/Comment.js"],"names":["React","useState","useEffect","Fragment","Axios","Container","Col","Form","Row","useInput","BsClockFill","toast","isNotEmpty","value","trim","Comment","props","userID","postID","viewProfile","setViewProfile","viewComment","setViewComment","get","process","env","REACT_APP_SERVER_DOMAIN","then","response","profileDetail1","data","profileDetail2","profile","length","gender","profile_photo","console","log","enteredComment","isValid","enteredCommentIsValid","hasError","commentInputHasError","valueChangeHandler","commentChangeHandler","inputBlurHandler","commentBlurHandler","reset","resetCommentInput","commentFormIsValid","commentFormSubmissionHandler","event","preventDefault","post","newCommentData","error","success","commentID","post_id","comment","comment_user_id","company","name","companyname","comment_time","commentClasses","map","commentDetails","key","commentOwnerID","companyRole","commentUserName","commentCompanyName","Date","commentTime","toLocaleDateString","day","month","year","hour","minute","hour12","replace"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment} from 'react';\nimport Axios from 'axios';\nimport { Container, Col, Form, Row } from \"react-bootstrap\";\n\nimport useInput from '../../Helpers/use-input';\nimport {\n  BsClockFill\n} from \"react-icons/bs\";\nimport { toast } from \"react-toastify\";\n\n\n\nconst isNotEmpty = (value) => value.trim() !== \"\";\n\nfunction Comment(props) {\n\n    const userID = props.userID;\n    const postID = props.postID;\n  const [viewProfile, setViewProfile] = useState(\"avatar/male.svg\");\n  const [viewComment, setViewComment] = useState([]);\n\n    useEffect(() => {\n        Axios.get(\n          `${process.env.REACT_APP_SERVER_DOMAIN}/home/userProfile/` + userID\n        ).then((response) => {\n          const profileDetail1 = response.data[0];\n          const profileDetail2 = response.data[1];\n    \n          var profile;\n    \n          if (profileDetail1.length === 0) {\n            if (profileDetail2[0].gender === \"Male\") {\n              profile = `${process.env.REACT_APP_SERVER_DOMAIN}/public/Assests/Images/avatar/male.svg`;\n              setViewProfile(profile);\n            } else {\n              profile = `${process.env.REACT_APP_SERVER_DOMAIN}/public/Assests/Images/avatar/female.svg`;\n              setViewProfile(profile);\n            }\n          } else {\n            profile =\n              `${process.env.REACT_APP_SERVER_DOMAIN}/public/Assests/Images/user/` +\n              profileDetail1[0].profile_photo;\n            setViewProfile(profile);\n          }\n        });\n      }, [userID]);\n\n      useEffect(() => {\n        Axios.get(\n          `${process.env.REACT_APP_SERVER_DOMAIN}/home/commentlist/` + postID\n        ).then((response) => {\n          setViewComment(response.data);\n          console.log(response.data);\n    \n        });\n      }, [postID]);\n\n\n          //COMMENT Input Check\n          const {\n            value: enteredComment,\n            isValid: enteredCommentIsValid,\n            hasError: commentInputHasError,\n            valueChangeHandler: commentChangeHandler,\n            inputBlurHandler: commentBlurHandler,\n            reset: resetCommentInput,\n          } = useInput(isNotEmpty);\n      \n        let commentFormIsValid = false;\n      \n        if(enteredComment !== \"\") {\n          commentFormIsValid = true;\n        }\n      \n        const commentFormSubmissionHandler = (event) => {\n          event.preventDefault();\n      \n          if(!enteredCommentIsValid) {\n            return;\n          } else {\n            Axios.post(\n              `${process.env.REACT_APP_SERVER_DOMAIN}/home/comment/`,\n              {\n                userID:userID,\n                postID:postID,\n                enteredComment:enteredComment,\n              }\n            ).then ((response) => {\n              const newCommentData = response.data[1];\n              if (response.data[0].error) {\n                return toast.error(\n                  <Fragment>\n                    <BiMinusCircle /> <span>{response.data[0].error}</span>\n                  </Fragment>\n                );\n              } else {\n                return [\n                  toast.success(\n                    <Fragment>\n                      <BiMessageCheck /> <span>{response.data[0].success}</span>\n                    </Fragment>\n                  ),\n                  setViewComment([\n                    {\n                      commentID: newCommentData[0].commentID,\n                      post_id: newCommentData[0].post_id,\n                      comment: newCommentData[0].comment,\n                      comment_user_id: newCommentData[0].comment_user_id,\n                      company: newCommentData[0].company,\n                      name: newCommentData[0].name,\n                      companyname: newCommentData[0].companyname,\n                      comment_time: newCommentData[0].comment_time,\n                    },\n                    ...viewComment,\n                  ]),\n                ];\n              }\n            })\n          }\n          resetCommentInput();\n        };\n      \n        const commentClasses = commentInputHasError\n          ? \"form-control form-control-sm is-invalid\"\n          : \"form-control form-control-sm\";\n\n\n    return (\n        <Container>\n        <Form onSubmit={commentFormSubmissionHandler}>\n          <Row className=\"align-items-center py-3\">\n          \n            <Col xs={1} sm={1} className=\"p-0 ps-2 ps-xs-1\">\n              <img\n                src={viewProfile}\n                alt=\"Zom-In User\"\n                className=\" col w-100 rounded-circle\"\n              />\n            </Col>\n            <Col xs={8} sm={9} className=\"pe-xs-0\">\n              <div className=\"\">\n                <input\n                  type=\"text\"\n                  id=\"comment\"\n                  placeholder=\"Comments\"\n                  autoComplete=\"off\"\n                  className={commentClasses}\n                    onChange={commentChangeHandler}\n                    onBlur={commentBlurHandler}\n                    value={enteredComment}\n                />\n                \n                {commentInputHasError && (\n                  <Form.Control.Feedback type=\"invalid\">\n                      Please share your thought on this post.\n                    </Form.Control.Feedback>\n                  )}\n              </div>\n            </Col>\n            <Col xs={2} sm={2} className=\"p-0\">\n              <button \n              className=\"btn btn-sm btn-primary\"\n              type=\"submit\"\n              disabled={!commentFormIsValid}>\n                Comment\n              </button>\n            </Col>\n            \n          </Row>\n          </Form> \n          {viewComment.map((commentDetails, key) => {\n              const commentID = commentDetails.commentID\n              const postID = commentDetails.post_id;\n              const comment = commentDetails.comment;\n              const commentOwnerID = commentDetails.comment_user_id;\n              const companyRole = commentDetails.company;\n              const commentUserName = commentDetails.name;\n              const commentCompanyName = commentDetails.companyname;\n              const comment_time = new Date(commentDetails.comment_time);\n\n              const commentTime = comment_time\n                .toLocaleDateString(\"en-GB\", {\n                  day: \"numeric\",\n                  month: \"short\",\n                  year: \"numeric\",\n                  hour: \"2-digit\",\n                  minute: \"2-digit\",\n                  hour12: true,\n                })\n                .replace(/ /g, \" \");\n             return (\n              <Row className=\"py-1\">\n            <Col xs={1} sm={1} className=\"p-0 ps-2\">\n              <img\n                 src={viewProfile}\n                alt=\"Zom-IN User\"\n                className=\" col w-100 rounded-circle\"\n              />\n            </Col>\n\n\n\n            <Col xs={11} sm={11}>\n              <div className=\"p-2 border rounded bg-light bg-gradient\">\n              <p className=\"fw-bold mb-0\">\n              {companyRole === 1 ? (\n                      <a\n                        // href={postCompanyLink}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        className=\"text-decoration-none text-dark\"\n                      >\n                        {commentCompanyName}\n                      </a>\n                    ) : (\n                      <a\n                        href=\"/home\"\n                        className=\"text-decoration-none text-dark\"\n                      >\n                        {\" \"}\n                        {commentUserName}\n                      </a>\n                    )}\n              </p>\n                <p className=\"mb-0\">\n                  {comment}\n                </p>\n              </div>\n              <p className=\"text-muted fw-light fs-7\">\n                <BsClockFill size={12} className=\"me-1\" />\n                {commentTime}\n              </p>\n            </Col>\n          </Row>\n             )\n          \n          })}\n                  \n                  </Container>\n    )\n}\n\nexport default Comment\n"]},"metadata":{},"sourceType":"module"}