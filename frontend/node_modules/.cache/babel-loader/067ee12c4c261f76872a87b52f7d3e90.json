{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ZomAdminPartner.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { forwardRef, useState, useEffect, useContext, Fragment } from \"react\";\nimport Axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { AuthContext } from \"../Helpers/AuthContext\";\nimport NotFound from \"../Pages/NotFound\";\nimport Heading from \"../Components/Heading\";\nimport { BiBlock, BiXCircle, BiCheckCircle, BiMinusCircle, BiMessageCheck } from \"react-icons/bi\";\nimport { toast } from \"react-toastify\";\nimport MaterialTable from \"material-table\";\nimport { Link } from \"@material-ui/core\";\nimport { alpha } from \"@material-ui/core/styles\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ZomAdminPartner() {\n  _s();\n\n  const {\n    authState,\n    setAuthState\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!localStorage.getItem(\"accessToken\")) {\n      navigate(\"/signup\");\n    }\n  });\n  const [userList, setUserList] = useState([]);\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/zomAdminPartner/`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      setUserList(response.data);\n    });\n  }, []);\n  const tableIcons = {\n    Add: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(AddBox, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 37\n    }, this)),\n    Check: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(Check, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 39\n    }, this)),\n    Clear: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(Clear, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 39\n    }, this)),\n    Delete: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(DeleteOutline, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 40\n    }, this)),\n    DetailPanel: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(ChevronRight, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)),\n    Edit: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(Edit, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 38\n    }, this)),\n    Export: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(SaveAlt, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 40\n    }, this)),\n    Filter: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(FilterList, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 40\n    }, this)),\n    FirstPage: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(FirstPage, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 43\n    }, this)),\n    LastPage: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(LastPage, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 42\n    }, this)),\n    NextPage: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(ChevronRight, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 42\n    }, this)),\n    PreviousPage: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(ChevronLeft, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)),\n    ResetSearch: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(Clear, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 45\n    }, this)),\n    Search: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(Search, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 40\n    }, this)),\n    SortArrow: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(ArrowDownward, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)),\n    ThirdStateCheck: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(Remove, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)),\n    ViewColumn: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(ViewColumn, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 44\n    }, this))\n  };\n  const columns = [// { title: \"Time\", field: \"create_time\", type: \"datetime\", sorting: true },\n  {\n    title: \"Employer Name\",\n    field: \"companyname\",\n    editable: \"never\"\n  }, {\n    title: \"Name\",\n    field: \"name\",\n    editable: \"never\"\n  }, {\n    title: \"Email\",\n    field: \"email\",\n    filterPlaceholder: \"Filter by Email\",\n    editable: \"never\"\n  }, {\n    title: \"Phone\",\n    field: \"contnum\",\n    editable: \"never\"\n  }, {\n    title: \"Role\",\n    field: \"role\",\n    editable: \"never\"\n  }, {\n    title: \"Location\",\n    field: \"location_com\",\n    editable: \"never\"\n  }, {\n    title: \"Industry\",\n    field: \"industry\",\n    editable: \"never\"\n  }, {\n    title: \"Joining Date\",\n    field: \"joining_date\",\n    type: \"date\"\n  }, {\n    title: \"Interview\",\n    field: \"interview\"\n  }, {\n    title: \"Landing Page\",\n    field: \"publish\",\n    align: \"center\",\n    editable: \"never\",\n    lookup: {\n      1: \"Publish\",\n      0: \"Hide\"\n    }\n  }, {\n    title: \"Remarks\",\n    field: \"remarks\"\n  }];\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authState,\n      setAuthState\n    },\n    children: /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HelmetProvider, {\n        children: /*#__PURE__*/_jsxDEV(Helmet, {\n          children: /*#__PURE__*/_jsxDEV(\"title\", {\n            children: \" Admin | Zom - IN \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"adminUser\",\n        className: \"adminUser my-2\",\n        children: authState.admin === 1 ? /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mx-5\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            className: \"mx-auto my-2\",\n            children: /*#__PURE__*/_jsxDEV(Heading, {\n              content: \"Total Employer\",\n              design: \"h4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            className: \"mx-auto my-2\",\n            children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n              title: \"Total Employer\",\n              columns: columns,\n              icons: tableIcons,\n              data: userList,\n              options: {\n                sorting: true,\n                filtering: true,\n                search: true,\n                searchFieldAlignment: \"right\",\n                searchAutoFocus: true,\n                searchFieldVariant: \"standard\",\n                paging: true,\n                pageSizeOptions: [25, 50, 100],\n                pageSize: 25,\n                exportButton: true,\n                exportAllData: true,\n                exportFileName: \"Total User\",\n                actionsColumnIndex: -1,\n                selection: true,\n                showSelectAllCheckbox: false,\n                showTextRowsSelected: false,\n                grouping: false,\n                columnsButton: true\n              },\n              editable: {\n                onRowUpdate: (newRow, oldRow) => new Promise((resolve, reject) => {\n                  Axios.patch(`${process.env.REACT_APP_SERVER_DOMAIN}/zomAdminPartner/ss` + newRow).then(response => {\n                    if (response.data.error) {\n                      return toast.error( /*#__PURE__*/_jsxDEV(Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(BiMinusCircle, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 172,\n                          columnNumber: 33\n                        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: response.data.error\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 173,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 171,\n                        columnNumber: 31\n                      }, this));\n                    } else {\n                      return [toast.success( /*#__PURE__*/_jsxDEV(Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(BiMessageCheck, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 180,\n                          columnNumber: 35\n                        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: response.data.success\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 181,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 179,\n                        columnNumber: 33\n                      }, this)), setUserList(response.data.list)];\n                    }\n                  }); // const updateData= [...userList]\n                  // updateData[oldRow.userList.id]=newRow\n                  // setUserList(updateData)\n\n                  console.log(newRow.application_id, oldRow); // setTimeout(()=> resolve(),500)\n                })\n              } // actions={[\n              //   {\n              //     icon: () => <BiCheckCircle />,\n              //     tooltip: \"UnBlock the User\",\n              //     isFreeAction: false,\n              //     onClick: (e, data) => {\n              //       Axios.patch(\n              //         `${process.env.REACT_APP_SERVER_DOMAIN}/zomAdminEmployer/unblockUser`,\n              //         data\n              //       ).then((response) => {\n              //         if (response.data.error) {\n              //           return toast.error(\n              //             <Fragment>\n              //               <BiMinusCircle />{\" \"}\n              //               <span>{response.data.error}</span>\n              //             </Fragment>\n              //           );\n              //         } else {\n              //           return [\n              //             toast.success(\n              //               <Fragment>\n              //                 <BiMessageCheck />{\" \"}\n              //                 <span>{response.data.success}</span>\n              //               </Fragment>\n              //             ),\n              //             setUserList(response.data.list),\n              //           ];\n              //         }\n              //       });\n              //     },\n              //   },\n              //   {\n              //     icon: () => <BiBlock />,\n              //     tooltip: \"Block the User\",\n              //     isFreeAction: false,\n              //     onClick: (e, data) => {\n              //       Axios.patch(\n              //         `${process.env.REACT_APP_SERVER_DOMAIN}/zomAdminEmployer/blockUser`,\n              //         data\n              //       ).then((response) => {\n              //         if (response.data.error) {\n              //           return toast.error(\n              //             <Fragment>\n              //               <BiMinusCircle />{\" \"}\n              //               <span>{response.data.error}</span>\n              //             </Fragment>\n              //           );\n              //         } else {\n              //           return [\n              //             toast.success(\n              //               <Fragment>\n              //                 <BiMessageCheck />{\" \"}\n              //                 <span>{response.data.success}</span>\n              //               </Fragment>\n              //             ),\n              //             setUserList(response.data.list),\n              //           ];\n              //         }\n              //       });\n              //     },\n              //   },\n              // ]}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ZomAdminPartner, \"tRuNQKQifmVUytXHKGoKA2IIbwA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ZomAdminPartner;\nexport default ZomAdminPartner;\n\nvar _c;\n\n$RefreshReg$(_c, \"ZomAdminPartner\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ZomAdminPartner.jsx"],"names":["React","forwardRef","useState","useEffect","useContext","Fragment","Axios","useNavigate","Row","Col","Helmet","HelmetProvider","AuthContext","NotFound","Heading","BiBlock","BiXCircle","BiCheckCircle","BiMinusCircle","BiMessageCheck","toast","MaterialTable","Link","alpha","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","ZomAdminPartner","authState","setAuthState","navigate","localStorage","getItem","userList","setUserList","get","process","env","REACT_APP_SERVER_DOMAIN","headers","accessToken","then","response","data","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","columns","title","field","editable","filterPlaceholder","type","align","lookup","admin","sorting","filtering","search","searchFieldAlignment","searchAutoFocus","searchFieldVariant","paging","pageSizeOptions","pageSize","exportButton","exportAllData","exportFileName","actionsColumnIndex","selection","showSelectAllCheckbox","showTextRowsSelected","grouping","columnsButton","onRowUpdate","newRow","oldRow","Promise","resolve","reject","patch","error","success","list","console","log","application_id"],"mappings":";;;AAAA,OAAOA,KAAP,IACEC,UADF,EAEEC,QAFF,EAGEC,SAHF,EAIEC,UAJF,EAKEC,QALF,QAMO,OANP;AAOA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,oBAAvC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,SACEC,OADF,EAEEC,SAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,cALF,QAMO,gBANP;AAOA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;;;AAEA,SAASC,eAAT,GAA2B;AAAA;;AACzB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BrC,UAAU,CAACQ,WAAD,CAA9C;AAEA,QAAM8B,QAAQ,GAAGnC,WAAW,EAA5B;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACwC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAL,EAA0C;AACxCF,MAAAA,QAAQ,CAAC,SAAD,CAAR;AACD;AACF,GAJQ,CAAT;AAMA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0B5C,QAAQ,CAAC,EAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CAACyC,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,uBAAwB,mBAAjD,EAAqE;AACnEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,WAAW,EAAET,YAAY,CAACC,OAAb,CAAqB,aAArB;AADN;AAD0D,KAArE,EAIGS,IAJH,CAISC,QAAD,IAAc;AACpBR,MAAAA,WAAW,CAACQ,QAAQ,CAACC,IAAV,CAAX;AACD,KAND;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,QAAMC,UAAU,GAAG;AACjBC,IAAAA,GAAG,eAAExD,UAAU,CAAC,CAACyD,KAAD,EAAQC,GAAR,kBAAgB,QAAC,MAAD,OAAYD,KAAZ;AAAmB,MAAA,GAAG,EAAEC;AAAxB;AAAA;AAAA;AAAA;AAAA,YAAjB,CADE;AAEjBjC,IAAAA,KAAK,eAAEzB,UAAU,CAAC,CAACyD,KAAD,EAAQC,GAAR,kBAAgB,QAAC,KAAD,OAAWD,KAAX;AAAkB,MAAA,GAAG,EAAEC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAAjB,CAFA;AAGjB9B,IAAAA,KAAK,eAAE5B,UAAU,CAAC,CAACyD,KAAD,EAAQC,GAAR,kBAAgB,QAAC,KAAD,OAAWD,KAAX;AAAkB,MAAA,GAAG,EAAEC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAAjB,CAHA;AAIjBC,IAAAA,MAAM,eAAE3D,UAAU,CAAC,CAACyD,KAAD,EAAQC,GAAR,kBAAgB,QAAC,aAAD,OAAmBD,KAAnB;AAA0B,MAAA,GAAG,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAAjB,CAJD;AAKjBE,IAAAA,WAAW,eAAE5D,UAAU,CAAC,CAACyD,KAAD,EAAQC,GAAR,kBACtB,QAAC,YAAD,OAAkBD,KAAlB;AAAyB,MAAA,GAAG,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA,YADqB,CALN;AAQjB5B,IAAAA,IAAI,eAAE9B,UAAU,CAAC,CAACyD,KAAD,EAAQC,GAAR,kBAAgB,QAAC,IAAD,OAAUD,KAAV;AAAiB,MAAA,GAAG,EAAEC;AAAtB;AAAA;AAAA;AAAA;AAAA,YAAjB,CARC;AASjBG,IAAAA,MAAM,eAAE7D,UAAU,CAAC,CAACyD,KAAD,EAAQC,GAAR,kBAAgB,QAAC,OAAD,OAAaD,KAAb;AAAoB,MAAA,GAAG,EAAEC;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAjB,CATD;AAUjBI,IAAAA,MAAM,eAAE9D,UAAU,CAAC,CAACyD,KAAD,EAAQC,GAAR,kBAAgB,QAAC,UAAD,OAAgBD,KAAhB;AAAuB,MAAA,GAAG,EAAEC;AAA5B;AAAA;AAAA;AAAA;AAAA,YAAjB,CAVD;AAWjB1B,IAAAA,SAAS,eAAEhC,UAAU,CAAC,CAACyD,KAAD,EAAQC,GAAR,kBAAgB,QAAC,SAAD,OAAeD,KAAf;AAAsB,MAAA,GAAG,EAAEC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAjB,CAXJ;AAYjBzB,IAAAA,QAAQ,eAAEjC,UAAU,CAAC,CAACyD,KAAD,EAAQC,GAAR,kBAAgB,QAAC,QAAD,OAAcD,KAAd;AAAqB,MAAA,GAAG,EAAEC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAAjB,CAZH;AAajBK,IAAAA,QAAQ,eAAE/D,UAAU,CAAC,CAACyD,KAAD,EAAQC,GAAR,kBAAgB,QAAC,YAAD,OAAkBD,KAAlB;AAAyB,MAAA,GAAG,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA,YAAjB,CAbH;AAcjBM,IAAAA,YAAY,eAAEhE,UAAU,CAAC,CAACyD,KAAD,EAAQC,GAAR,kBACvB,QAAC,WAAD,OAAiBD,KAAjB;AAAwB,MAAA,GAAG,EAAEC;AAA7B;AAAA;AAAA;AAAA;AAAA,YADsB,CAdP;AAiBjBO,IAAAA,WAAW,eAAEjE,UAAU,CAAC,CAACyD,KAAD,EAAQC,GAAR,kBAAgB,QAAC,KAAD,OAAWD,KAAX;AAAkB,MAAA,GAAG,EAAEC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAAjB,CAjBN;AAkBjBtB,IAAAA,MAAM,eAAEpC,UAAU,CAAC,CAACyD,KAAD,EAAQC,GAAR,kBAAgB,QAAC,MAAD,OAAYD,KAAZ;AAAmB,MAAA,GAAG,EAAEC;AAAxB;AAAA;AAAA;AAAA;AAAA,YAAjB,CAlBD;AAmBjBQ,IAAAA,SAAS,eAAElE,UAAU,CAAC,CAACyD,KAAD,EAAQC,GAAR,kBACpB,QAAC,aAAD,OAAmBD,KAAnB;AAA0B,MAAA,GAAG,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,YADmB,CAnBJ;AAsBjBS,IAAAA,eAAe,eAAEnE,UAAU,CAAC,CAACyD,KAAD,EAAQC,GAAR,kBAC1B,QAAC,MAAD,OAAYD,KAAZ;AAAmB,MAAA,GAAG,EAAEC;AAAxB;AAAA;AAAA;AAAA;AAAA,YADyB,CAtBV;AAyBjBrB,IAAAA,UAAU,eAAErC,UAAU,CAAC,CAACyD,KAAD,EAAQC,GAAR,kBAAgB,QAAC,UAAD,OAAgBD,KAAhB;AAAuB,MAAA,GAAG,EAAEC;AAA5B;AAAA;AAAA;AAAA;AAAA,YAAjB;AAzBL,GAAnB;AA4BA,QAAMU,OAAO,GAAG,CACd;AAEA;AAAEC,IAAAA,KAAK,EAAE,eAAT;AAA0BC,IAAAA,KAAK,EAAE,aAAjC;AAAgDC,IAAAA,QAAQ,EAAE;AAA1D,GAHc,EAId;AAAEF,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE,MAAxB;AAAgCC,IAAAA,QAAQ,EAAE;AAA1C,GAJc,EAKd;AACEF,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,KAAK,EAAE,OAFT;AAGEE,IAAAA,iBAAiB,EAAE,iBAHrB;AAIED,IAAAA,QAAQ,EAAE;AAJZ,GALc,EAWd;AAAEF,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,KAAK,EAAE,SAAzB;AAAoCC,IAAAA,QAAQ,EAAE;AAA9C,GAXc,EAYd;AAAEF,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE,MAAxB;AAAgCC,IAAAA,QAAQ,EAAE;AAA1C,GAZc,EAad;AAAEF,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,KAAK,EAAE,cAA5B;AAA4CC,IAAAA,QAAQ,EAAE;AAAtD,GAbc,EAcd;AAAEF,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,KAAK,EAAE,UAA5B;AAAwCC,IAAAA,QAAQ,EAAE;AAAlD,GAdc,EAed;AAAEF,IAAAA,KAAK,EAAE,cAAT;AAAyBC,IAAAA,KAAK,EAAE,cAAhC;AAAgDG,IAAAA,IAAI,EAAE;AAAtD,GAfc,EAgBd;AAAEJ,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GAhBc,EAiBd;AACED,IAAAA,KAAK,EAAE,cADT;AAEEC,IAAAA,KAAK,EAAE,SAFT;AAGEI,IAAAA,KAAK,EAAE,QAHT;AAIEH,IAAAA,QAAQ,EAAE,OAJZ;AAKEI,IAAAA,MAAM,EAAE;AAAE,SAAG,SAAL;AAAgB,SAAG;AAAnB;AALV,GAjBc,EAwBd;AAAEN,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GAxBc,CAAhB;AA2BA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAE/B,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAA7B;AAAA,2BACE,QAAC,QAAD;AAAA,8BACE,QAAC,cAAD;AAAA,+BACE,QAAC,MAAD;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,EAAE,EAAC,WAAR;AAAoB,QAAA,SAAS,EAAC,gBAA9B;AAAA,kBACGD,SAAS,CAACqC,KAAV,KAAoB,CAApB,gBACC,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,EAAT;AAAa,YAAA,SAAS,EAAC,cAAvB;AAAA,mCACE,QAAC,OAAD;AAAS,cAAA,OAAO,EAAC,gBAAjB;AAAkC,cAAA,MAAM,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,EAAT;AAAa,YAAA,SAAS,EAAC,cAAvB;AAAA,mCACE,QAAC,aAAD;AACE,cAAA,KAAK,EAAC,gBADR;AAEE,cAAA,OAAO,EAAER,OAFX;AAGE,cAAA,KAAK,EAAEb,UAHT;AAIE,cAAA,IAAI,EAAEX,QAJR;AAKE,cAAA,OAAO,EAAE;AACPiC,gBAAAA,OAAO,EAAE,IADF;AAEPC,gBAAAA,SAAS,EAAE,IAFJ;AAGPC,gBAAAA,MAAM,EAAE,IAHD;AAIPC,gBAAAA,oBAAoB,EAAE,OAJf;AAKPC,gBAAAA,eAAe,EAAE,IALV;AAMPC,gBAAAA,kBAAkB,EAAE,UANb;AAOPC,gBAAAA,MAAM,EAAE,IAPD;AAQPC,gBAAAA,eAAe,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,CARV;AASPC,gBAAAA,QAAQ,EAAE,EATH;AAUPC,gBAAAA,YAAY,EAAE,IAVP;AAWPC,gBAAAA,aAAa,EAAE,IAXR;AAYPC,gBAAAA,cAAc,EAAE,YAZT;AAaPC,gBAAAA,kBAAkB,EAAE,CAAC,CAbd;AAcPC,gBAAAA,SAAS,EAAE,IAdJ;AAePC,gBAAAA,qBAAqB,EAAE,KAfhB;AAgBPC,gBAAAA,oBAAoB,EAAE,KAhBf;AAiBPC,gBAAAA,QAAQ,EAAE,KAjBH;AAkBPC,gBAAAA,aAAa,EAAE;AAlBR,eALX;AAyBE,cAAA,QAAQ,EAAE;AACRC,gBAAAA,WAAW,EAAE,CAACC,MAAD,EAASC,MAAT,KACX,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/B/F,kBAAAA,KAAK,CAACgG,KAAN,CACG,GAAEtD,OAAO,CAACC,GAAR,CAAYC,uBAAwB,qBAAvC,GACA+C,MAFF,EAGE5C,IAHF,CAGQC,QAAD,IAAc;AACnB,wBAAIA,QAAQ,CAACC,IAAT,CAAcgD,KAAlB,EAAyB;AACvB,6BAAOnF,KAAK,CAACmF,KAAN,eACL,QAAC,QAAD;AAAA,gDACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gCADF,EACoB,GADpB,eAEE;AAAA,oCAAOjD,QAAQ,CAACC,IAAT,CAAcgD;AAArB;AAAA;AAAA;AAAA;AAAA,gCAFF;AAAA;AAAA;AAAA;AAAA;AAAA,8BADK,CAAP;AAMD,qBAPD,MAOO;AACL,6BAAO,CACLnF,KAAK,CAACoF,OAAN,eACE,QAAC,QAAD;AAAA,gDACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gCADF,EACqB,GADrB,eAEE;AAAA,oCAAOlD,QAAQ,CAACC,IAAT,CAAciD;AAArB;AAAA;AAAA;AAAA;AAAA,gCAFF;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CADK,EAOL1D,WAAW,CAACQ,QAAQ,CAACC,IAAT,CAAckD,IAAf,CAPN,CAAP;AASD;AACF,mBAtBD,EAD+B,CAyB/B;AACA;AACA;;AACAC,kBAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACW,cAAnB,EAAmCV,MAAnC,EA5B+B,CA6B/B;AACD,iBA9BD;AAFM,eAzBZ,CA2DE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAxHF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,gBAmIC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AApIJ;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkJD;;GA9NQ3D,e;UAGUhC,W;;;KAHVgC,e;AAgOT,eAAeA,eAAf","sourcesContent":["import React, {\n  forwardRef,\n  useState,\n  useEffect,\n  useContext,\n  Fragment,\n} from \"react\";\nimport Axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { AuthContext } from \"../Helpers/AuthContext\";\nimport NotFound from \"../Pages/NotFound\";\n\nimport Heading from \"../Components/Heading\";\n\nimport {\n  BiBlock,\n  BiXCircle,\n  BiCheckCircle,\n  BiMinusCircle,\n  BiMessageCheck,\n} from \"react-icons/bi\";\nimport { toast } from \"react-toastify\";\n\nimport MaterialTable from \"material-table\";\n\nimport { Link } from \"@material-ui/core\";\nimport { alpha } from \"@material-ui/core/styles\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\n\nfunction ZomAdminPartner() {\n  const { authState, setAuthState } = useContext(AuthContext);\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!localStorage.getItem(\"accessToken\")) {\n      navigate(\"/signup\");\n    }\n  });\n\n  const [userList, setUserList] = useState([]);\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/zomAdminPartner/`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\"),\n      },\n    }).then((response) => {\n      setUserList(response.data);\n    });\n  }, []);\n\n  const tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n      <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n      <ChevronLeft {...props} ref={ref} />\n    )),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => (\n      <ArrowDownward {...props} ref={ref} />\n    )),\n    ThirdStateCheck: forwardRef((props, ref) => (\n      <Remove {...props} ref={ref} />\n    )),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n  };\n\n  const columns = [\n    // { title: \"Time\", field: \"create_time\", type: \"datetime\", sorting: true },\n\n    { title: \"Employer Name\", field: \"companyname\", editable: \"never\" },\n    { title: \"Name\", field: \"name\", editable: \"never\" },\n    {\n      title: \"Email\",\n      field: \"email\",\n      filterPlaceholder: \"Filter by Email\",\n      editable: \"never\",\n    },\n    { title: \"Phone\", field: \"contnum\", editable: \"never\" },\n    { title: \"Role\", field: \"role\", editable: \"never\" },\n    { title: \"Location\", field: \"location_com\", editable: \"never\" },\n    { title: \"Industry\", field: \"industry\", editable: \"never\" },\n    { title: \"Joining Date\", field: \"joining_date\", type: \"date\" },\n    { title: \"Interview\", field: \"interview\" },\n    {\n      title: \"Landing Page\",\n      field: \"publish\",\n      align: \"center\",\n      editable: \"never\",\n      lookup: { 1: \"Publish\", 0: \"Hide\" },\n    },\n    { title: \"Remarks\", field: \"remarks\" },\n  ];\n\n  return (\n    <AuthContext.Provider value={{ authState, setAuthState }}>\n      <Fragment>\n        <HelmetProvider>\n          <Helmet>\n            <title> Admin | Zom - IN </title>\n          </Helmet>\n        </HelmetProvider>\n        <div id=\"adminUser\" className=\"adminUser my-2\">\n          {authState.admin === 1 ? (\n            <Row className=\"mx-5\">\n              <Col sm={12} className=\"mx-auto my-2\">\n                <Heading content=\"Total Employer\" design=\"h4\" />\n              </Col>\n              <Col sm={12} className=\"mx-auto my-2\">\n                <MaterialTable\n                  title=\"Total Employer\"\n                  columns={columns}\n                  icons={tableIcons}\n                  data={userList}\n                  options={{\n                    sorting: true,\n                    filtering: true,\n                    search: true,\n                    searchFieldAlignment: \"right\",\n                    searchAutoFocus: true,\n                    searchFieldVariant: \"standard\",\n                    paging: true,\n                    pageSizeOptions: [25, 50, 100],\n                    pageSize: 25,\n                    exportButton: true,\n                    exportAllData: true,\n                    exportFileName: \"Total User\",\n                    actionsColumnIndex: -1,\n                    selection: true,\n                    showSelectAllCheckbox: false,\n                    showTextRowsSelected: false,\n                    grouping: false,\n                    columnsButton: true,\n                  }}\n                  editable={{\n                    onRowUpdate: (newRow, oldRow) =>\n                      new Promise((resolve, reject) => {\n                        Axios.patch(\n                          `${process.env.REACT_APP_SERVER_DOMAIN}/zomAdminPartner/ss` +\n                          newRow\n                        ).then((response) => {\n                          if (response.data.error) {\n                            return toast.error(\n                              <Fragment>\n                                <BiMinusCircle />{\" \"}\n                                <span>{response.data.error}</span>\n                              </Fragment>\n                            );\n                          } else {\n                            return [\n                              toast.success(\n                                <Fragment>\n                                  <BiMessageCheck />{\" \"}\n                                  <span>{response.data.success}</span>\n                                </Fragment>\n                              ),\n                              setUserList(response.data.list),\n                            ];\n                          }\n                        });\n\n                        // const updateData= [...userList]\n                        // updateData[oldRow.userList.id]=newRow\n                        // setUserList(updateData)\n                        console.log(newRow.application_id, oldRow);\n                        // setTimeout(()=> resolve(),500)\n                      }),\n                  }}\n                  // actions={[\n                  //   {\n                  //     icon: () => <BiCheckCircle />,\n                  //     tooltip: \"UnBlock the User\",\n                  //     isFreeAction: false,\n                  //     onClick: (e, data) => {\n                  //       Axios.patch(\n                  //         `${process.env.REACT_APP_SERVER_DOMAIN}/zomAdminEmployer/unblockUser`,\n                  //         data\n                  //       ).then((response) => {\n                  //         if (response.data.error) {\n                  //           return toast.error(\n                  //             <Fragment>\n                  //               <BiMinusCircle />{\" \"}\n                  //               <span>{response.data.error}</span>\n                  //             </Fragment>\n                  //           );\n                  //         } else {\n                  //           return [\n                  //             toast.success(\n                  //               <Fragment>\n                  //                 <BiMessageCheck />{\" \"}\n                  //                 <span>{response.data.success}</span>\n                  //               </Fragment>\n                  //             ),\n                  //             setUserList(response.data.list),\n                  //           ];\n                  //         }\n                  //       });\n                  //     },\n                  //   },\n                  //   {\n                  //     icon: () => <BiBlock />,\n                  //     tooltip: \"Block the User\",\n                  //     isFreeAction: false,\n                  //     onClick: (e, data) => {\n                  //       Axios.patch(\n                  //         `${process.env.REACT_APP_SERVER_DOMAIN}/zomAdminEmployer/blockUser`,\n                  //         data\n                  //       ).then((response) => {\n                  //         if (response.data.error) {\n                  //           return toast.error(\n                  //             <Fragment>\n                  //               <BiMinusCircle />{\" \"}\n                  //               <span>{response.data.error}</span>\n                  //             </Fragment>\n                  //           );\n                  //         } else {\n                  //           return [\n                  //             toast.success(\n                  //               <Fragment>\n                  //                 <BiMessageCheck />{\" \"}\n                  //                 <span>{response.data.success}</span>\n                  //               </Fragment>\n                  //             ),\n                  //             setUserList(response.data.list),\n                  //           ];\n                  //         }\n                  //       });\n                  //     },\n                  //   },\n                  // ]}\n                />\n              </Col>\n            </Row>\n          ) : (\n            <NotFound />\n          )}\n        </div>\n      </Fragment>\n    </AuthContext.Provider>\n  );\n}\n\nexport default ZomAdminPartner;\n"]},"metadata":{},"sourceType":"module"}