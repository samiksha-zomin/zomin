{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Home/Like.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Axios from 'axios';\nimport { Col } from \"react-bootstrap\";\nimport { FaThumbsUp, FaRegThumbsUp } from \"react-icons/fa\";\nimport { BiMinusCircle } from \"react-icons/bi\"; //Toast\n\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Like(props) {\n  _s();\n\n  let history = useHistory();\n  const postID = props.postID;\n  const [likeStatus, setLikeStatus] = useState(false);\n  useEffect(() => {\n    if (localStorage.getItem(\"accessToken\")) {\n      Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/home/like/` + postID, {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        const likedStatus = response.data;\n\n        if (likedStatus.length > 0) {\n          setLikeStatus(true);\n        }\n      });\n    }\n  });\n\n  const likePost = id => {\n    let likePostInfo = [id];\n\n    if (!localStorage.getItem(\"accessToken\")) {\n      return [history.push(\"/signup\"), toast.warn( /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(BiMinusCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Please Sign In /Sign Up before like posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this))];\n    } else {\n      Axios.post(`${process.env.REACT_APP_SERVER_DOMAIN}/home/like`, {\n        postID: likePostInfo[0]\n      }, {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        if (response.data.error) {\n          return toast.error( /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(BiMinusCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: response.data.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this));\n        } else {\n          return setLikeStatus(true);\n        }\n      });\n    }\n  };\n\n  const unlikePost = id => {\n    let unlikePostInfo = [id];\n\n    if (!localStorage.getItem(\"accessToken\")) {\n      return [history.push(\"/signup\"), toast.warn( /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(BiMinusCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Please Sign In /Sign Up before likes post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }, this))];\n    } else {\n      Axios.post(`${process.env.REACT_APP_SERVER_DOMAIN}/home/unlike`, {\n        postID: unlikePostInfo[0]\n      }, {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        if (response.data.error) {\n          return toast.error( /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(BiMinusCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: response.data.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this));\n        } else {\n          return [setLikeStatus(false), console.log(\"Hiii\")];\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: likeStatus ? /*#__PURE__*/_jsxDEV(Col, {\n      xs: 4,\n      sm: 4,\n      className: \"text-center link-primary\",\n      role: \"button\",\n      onClick: () => unlikePost(postID),\n      children: [/*#__PURE__*/_jsxDEV(FaThumbsUp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 8\n      }, this), \" Like\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Col, {\n      xs: 4,\n      sm: 4,\n      className: \"text-center link-secondary\",\n      role: \"button\",\n      onClick: () => likePost(postID),\n      children: [/*#__PURE__*/_jsxDEV(FaRegThumbsUp, {\n        className: \"link-warning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 8\n      }, this), \" unlike here\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n}\n\n_s(Like, \"LOz0gRHmFzTEGO1G3RNt5AqDseg=\", false, function () {\n  return [useHistory];\n});\n\n_c = Like;\nexport default Like;\n\nvar _c;\n\n$RefreshReg$(_c, \"Like\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Home/Like.js"],"names":["React","Fragment","useEffect","useState","useHistory","Axios","Col","FaThumbsUp","FaRegThumbsUp","BiMinusCircle","toast","Like","props","history","postID","likeStatus","setLikeStatus","localStorage","getItem","get","process","env","REACT_APP_SERVER_DOMAIN","headers","accessToken","then","response","likedStatus","data","length","likePost","id","likePostInfo","push","warn","post","error","unlikePost","unlikePostInfo","console","log"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Axios from 'axios';\n\nimport { Col } from \"react-bootstrap\";\nimport { FaThumbsUp,FaRegThumbsUp } from \"react-icons/fa\";\nimport { BiMinusCircle } from \"react-icons/bi\";\n\n//Toast\nimport { toast } from \"react-toastify\";\n\nfunction Like(props) {\n  let history = useHistory();\n    const postID = props.postID;\n\n    const [likeStatus, setLikeStatus] = useState(false);\n\n    useEffect(() => {\n        if (localStorage.getItem(\"accessToken\")) {\n          Axios.get(\n            `${process.env.REACT_APP_SERVER_DOMAIN}/home/like/` +\n            postID,\n            {\n              headers: {\n                accessToken: localStorage.getItem(\"accessToken\"),\n              },\n            }\n          ).then((response) => {\n            const likedStatus = response.data;\n            if (likedStatus.length > 0) {\n                setLikeStatus(true);\n            }\n          });\n        }\n      });\n\n      const likePost = (id) => {\n        let likePostInfo = [id];\n    \n        if (!localStorage.getItem(\"accessToken\")) {\n          return [\n            history.push(\"/signup\"),\n            toast.warn(\n              <Fragment>\n                <BiMinusCircle />\n                <span>Please Sign In /Sign Up before like posts</span>\n              </Fragment>\n            ),\n          ];\n        } else {\n          Axios.post(\n            `${process.env.REACT_APP_SERVER_DOMAIN}/home/like`,\n            {\n                postID: likePostInfo[0],\n            },\n            {\n              headers: {\n                accessToken: localStorage.getItem(\"accessToken\"),\n              },\n            }\n          ).then((response) => {\n            if (response.data.error) {\n              return toast.error(\n                <Fragment>\n                  <BiMinusCircle /> <span>{response.data.error}</span>\n                </Fragment>\n              );\n            } else {\n              return (\n              setLikeStatus(true)\n              )\n            }\n          });\n        }\n      };\n\n      const unlikePost = (id) => {\n        let unlikePostInfo = [id];\n    \n        if (!localStorage.getItem(\"accessToken\")) {\n          return [\n            history.push(\"/signup\"),\n            toast.warn(\n              <Fragment>\n                <BiMinusCircle />\n                <span>Please Sign In /Sign Up before likes post</span>\n              </Fragment>\n            ),\n          ];\n        } else {\n          Axios.post(\n            `${process.env.REACT_APP_SERVER_DOMAIN}/home/unlike`,\n            {\n                postID: unlikePostInfo[0],\n            },\n            {\n              headers: {\n                accessToken: localStorage.getItem(\"accessToken\"),\n              },\n            }\n          ).then((response) => {\n            if (response.data.error) {\n              return toast.error(\n                <Fragment>\n                  <BiMinusCircle /> <span>{response.data.error}</span>\n                </Fragment>\n              );\n            } else {\n              return [(\n              setLikeStatus(false)\n              ),\n              console.log(\"Hiii\")]\n            }\n          });\n        }\n      };\n\n\n    return (\n    <>\n    {likeStatus ? \n        <Col xs={4} sm={4} className=\"text-center link-primary\" role=\"button\" onClick={() => unlikePost(postID)}>\n       <FaThumbsUp /> Like\n      </Col>\n       : \n       <Col xs={4} sm={4} className=\"text-center link-secondary\" role=\"button\" onClick={() => likePost(postID)}>\n       <FaRegThumbsUp className=\"link-warning\"/> unlike here\n      </Col>}\n    </>\n        \n    )\n}\n\nexport default Like\n"]},"metadata":{},"sourceType":"module"}