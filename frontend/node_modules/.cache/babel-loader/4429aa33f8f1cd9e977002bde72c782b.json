{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/BasicInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Axios from \"axios\";\nimport useInput from \"../Hooks/use-input\"; // import DatePicker from \"react-datepicker\";\n\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport DatePicker from \"react-datepicker\";\nimport { Container, Col, Row, InputGroup, Form } from \"react-bootstrap\"; //Componnets\n\nimport Header from \"../Components/Header\";\nimport Heading from \"../Components/Heading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== \"\";\n\nfunction BasicInfo(props) {\n  _s();\n\n  // Gender Input Check\n  const {\n    value: enteredGender,\n    isValid: enteredGenderIsValid,\n    hasError: genderInputHasError,\n    valueChangeHandler: genderChangeHandler,\n    inputBlurHandler: genderBlurHandler,\n    reset: resetGenderInput\n  } = useInput(isNotEmpty); //DOB Input Check\n\n  const {\n    value: enteredDob,\n    isValid: enteredDobIsValid,\n    hasError: dobInputHasError,\n    valueChangeHandler: dobChangeHandler,\n    inputBlurHandler: dobBlurHandler,\n    reset: resetDobInput\n  } = useInput(isNotEmpty); //About Input Check\n\n  const {\n    value: enteredAbout,\n    isValid: enteredAboutIsValid,\n    hasError: aboutInputHasError,\n    valueChangeHandler: aboutChangeHandler,\n    inputBlurHandler: aboutBlurHandler,\n    reset: resetAboutInput\n  } = useInput(isNotEmpty); //School Input Check\n  // const {\n  //   value: enteredSchool,\n  //   isValid: enteredSchoolIsValid,\n  //   hasError: schoolInputHasError,\n  //   valueChangeHandler: schoolChangeHandler,\n  //   inputBlurHandler: schoolBlurHandler,\n  //   reset: resetSchoolInput,\n  // } = useInput(isNotEmpty);\n  //Highest Education Level Check\n\n  const {\n    value: enteredHighLevel,\n    isValid: enteredHighLevelIsValid,\n    hasError: highLevelInputHasError,\n    valueChangeHandler: highLevelChangeHandler,\n    inputBlurHandler: highLevelBlurHandler,\n    reset: resetHighLevelInput\n  } = useInput(isNotEmpty); //Current Status Level Check\n\n  const {\n    value: enteredCurrentStatus,\n    isValid: enteredCurrentStatusIsValid,\n    hasError: currentStatusInputHasError,\n    valueChangeHandler: currentStatusChangeHandler,\n    inputBlurHandler: currentStatusBlurHandler,\n    reset: resetCurrentStatusInput\n  } = useInput(isNotEmpty);\n  let basicInfoFormIsValid = false;\n\n  if (enteredGenderIsValid && enteredDobIsValid && enteredAboutIsValid && enteredHighLevelIsValid) {\n    basicInfoFormIsValid = true;\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredGenderIsValid && !enteredDobIsValid && !enteredAboutIsValid && !enteredHighLevelIsValid) {\n      return;\n    }\n\n    console.log(\"Can Submit to BE\");\n    console.log(enteredGender);\n    console.log(enteredDob);\n    console.log(enteredAbout);\n    console.log(enteredHighLevel); // console.log(enteredSchool);\n\n    resetGenderInput();\n    resetDobInput();\n    resetAboutInput(); // resetSchoolInput();\n\n    resetHighLevelInput();\n  };\n\n  const dobClasses = dobInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const aboutClasses = aboutInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const highLevelClasses = highLevelInputHasError ? \"form-select form-select-sm is-invalid\" : \"form-select form-select-sm\"; // const schoolClasses = schoolInputHasError\n  //   ? \"form-control is-invalid\"\n  //   : \"form-control\";\n  // School Suggestion\n\n  const [schoolSelections, setSchoolSelections] = useState([]);\n  const [universityList, setUniversityList] = useState([]);\n  const [eduList, setEduList] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/meta/university\").then(response => {\n      setUniversityList(response.data);\n      console.log(response.data);\n    });\n  }, []); //Education Level\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/meta/eduLevel\").then(response => {\n      setEduList(response.data);\n      console.log(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HelmetProvider, {\n      children: /*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \" Basic Info | Zom - IN \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"my-5\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: 6,\n          xs: 12,\n          className: \"mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            content: \"Basic Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: formSubmissionHandler,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              sm: 12,\n              className: \"form-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"inputgender\",\n                className: \"required\",\n                children: \"You are\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    className: \"btn-check\",\n                    name: \"gender\",\n                    id: \"male\",\n                    autoComplete: \"off\",\n                    onChange: genderChangeHandler,\n                    onBlur: genderBlurHandler,\n                    value: \"Male\",\n                    value: enteredGender\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"btn btn-outline-success\",\n                    htmlFor: \"male\",\n                    children: \"Male\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ms-2 \",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    className: \"btn-check\",\n                    name: \"gender\",\n                    id: \"female\",\n                    autoComplete: \"off\",\n                    onChange: genderChangeHandler,\n                    onBlur: genderBlurHandler,\n                    value: enteredGender,\n                    value: \"Female\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"btn btn-outline-info\",\n                    htmlFor: \"female\",\n                    children: \"Female\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), genderInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please choose your gender.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 12,\n              className: \"form-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"inputdob\",\n                className: \"required\",\n                children: \"Date of Birth\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                id: \"inputdob\",\n                placeholder: \"Your Birthday\",\n                className: dobClasses,\n                onChange: dobChangeHandler,\n                onBlur: dobBlurHandler,\n                value: enteredDob\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this), dobInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please select your birthdate.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 12,\n              className: \"form-group mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"inputabout\",\n                className: \"required\",\n                children: \"About\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                placeholder: \"Tell us about you\",\n                className: aboutClasses,\n                onChange: aboutChangeHandler,\n                onBlur: aboutBlurHandler,\n                value: enteredAbout\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), aboutInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Tell us about you.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"my-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Heading, {\n              content: \"Education\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 12,\n              className: \"form-group mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"eduLevel\",\n                className: \"required\",\n                children: \"Highest Education Level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                defaultValue: \"DEFAULT\",\n                className: \"\",\n                \"aria-label\": \"Default select example\",\n                className: highLevelClasses,\n                onChange: highLevelChangeHandler,\n                onBlur: highLevelBlurHandler,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Please Choose One\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 19\n                }, this), eduList.map((eduList, key) => {\n                  const enteredHighLevel = eduList.child_name;\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: enteredHighLevel,\n                    children: [\" \", enteredHighLevel, \" \"]\n                  }, enteredHighLevel, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 23\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this), highLevelInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please choose your highest education Level.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 12,\n              className: \"form-group mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"eduYear\",\n                className: \"required\",\n                children: \"Year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  sm: 4,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                    required: true,\n                    showYearPicker: true,\n                    dateFormat: \"yyyy\",\n                    yearItemNumber: 10,\n                    placeholderText: \"Year Start\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(DatePicker // selected={startDate}\n                  // onChange={(date) => setStartDate(date)}\n                  , {\n                    showYearPicker: true,\n                    dateFormat: \"yyyy\",\n                    yearItemNumber: 10,\n                    placeholderText: \"Year End\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n              class: \"my-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Heading, {\n              content: \"Working Experience\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 12,\n              className: \"form-group mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"currentStatus\",\n                className: \"required\",\n                children: \"Current Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    class: \"btn-check\",\n                    name: \"status\",\n                    id: \"employedCS\",\n                    autocomplete: \"off\",\n                    onChange: currentStatusChangeHandler,\n                    onBlur: currentStatusBlurHandler,\n                    value: enteredCurrentStatus,\n                    value: \"employee\" // checked={currentStatus === 1}\n                    // onClick={(e) => jobStatus(1)}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    class: \"btn btn-outline-success\",\n                    htmlFor: \"employedCS\",\n                    children: \"Employed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ms-2 \",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    class: \"btn-check\",\n                    name: \"status\",\n                    id: \"employedCS\",\n                    autocomplete: \"off\",\n                    onChange: currentStatusChangeHandler,\n                    onBlur: currentStatusBlurHandler,\n                    value: enteredCurrentStatus,\n                    value: \"unemployed\" // checked={currentStatus === 1}\n                    // onClick={(e) => jobStatus(2)}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    class: \"btn btn-outline-info\",\n                    htmlFor: \"unemployedCS\",\n                    children: \"Unemployed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ms-2 \",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    class: \"btn-check\",\n                    name: \"status\",\n                    id: \"internCS\",\n                    autocomplete: \"off\",\n                    onChange: currentStatusChangeHandler,\n                    onBlur: currentStatusBlurHandler,\n                    value: enteredCurrentStatus,\n                    value: \"intern\" // checked={currentStatus === 1}\n                    // onClick={(e) => jobStatus(1)}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    class: \"btn btn-outline-warning\",\n                    htmlFor: \"internCS\",\n                    children: \"Intern\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              className: \"text-end my-3\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \" btn btn-primary\",\n                disabled: !basicInfoFormIsValid,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BasicInfo, \"GF+NoOxRlRchU1JJkYAVrw0MFfE=\", false, function () {\n  return [useInput, useInput, useInput, useInput, useInput];\n});\n\n_c = BasicInfo;\nexport default BasicInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicInfo\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/BasicInfo.jsx"],"names":["React","Fragment","useState","useEffect","Helmet","HelmetProvider","Axios","useInput","Typeahead","DatePicker","Container","Col","Row","InputGroup","Form","Header","Heading","isNotEmpty","value","trim","BasicInfo","props","enteredGender","isValid","enteredGenderIsValid","hasError","genderInputHasError","valueChangeHandler","genderChangeHandler","inputBlurHandler","genderBlurHandler","reset","resetGenderInput","enteredDob","enteredDobIsValid","dobInputHasError","dobChangeHandler","dobBlurHandler","resetDobInput","enteredAbout","enteredAboutIsValid","aboutInputHasError","aboutChangeHandler","aboutBlurHandler","resetAboutInput","enteredHighLevel","enteredHighLevelIsValid","highLevelInputHasError","highLevelChangeHandler","highLevelBlurHandler","resetHighLevelInput","enteredCurrentStatus","enteredCurrentStatusIsValid","currentStatusInputHasError","currentStatusChangeHandler","currentStatusBlurHandler","resetCurrentStatusInput","basicInfoFormIsValid","formSubmissionHandler","event","preventDefault","console","log","dobClasses","aboutClasses","highLevelClasses","schoolSelections","setSchoolSelections","universityList","setUniversityList","eduList","setEduList","get","then","response","data","map","key","child_name"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Axios from \"axios\";\nimport useInput from \"../Hooks/use-input\";\n\n// import DatePicker from \"react-datepicker\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport DatePicker from \"react-datepicker\";\nimport { Container, Col, Row, InputGroup, Form } from \"react-bootstrap\";\n\n//Componnets\nimport Header from \"../Components/Header\";\nimport Heading from \"../Components/Heading\";\n\nconst isNotEmpty = (value) => value.trim() !== \"\";\n\nfunction BasicInfo(props) {\n  // Gender Input Check\n  const {\n    value: enteredGender,\n    isValid: enteredGenderIsValid,\n    hasError: genderInputHasError,\n    valueChangeHandler: genderChangeHandler,\n    inputBlurHandler: genderBlurHandler,\n    reset: resetGenderInput,\n  } = useInput(isNotEmpty);\n\n  //DOB Input Check\n  const {\n    value: enteredDob,\n    isValid: enteredDobIsValid,\n    hasError: dobInputHasError,\n    valueChangeHandler: dobChangeHandler,\n    inputBlurHandler: dobBlurHandler,\n    reset: resetDobInput,\n  } = useInput(isNotEmpty);\n\n  //About Input Check\n  const {\n    value: enteredAbout,\n    isValid: enteredAboutIsValid,\n    hasError: aboutInputHasError,\n    valueChangeHandler: aboutChangeHandler,\n    inputBlurHandler: aboutBlurHandler,\n    reset: resetAboutInput,\n  } = useInput(isNotEmpty);\n\n  //School Input Check\n  // const {\n  //   value: enteredSchool,\n  //   isValid: enteredSchoolIsValid,\n  //   hasError: schoolInputHasError,\n  //   valueChangeHandler: schoolChangeHandler,\n  //   inputBlurHandler: schoolBlurHandler,\n  //   reset: resetSchoolInput,\n  // } = useInput(isNotEmpty);\n\n  //Highest Education Level Check\n  const {\n    value: enteredHighLevel,\n    isValid: enteredHighLevelIsValid,\n    hasError: highLevelInputHasError,\n    valueChangeHandler: highLevelChangeHandler,\n    inputBlurHandler: highLevelBlurHandler,\n    reset: resetHighLevelInput,\n  } = useInput(isNotEmpty);\n\n    //Current Status Level Check\n    const {\n      value: enteredCurrentStatus,\n      isValid: enteredCurrentStatusIsValid,\n      hasError: currentStatusInputHasError,\n      valueChangeHandler: currentStatusChangeHandler,\n      inputBlurHandler: currentStatusBlurHandler,\n      reset: resetCurrentStatusInput,\n    } = useInput(isNotEmpty);\n\n  let basicInfoFormIsValid = false;\n\n  if (\n    enteredGenderIsValid &&\n    enteredDobIsValid &&\n    enteredAboutIsValid &&\n    enteredHighLevelIsValid \n  ) {\n    basicInfoFormIsValid = true;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (\n      !enteredGenderIsValid &&\n      !enteredDobIsValid &&\n      !enteredAboutIsValid &&\n      !enteredHighLevelIsValid\n    ) {\n      return;\n    }\n\n    console.log(\"Can Submit to BE\");\n    console.log(enteredGender);\n    console.log(enteredDob);\n    console.log(enteredAbout);\n    console.log(enteredHighLevel);\n    // console.log(enteredSchool);\n    resetGenderInput();\n    resetDobInput();\n    resetAboutInput();\n    // resetSchoolInput();\n    resetHighLevelInput();\n  };\n\n  const dobClasses = dobInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const aboutClasses = aboutInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const highLevelClasses = highLevelInputHasError\n    ? \"form-select form-select-sm is-invalid\"\n    : \"form-select form-select-sm\";\n\n  // const schoolClasses = schoolInputHasError\n  //   ? \"form-control is-invalid\"\n  //   : \"form-control\";\n\n  // School Suggestion\n  const [schoolSelections, setSchoolSelections] = useState([]);\n  const [universityList, setUniversityList] = useState([]);\n  const [eduList, setEduList] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/meta/university\").then((response) => {\n      setUniversityList(response.data);\n      console.log(response.data);\n    });\n  }, []);\n\n  //Education Level\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/meta/eduLevel\").then((response) => {\n      setEduList(response.data);\n      console.log(response.data);\n    });\n  }, []);\n\n  return (\n    <Fragment>\n      <Header />\n      <HelmetProvider>\n        <Helmet>\n          <title> Basic Info | Zom - IN </title>\n        </Helmet>\n      </HelmetProvider>\n\n      <Container className=\"my-5\">\n        <Row>\n          <Col sm={6} xs={12} className=\"mx-auto\">\n            <Heading content=\"Basic Info\" />\n            <Form onSubmit={formSubmissionHandler}>\n              {/* Gender */}\n              <Col sm={12} className=\"form-group mb-3\">\n                <label htmlFor=\"inputgender\" className=\"required\">\n                  You are\n                </label>\n                <InputGroup>\n                  <div>\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"gender\"\n                      id=\"male\"\n                      autoComplete=\"off\"\n                      onChange={genderChangeHandler}\n                      onBlur={genderBlurHandler}\n                      value=\"Male\"\n                      value={enteredGender}\n                    />\n                    <label className=\"btn btn-outline-success\" htmlFor=\"male\">\n                      Male\n                    </label>\n                  </div>\n\n                  <div className=\"ms-2 \">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"gender\"\n                      id=\"female\"\n                      autoComplete=\"off\"\n                      onChange={genderChangeHandler}\n                      onBlur={genderBlurHandler}\n                      value={enteredGender}\n                      value=\"Female\"\n                    />\n                    <label className=\"btn btn-outline-info\" htmlFor=\"female\">\n                      Female\n                    </label>\n                  </div>\n                </InputGroup>\n                {genderInputHasError && (\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please choose your gender.\n                  </Form.Control.Feedback>\n                )}\n              </Col>\n\n              {/* DAte of Birth */}\n              <Col sm={12} className=\"form-group mb-3\">\n                <label htmlFor=\"inputdob\" className=\"required\">\n                  Date of Birth\n                </label>\n                <input\n                  type=\"date\"\n                  id=\"inputdob\"\n                  placeholder=\"Your Birthday\"\n                  className={dobClasses}\n                  onChange={dobChangeHandler}\n                  onBlur={dobBlurHandler}\n                  value={enteredDob}\n                />\n                {dobInputHasError && (\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please select your birthdate.\n                  </Form.Control.Feedback>\n                )}\n              </Col>\n\n              {/* About Me */}\n              <Col sm={12} className=\"form-group mb-2\">\n                <label htmlFor=\"inputabout\" className=\"required\">\n                  About\n                </label>\n                <Form.Control\n                  as=\"textarea\"\n                  placeholder=\"Tell us about you\"\n                  className={aboutClasses}\n                  onChange={aboutChangeHandler}\n                  onBlur={aboutBlurHandler}\n                  value={enteredAbout}\n                />\n                {aboutInputHasError && (\n                  <Form.Control.Feedback type=\"invalid\">\n                    Tell us about you.\n                  </Form.Control.Feedback>\n                )}\n              </Col>\n              <hr className=\"my-4\" />\n\n              <Heading content=\"Education\" />\n              {/* <Col sm={12} className=\"form-group mb-2\">\n                <label htmlFor=\"inputSchool\" className=\"required\">\n                  School\n                </label>\n\n                <Typeahead\n                  allowNew={true}\n                  id=\"basic-typeahead-single\"\n                  onChange={setSchoolSelections}\n                  labelKey={(option) => `${option.university_name}`}\n                  options={universityList}\n                  placeholder=\"Choose a state...\"\n                  selected={schoolSelections}\n                  newSelectionPrefix=\"Add a new item: \"\n                  // className={schoolClasses}\n                  // onChange={schoolChangeHandler}\n                  // onBlur={schoolBlurHandler}\n                  //isInvalid\n                  //className=\"is-invalid\"\n                  // value={enteredSchool}\n                  inputProps={{\n                    className: `${aboutClasses}`,\n                    required: true,\n                  }}\n                />\n\n                {aboutInputHasError && (\n                  <Form.Control.Feedback type=\"invalid\">\n                    Tell us about you.\n                  </Form.Control.Feedback>\n                )}\n              </Col> */}\n\n              {/* Highest Education Level  */}\n              <Col sm={12} className=\"form-group mb-2\">\n                <label htmlFor=\"eduLevel\" className=\"required\">\n                  Highest Education Level\n                </label>\n                <select\n                  defaultValue={\"DEFAULT\"}\n                  className=\"\"\n                  aria-label=\"Default select example\"\n                  className={highLevelClasses}\n                  onChange={highLevelChangeHandler}\n                  onBlur={highLevelBlurHandler}\n                >\n                  <option>Please Choose One</option>\n                  {eduList.map((eduList, key) => {\n                    const enteredHighLevel = eduList.child_name;\n                    return (\n                      <option key={enteredHighLevel} value={enteredHighLevel}>\n                        {\" \"}\n                        {enteredHighLevel}{\" \"}\n                      </option>\n                    );\n                  })}\n                </select>\n\n                {highLevelInputHasError && (\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please choose your highest education Level.\n                  </Form.Control.Feedback>\n                )}\n              </Col>\n\n              <Col sm={12} className=\"form-group mb-2\">\n                <label htmlFor=\"eduYear\" className=\"required\">\n                  Year\n                </label>\n                <InputGroup className=\"mb-3\">\n                  <Col sm={4} xs={6}>\n                    <DatePicker\n                      required\n                      showYearPicker\n                      dateFormat=\"yyyy\"\n                      yearItemNumber={10}\n                      placeholderText=\"Year Start\"\n                    />\n                  \n                  </Col>\n                  <Col>\n                    <DatePicker\n                      // selected={startDate}\n                      // onChange={(date) => setStartDate(date)}\n                      showYearPicker\n                      dateFormat=\"yyyy\"\n                      yearItemNumber={10}\n                      placeholderText=\"Year End\"\n                    />\n                  </Col>\n                </InputGroup>\n              </Col>\n\n              <hr class=\"my-4\" />\n              <Heading content=\"Working Experience\" />\n\n              <Col sm={12} className=\"form-group mb-2\">\n                <label htmlFor=\"currentStatus\" className=\"required\">Current Status</label>\n\n                <InputGroup className=\"mb-3\">\n                  <div>\n                    <input\n                      type=\"radio\"\n                      class=\"btn-check\"\n                      name=\"status\"\n                      id=\"employedCS\"\n                      autocomplete=\"off\"\n                      onChange={currentStatusChangeHandler}\n                      onBlur={currentStatusBlurHandler}\n                      value={enteredCurrentStatus}\n                      value=\"employee\"\n                      // checked={currentStatus === 1}\n                      // onClick={(e) => jobStatus(1)}\n                    />\n                    <label\n                      class=\"btn btn-outline-success\"\n                      htmlFor=\"employedCS\"\n                    >\n                      Employed\n                    </label>\n                  </div>\n\n                  <div className=\"ms-2 \">\n                    <input\n                      type=\"radio\"\n                      class=\"btn-check\"\n                      name=\"status\"\n                      id=\"employedCS\"\n                      autocomplete=\"off\"\n                      onChange={currentStatusChangeHandler}\n                      onBlur={currentStatusBlurHandler}\n                      value={enteredCurrentStatus}\n                      value=\"unemployed\"\n                      // checked={currentStatus === 1}\n                      // onClick={(e) => jobStatus(2)}\n                    />\n                    <label\n                      class=\"btn btn-outline-info\"\n                      htmlFor=\"unemployedCS\"\n                    >\n                      Unemployed\n                    </label>\n                  </div>\n\n                  <div className=\"ms-2 \">\n                    <input\n                      type=\"radio\"\n                      class=\"btn-check\"\n                      name=\"status\"\n                      id=\"internCS\"\n                      autocomplete=\"off\"\n                      onChange={currentStatusChangeHandler}\n                      onBlur={currentStatusBlurHandler}\n                      value={enteredCurrentStatus}\n                      value=\"intern\"\n                      // checked={currentStatus === 1}\n                      // onClick={(e) => jobStatus(1)}\n                    />\n                    <label\n                      class=\"btn btn-outline-warning\"\n                      htmlFor=\"internCS\"\n                    >\n                      Intern\n                    </label>\n                  </div>\n                </InputGroup>\n              </Col>\n\n\n              <Col className=\"text-end my-3\">\n                <button\n                  type=\"submit\"\n                  className=\" btn btn-primary\"\n                  disabled={!basicInfoFormIsValid}\n                >\n                  Submit\n                </button>\n              </Col>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </Fragment>\n  );\n}\n\nexport default BasicInfo;\n"]},"metadata":{},"sourceType":"module"}