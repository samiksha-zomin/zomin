{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/test.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Test() {\n  _s();\n\n  const [emailConf, setEmailConf] = useState(\"\");\n  const [passwordConf, setPasswordConf] = useState(\"\"); //LogIn Form\n\n  const login = event => {\n    if (emailConf && passwordConf) {\n      Axios.post('http://localhost:3001/auth/login', {\n        email: emailConf,\n        password: passwordConf\n      }).then(response => {\n        if (!response.data.auth) {\n          if (response.data.message === 'Please Verify your account!') {\n            return toast.warn( /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(BiError, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Please Verify your account!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 37\n            }, this));\n          } else if (response.data.message === 'Wrong email / password!') {\n            return toast.error( /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(BiError, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Wrong email / password!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 37\n            }, this));\n          } else if (response.data.message === 'Email does not exist!') {\n            return toast.error( /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(BiError, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Email does not exist!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 37\n            }, this));\n          } else {\n            return toast.error( /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(BiError, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"System is Error. Please Try Again!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 37\n            }, this));\n          }\n        } else {\n          localStorage.setItem(\"token\", response.data.token);\n          setLoginStatus(true);\n        }\n      });\n    }\n\n    ;\n    event.preventDefault();\n    setEmailConf(\"\");\n    setPasswordConf(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        required: true,\n        name: \"email\",\n        placeholder: \"Email Address\",\n        value: emailConf,\n        onChange: e => {\n          setEmailConf(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        required: true,\n        name: \"password\",\n        placeholder: \"Password\",\n        value: passwordConf,\n        onChange: e => {\n          setPasswordConf(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: login,\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Test, \"s11WIluZUENWh9CzYS9s+wAQnvk=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/test.jsx"],"names":["React","useState","Test","emailConf","setEmailConf","passwordConf","setPasswordConf","login","event","Axios","post","email","password","then","response","data","auth","message","toast","warn","error","localStorage","setItem","token","setLoginStatus","preventDefault","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Test() {\n\n\n    const [emailConf, setEmailConf] = useState(\"\");\n    const [passwordConf, setPasswordConf] = useState(\"\");\n\n\n        //LogIn Form\n        const login = (event) => {\n            if (emailConf && passwordConf) {\n                Axios.post('http://localhost:3001/auth/login', {\n                    email: emailConf,\n                    password: passwordConf\n                })\n                    .then((response) => {\n                        \n                        if (!response.data.auth) {\n                            if (response.data.message === 'Please Verify your account!') {\n                                return toast.warn(\n                                    <Fragment>\n                                        <BiError />\n                                        <span>Please Verify your account!</span>\n                                    </Fragment>\n                                );\n                            } else if (response.data.message === 'Wrong email / password!'){\n                                return toast.error(\n                                    <Fragment>\n                                        <BiError />\n                                        <span>Wrong email / password!</span>\n                                    </Fragment>\n                                );\n                            } else if (response.data.message === 'Email does not exist!') {\n                                return toast.error(\n                                    <Fragment>\n                                        <BiError />\n                                        <span>Email does not exist!</span>\n                                    </Fragment>\n                                );\n                            } else {\n                                return toast.error(\n                                    <Fragment>\n                                        <BiError />\n                                        <span>System is Error. Please Try Again!</span>\n                                    </Fragment>\n                                );\n                            }\n                        } else {\n                            localStorage.setItem(\"token\", response.data.token)\n                            setLoginStatus(true);\n                        }\n                    });\n            };\n            event.preventDefault();\n            setEmailConf(\"\");\n            setPasswordConf(\"\");\n        };\n\n        \n  return (\n    <div>\n      <div>\n        <input\n          type=\"email\"\n          required\n          name=\"email\"\n          placeholder=\"Email Address\"\n          value={emailConf}\n          onChange={(e) => {\n            setEmailConf(e.target.value);\n          }}\n        />\n      </div>\n      <div>\n        <input\n          type=\"password\"\n          required\n          name=\"password\"\n          placeholder=\"Password\"\n          value={passwordConf}\n          onChange={(e) => {\n            setPasswordConf(e.target.value);\n          }}\n        />\n      </div>\n\n      <div>\n      <input variant=\"primary\" type=\"submit\" onClick={login}>\n                                        Log In\n                                    </input>\n      </div>\n    </div>\n  );\n}\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}