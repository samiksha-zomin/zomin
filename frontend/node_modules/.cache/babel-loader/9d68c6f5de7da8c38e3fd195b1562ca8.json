{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ResetPasswordToken.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Axios from 'axios';\nimport { BiError, BiMessageCheck, BiMinusCircle } from \"react-icons/bi\";\nimport { useNavigate } from \"react-router-dom\"; //Toast\n\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ResetPasswordToken() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    token\n  } = useParams();\n  const [validToken, setValidToken] = useState(false);\n  useEffect(() => {\n    if (token) {\n      Axios.post(`${process.env.REACT_APP_SERVER_DOMAIN}/verify/resetpassword/token`, {\n        token: token\n      }).then(response => {\n        if (response.data.success) {\n          return [toast.success( /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(BiMessageCheck, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: response.data.success\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this)), setValidToken(true)];\n        } else if (response.data.warn) {\n          return toast.warn( /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(BiError, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: response.data.warn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this));\n        } else {\n          return toast.error( /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(BiMinusCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: response.data.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this));\n        }\n      }).then(navigate(\"/signup\"));\n    } else {\n      return toast.error( /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(BiMinusCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"System is Error. Please Try Again!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this));\n    }\n\n    if (token === null) {\n      navigate(\"/\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: validToken ? \"HEllo\" : \"No token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ResetPasswordToken, \"72LLAAwVPbsqqvckZnkcvr3QRow=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = ResetPasswordToken;\nexport default ResetPasswordToken;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPasswordToken\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ResetPasswordToken.jsx"],"names":["React","Fragment","useEffect","useState","useParams","Axios","BiError","BiMessageCheck","BiMinusCircle","useNavigate","toast","ResetPasswordToken","navigate","token","validToken","setValidToken","post","process","env","REACT_APP_SERVER_DOMAIN","then","response","data","success","warn","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,SAAT,QAA4B,kBAA5B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,cAAlB,EAAkCC,aAAlC,QAAuD,gBAAvD;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CAEA;;AACA,SAASC,KAAT,QAAsB,gBAAtB;;;AAEA,SAASC,kBAAT,GAA8B;AAAA;;AAC1B,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAYT,SAAS,EAA3B;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,KAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,KAAJ,EAAW;AACPR,MAAAA,KAAK,CAACW,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,uBAAwB,6BAAlD,EAAgF;AAC5EN,QAAAA,KAAK,EAAEA;AADqE,OAAhF,EAGKO,IAHL,CAGWC,QAAD,IAAc;AAChB,YAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACvB,iBAAO,CAACb,KAAK,CAACa,OAAN,eACJ,QAAC,QAAD;AAAA,oCACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAOF,QAAQ,CAACC,IAAT,CAAcC;AAArB;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADI,CAAD,EAMLR,aAAa,CAAC,IAAD,CANR,CAAP;AAOH,SARD,MAQO,IAAIM,QAAQ,CAACC,IAAT,CAAcE,IAAlB,EAAwB;AAC3B,iBAAOd,KAAK,CAACc,IAAN,eACH,QAAC,QAAD;AAAA,oCACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAOH,QAAQ,CAACC,IAAT,CAAcE;AAArB;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADG,CAAP;AAKH,SANM,MAMC;AACJ,iBAAOd,KAAK,CAACe,KAAN,eACH,QAAC,QAAD;AAAA,oCACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAOJ,QAAQ,CAACC,IAAT,CAAcG;AAArB;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADG,CAAP;AAKH;AACJ,OAzBL,EAyBOL,IAzBP,CA0BQR,QAAQ,CAAC,SAAD,CA1BhB;AA4BH,KA7BD,MA8BK;AACD,aAAOF,KAAK,CAACe,KAAN,eACH,QAAC,QAAD;AAAA,gCACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,CAAP;AAKH;;AAID,QAAIZ,KAAK,KAAK,IAAd,EAAoB;AAChBD,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACH;AACF,GA5CM,EA4CJ,EA5CI,CAAT;AAgDA,sBACI,QAAC,QAAD;AAAA,2BACG;AAAA,gBAAIE,UAAU,GAAG,OAAH,GAAa;AAA3B;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA5DQH,kB;UACYF,W,EACCL,S;;;KAFbO,kB;AA8DT,eAAeA,kBAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { useParams , } from 'react-router-dom';\n\nimport Axios from 'axios';\nimport { BiError, BiMessageCheck, BiMinusCircle } from \"react-icons/bi\";\nimport { useNavigate } from \"react-router-dom\";\n\n//Toast\nimport { toast } from \"react-toastify\";\n\nfunction ResetPasswordToken() {\n    const navigate = useNavigate();\n    const { token } = useParams();\n    const [validToken, setValidToken] = useState(false);\n\n    useEffect(() => {\n        if (token) {\n            Axios.post(`${process.env.REACT_APP_SERVER_DOMAIN}/verify/resetpassword/token`, {\n                token: token\n            })\n                .then((response) => {\n                    if (response.data.success) {\n                        return [toast.success(\n                            <Fragment>\n                                <BiMessageCheck />\n                                <span>{response.data.success}</span>\n                            </Fragment>\n    \n                        ),setValidToken(true)];\n                    } else if (response.data.warn) {\n                        return toast.warn(\n                            <Fragment>\n                                <BiError />\n                                <span>{response.data.warn}</span>\n                            </Fragment>);\n                    }  else {\n                        return toast.error(\n                            <Fragment>\n                                <BiMinusCircle />\n                                <span>{response.data.error}</span>\n                            </Fragment>);\n                    }\n                }).then(\n                    navigate(\"/signup\")\n                );\n        }\n        else {\n            return toast.error(\n                <Fragment>\n                    <BiMinusCircle />\n                    <span>System is Error. Please Try Again!</span>\n                </Fragment>);\n        }\n    \n    \n    \n        if (token === null) {\n            navigate(\"/\");\n        }\n      }, []);\n\n\n\n    return (\n        <Fragment>\n           <p>{validToken ? \"HEllo\" : \"No token\"}</p>\n        </Fragment>\n    );\n\n\n}\n\nexport default ResetPasswordToken;"]},"metadata":{},"sourceType":"module"}