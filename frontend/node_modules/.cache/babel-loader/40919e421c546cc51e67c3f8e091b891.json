{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Settings/Password.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, Fragment } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Col, Form } from \"react-bootstrap\";\nimport { BiChevronLeft } from \"react-icons/bi\";\nimport { BsEyeFill, BsEyeSlashFill } from \"react-icons/bs\";\nimport Heading from \"../Heading\";\nimport { AuthContext } from \"../../Helpers/AuthContext\";\nimport useInput from \"../../Helpers/use-input\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotPassword = value => value.match(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,30}$/);\n\nfunction Password({\n  setshowSubContentClick\n}) {\n  _s();\n\n  let navigate = useNavigate();\n  const {\n    setAuthState\n  } = useContext(AuthContext);\n  const [currentPassword, setCurrentPassword] = useState(false);\n  const [newPassword, setNewPassword] = useState(false);\n  const [confirmPassword, setConfirmPassword] = useState(false);\n\n  const toggleCurrentPassword = () => {\n    setCurrentPassword(!currentPassword);\n  };\n\n  const toggleNewPassword = () => {\n    setNewPassword(!newPassword);\n  };\n\n  const toggleConfirmPassword = () => {\n    setConfirmPassword(!confirmPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authState,\n      setAuthState\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        onClick: () => setshowSubContentClick(0),\n        className: \"me-2 d-block d-sm-none\",\n        children: [/*#__PURE__*/_jsxDEV(BiChevronLeft, {\n          className: \"d-inline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          content: \"Password\",\n          design: \"h1 d-inline-block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 10,\n        md: 12,\n        sm: 12,\n        className: \"mx-auto my-2\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          content: \"Change Password\",\n          design: \" h3 mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            className: \"form-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"studyField\",\n              className: \"required\",\n              children: \"Current Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: currentPassword ? \"text\" : \"password\",\n                className: \"form-control form-control-sm\",\n                id: \"pswd1\" //   className={nameClasses}\n                //   onChange={nameChangeHandler}\n                //   onBlur={nameBlurHandler}\n                //   value={enteredName}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"input-group-text\",\n                onClick: toggleCurrentPassword,\n                children: currentPassword === true ? /*#__PURE__*/_jsxDEV(BsEyeFill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(BsEyeSlashFill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 56\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            className: \"form-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"studyField\",\n              className: \"required\",\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: newPassword ? \"text\" : \"password\",\n                className: \"form-control form-control-sm\",\n                id: \"pswd2\" //   className={nameClasses}\n                //   onChange={nameChangeHandler}\n                //   onBlur={nameBlurHandler}\n                //   value={enteredName}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"input-group-text\",\n                onClick: toggleNewPassword,\n                children: newPassword === true ? /*#__PURE__*/_jsxDEV(BsEyeFill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(BsEyeSlashFill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 52\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            className: \"form-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"studyField\",\n              className: \"required\",\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: confirmPassword ? \"text\" : \"password\",\n                className: \"form-control form-control-sm\",\n                id: \"pswd3\" //   className={nameClasses}\n                //   onChange={nameChangeHandler}\n                //   onBlur={nameBlurHandler}\n                //   value={enteredName}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"input-group-text\",\n                onClick: toggleConfirmPassword,\n                children: confirmPassword === true ? /*#__PURE__*/_jsxDEV(BsEyeFill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 43\n                }, this) : /*#__PURE__*/_jsxDEV(BsEyeSlashFill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 58\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"text-end\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"reset\",\n              class: \"btn btn-outline-secondary\",\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              class: \"btn btn-primary\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Password, \"wzQgOcxiNyHJUNho4Mq3SUtanoU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Password;\nexport default Password;\n\nvar _c;\n\n$RefreshReg$(_c, \"Password\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Settings/Password.js"],"names":["React","useState","useEffect","useContext","Fragment","useNavigate","Col","Form","BiChevronLeft","BsEyeFill","BsEyeSlashFill","Heading","AuthContext","useInput","toast","isNotPassword","value","match","Password","setshowSubContentClick","navigate","setAuthState","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","toggleCurrentPassword","toggleNewPassword","toggleConfirmPassword","authState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, Fragment } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Col, Form } from \"react-bootstrap\";\nimport { BiChevronLeft } from \"react-icons/bi\";\nimport { BsEyeFill, BsEyeSlashFill } from \"react-icons/bs\";\n\nimport Heading from \"../Heading\";\n\nimport { AuthContext } from \"../../Helpers/AuthContext\";\nimport useInput from \"../../Helpers/use-input\";\nimport { toast } from \"react-toastify\";\n\n\nconst isNotPassword = (value) =>\n  value.match(\n    /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,30}$/\n  );\n\nfunction Password({ setshowSubContentClick }) {\n\n    let navigate = useNavigate();\n  const { setAuthState } = useContext(AuthContext);\n\n    const [currentPassword, setCurrentPassword] = useState(false);\n    const [newPassword, setNewPassword] = useState(false);\n    const [confirmPassword, setConfirmPassword] = useState(false);\n\n    const toggleCurrentPassword = () => {\n        setCurrentPassword(!currentPassword);\n      };\n\n      const toggleNewPassword = () => {\n        setNewPassword(!newPassword);\n      };\n\n      const toggleConfirmPassword = () => {\n        setConfirmPassword(!confirmPassword);\n      };\n  return (\n    <AuthContext.Provider value={{ authState, setAuthState }}>\n    <div>\n      <h1\n        onClick={() => setshowSubContentClick(0)}\n        className=\"me-2 d-block d-sm-none\"\n      >\n        <BiChevronLeft className=\"d-inline\" />\n        <Heading content=\"Password\" design=\"h1 d-inline-block\" />\n      </h1>\n      <Col lg={10} md={12} sm={12} className=\"mx-auto my-2\">\n        <Heading content=\"Change Password\" design=\" h3 mb-4\" />\n\n        <Form>\n          <Col sm={12} className=\"form-group mb-3\">\n            <label htmlFor=\"studyField\" className=\"required\">\n              Current Password\n            </label>\n            <div className=\"input-group mb-3\">\n              <input\n                type={currentPassword ? \"text\" : \"password\"} \n                className=\"form-control form-control-sm\"\n                id=\"pswd1\"\n                //   className={nameClasses}\n                //   onChange={nameChangeHandler}\n                //   onBlur={nameBlurHandler}\n                //   value={enteredName}\n              />\n              <span className=\"input-group-text\" onClick={toggleCurrentPassword}>\n              {currentPassword===true ? <BsEyeFill />: <BsEyeSlashFill />}\n              </span>\n            </div>\n\n            {/* {nameInputHasError && (\n                      <Form.Control.Feedback type=\"invalid\">\n                        Please fill in person-in-charge name.\n                      </Form.Control.Feedback>\n                    )} */}\n          </Col>\n\n          <Col sm={12} className=\"form-group mb-3\">\n            <label htmlFor=\"studyField\" className=\"required\">\n              New Password\n            </label>\n            <div className=\"input-group mb-3\">\n            <input\n                type={newPassword ? \"text\" : \"password\"} \n                className=\"form-control form-control-sm\"\n                id=\"pswd2\"\n                //   className={nameClasses}\n                //   onChange={nameChangeHandler}\n                //   onBlur={nameBlurHandler}\n                //   value={enteredName}\n              />\n              <span className=\"input-group-text\" onClick={toggleNewPassword}>\n              {newPassword===true ? <BsEyeFill />: <BsEyeSlashFill />}\n              </span>\n            </div>\n\n            {/* {nameInputHasError && (\n                      <Form.Control.Feedback type=\"invalid\">\n                        Please fill in person-in-charge name.\n                      </Form.Control.Feedback>\n                    )} */}\n          </Col>\n\n          <Col sm={12} className=\"form-group mb-3\">\n            <label htmlFor=\"studyField\" className=\"required\">\n              Confirm Password\n            </label>\n            <div className=\"input-group mb-3\">\n            <input\n                type={confirmPassword ? \"text\" : \"password\"} \n                className=\"form-control form-control-sm\"\n                id=\"pswd3\"\n                //   className={nameClasses}\n                //   onChange={nameChangeHandler}\n                //   onBlur={nameBlurHandler}\n                //   value={enteredName}\n              />\n              <span className=\"input-group-text\"\n              onClick={toggleConfirmPassword}\n              >\n                {confirmPassword===true ? <BsEyeFill />: <BsEyeSlashFill />}\n              </span>\n            </div>\n\n            {/* {nameInputHasError && (\n                      <Form.Control.Feedback type=\"invalid\">\n                        Please fill in person-in-charge name.\n                      </Form.Control.Feedback>\n                    )} */}\n          </Col>\n\n          <Col className=\"text-end\">\n            <button type=\"reset\" class=\"btn btn-outline-secondary\">\n              Reset\n            </button>{\" \"}\n            <button type=\"submit\" class=\"btn btn-primary\">\n              Save\n            </button>\n          </Col>\n        </Form>\n      </Col>\n    </div>\n    </AuthContext.Provider >\n  );\n}\n\nexport default Password;\n"]},"metadata":{},"sourceType":"module"}