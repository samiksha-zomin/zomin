{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ForgetPassword.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Col, Container, Row, Form, Button } from \"react-bootstrap\";\nimport Heading from \"../Components/Heading\";\nimport useInput from \"../Helpers/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmail = (value //eslint-disable-next-line\n) => /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value);\n\nfunction ForgetPassword() {\n  _s();\n\n  //LOGIN\n  // Email Input Check\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(isNotEmail);\n  let forgetPasswordFormIsValid = false;\n\n  if (enteredEmailIsValid) {\n    forgetPasswordFormIsValid = true;\n  }\n\n  const forgetPasswordFormSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredEmailIsValid) {\n      return;\n    } else {\n      alert(\"hi\");\n    }\n\n    resetEmailInput(\"\");\n  };\n\n  const emailClasses = emailInputHasError ? \"form-control form-control-sm is-invalid p-2\" : \"form-control form-control-sm p-2\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"forgetpassword\",\n    className: \"forgetpassword vh-100\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-5 pt-5 mx-auto text-center\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            content: \"Recover Password\",\n            design: \"h3 mb-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Don't worry,happens to the best of us.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: forgetPasswordFormSubmissionHandler,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            sm: 4,\n            className: \"mb-3 mx-auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Email Address\",\n              className: emailClasses,\n              onChange: emailChangeHandler,\n              onBlur: emailBlurHandler,\n              value: enteredEmail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please enter a valid Email Address.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            sm: 4,\n            className: \" mx-auto text-end\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              size: \"sm\",\n              variant: \"primary\",\n              disabled: !forgetPasswordFormIsValid,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ForgetPassword, \"ShWULhjgn9/Tfc3m2HHa2FhL6J8=\", false, function () {\n  return [useInput];\n});\n\n_c = ForgetPassword;\nexport default ForgetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgetPassword\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ForgetPassword.jsx"],"names":["React","Col","Container","Row","Form","Button","Heading","useInput","isNotEmail","value","test","ForgetPassword","enteredEmail","isValid","enteredEmailIsValid","hasError","emailInputHasError","valueChangeHandler","emailChangeHandler","inputBlurHandler","emailBlurHandler","reset","resetEmailInput","forgetPasswordFormIsValid","forgetPasswordFormSubmissionHandler","event","preventDefault","alert","emailClasses"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Col, Container, Row, Form, Button } from \"react-bootstrap\";\n\nimport Heading from \"../Components/Heading\";\n\nimport useInput from \"../Helpers/use-input\";\n\nconst isNotEmail = (\n    value //eslint-disable-next-line\n  ) => /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value);\n\nfunction ForgetPassword() {\n     //LOGIN\n  // Email Input Check\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInput(isNotEmail);\n\n  let forgetPasswordFormIsValid = false;\n\n  if (enteredEmailIsValid) {\n    forgetPasswordFormIsValid = true;\n  }\n\n  const forgetPasswordFormSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if(!enteredEmailIsValid) {\n        return;\n    } else {\n        alert(\"hi\");\n    }\n    resetEmailInput(\"\");\n  };\n\n  const emailClasses = emailInputHasError\n  ? \"form-control form-control-sm is-invalid p-2\"\n  : \"form-control form-control-sm p-2\";\n\n  return (\n    <div id=\"forgetpassword\" className=\"forgetpassword vh-100\">\n      <Container className=\"mt-5 pt-5 mx-auto text-center\">\n        <Row>\n          <Col>\n            <Heading content=\"Recover Password\" design=\"h3 mb-3\" />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <p>Don't worry,happens to the best of us.</p>\n          </Col>\n        </Row>\n        <Form onSubmit={forgetPasswordFormSubmissionHandler}>\n        <Row>\n          <Col sm={4} className=\"mb-3 mx-auto\">\n            <input\n              type=\"email\"\n              placeholder=\"Email Address\"\n              className={emailClasses}\n                      onChange={emailChangeHandler}\n                      onBlur={emailBlurHandler}\n                      value={enteredEmail}\n                    />\n                    {emailInputHasError && (\n                      <Form.Control.Feedback type=\"invalid\">\n                      Please enter a valid Email Address.\n                      </Form.Control.Feedback>\n                    )}\n          </Col>\n        </Row>\n        <Row>\n          <Col  sm={4} className=\" mx-auto text-end\">\n          {/* <Button className=\"mx-1\" variant=\"outline-secondary\"  size=\"sm\" href=\"/signup\">Cancel </Button>  */}\n            <Button type=\"button\" size=\"sm\" variant=\"primary\" disabled={!forgetPasswordFormIsValid} >\n              Submit\n            </Button>\n          </Col>\n        </Row>\n        </Form>\n      </Container>\n    </div>\n  );\n}\n\nexport default ForgetPassword;\n"]},"metadata":{},"sourceType":"module"}