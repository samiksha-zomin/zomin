{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/Employer.js\";\nimport React from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport updateResume from \"../../Assests/Images/banner/SideBar/updateResume.jpeg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Employer() {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"py-3 px-3\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        lg: 10,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-end align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            children: \"Add Job Posting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        lg: 2,\n        className: \"sidebarHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: updateResume,\n          alt: \"\",\n          className: \"w-100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      sm: 1,\n      md: 2,\n      lg: 2,\n      className: \"g-1 py-1 px-1 mt-4\",\n      children: opportunityList.filter(opportunityDetails => {\n        if (searchTerm === \"\") {\n          return opportunityDetails;\n        } else if (opportunityDetails.job_title.toLowerCase().includes(searchTerm.toLowerCase()) || opportunityDetails.job_type.toLowerCase().includes(searchTerm.toLowerCase()) || opportunityDetails.company_name.toLowerCase().includes(searchTerm.toLowerCase()) || opportunityDetails.job_location.toLowerCase().includes(searchTerm.toLowerCase())) {\n          return opportunityDetails;\n        }\n\n        return false;\n      }).filter(opportunityDetails => {\n        if (searchLocationTerm === \"\") {\n          return opportunityDetails;\n        } else if (opportunityDetails.job_location.toLowerCase().includes(searchLocationTerm.toLowerCase())) {\n          return opportunityDetails;\n        }\n\n        return false;\n      }).filter(opportunityDetails => {\n        if (searchEducationTerm === \"\") {\n          return opportunityDetails;\n        } else if (opportunityDetails.education.toLowerCase().includes(searchEducationTerm.toLowerCase())) {\n          return opportunityDetails;\n        }\n\n        return false;\n      }).filter(opportunityDetails => {\n        if (searchJobTypeTerm === \"\") {\n          return opportunityDetails;\n        } else if (opportunityDetails.job_type.toLowerCase().includes(searchJobTypeTerm.toLowerCase())) {\n          return opportunityDetails;\n        }\n\n        return false;\n      }).map((opportunityDetails, key) => {\n        const oppoID = opportunityDetails.oppo_id;\n        const job_type = opportunityDetails.job_type;\n        const job_title = opportunityDetails.job_title;\n        const company_name = opportunityDetails.companyname;\n        const job_location = opportunityDetails.job_location;\n        const salary_status = opportunityDetails.salary_status;\n        const salary = opportunityDetails.salary;\n        const test = opportunityDetails.test;\n        const nationality = opportunityDetails.nationality;\n        const year_exp = opportunityDetails.year_exp;\n        const fresh_graduate = opportunityDetails.fresh_graduate;\n        const education = opportunityDetails.education;\n        const field_study = opportunityDetails.field_study;\n        const iv_option = opportunityDetails.iv_option;\n        const job_desc = opportunityDetails.job_desc;\n        const partnerLink = \"/partner/\" + opportunityDetails.companyname.toLowerCase().trim().split(/\\s+/).join('-');\n        const partnerLogo = \"https://www.zom-in.com/images/profileimg/\" + opportunityDetails.company_logo;\n        return /*#__PURE__*/_jsxDEV(OpportunityLongCard, {\n          oppoID: oppoID,\n          cardImage: partnerLogo,\n          jobType: job_type,\n          jobTitle: job_title,\n          jobLocation: job_location,\n          compName: company_name,\n          compLink: partnerLink,\n          salary: salary,\n          salaryStatus: salary_status,\n          jobTest: test,\n          nationality: nationality,\n          yearExp: year_exp,\n          freshGraduate: fresh_graduate,\n          education: education,\n          fieldStudy: field_study,\n          ivOption: iv_option,\n          jobDesc: job_desc\n        }, oppoID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Employer;\nexport default Employer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employer\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/Employer.js"],"names":["React","Container","Row","Col","Button","updateResume","Employer","opportunityList","filter","opportunityDetails","searchTerm","job_title","toLowerCase","includes","job_type","company_name","job_location","searchLocationTerm","searchEducationTerm","education","searchJobTypeTerm","map","key","oppoID","oppo_id","companyname","salary_status","salary","test","nationality","year_exp","fresh_graduate","field_study","iv_option","job_desc","partnerLink","trim","split","join","partnerLogo","company_logo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\n\nimport updateResume from \"../../Assests/Images/banner/SideBar/updateResume.jpeg\";\n\n\nfunction Employer() {\n    return (\n        <Container className=\"py-3 px-3\">\n            <Row>\n            <Col xs={12} sm={12} md={12} lg={10} >\n            <div className=\"text-end align-items-center\">\n                <Button variant=\"primary\">\n                    Add Job Posting\n                </Button>\n            </div>\n            </Col>\n            <Col xs={12} sm={12} md={12} lg={2}\n                        className=\"sidebarHeader\" >\n                        <img src={updateResume} alt=\"\" className=\"w-100\" />\n                    </Col>\n            </Row>\n\n            <Row xs={1} sm={1} md={2} lg={2} className=\"g-1 py-1 px-1 mt-4\">\n\n{opportunityList\n    .filter(opportunityDetails => {\n        if (searchTerm === \"\") {\n            return opportunityDetails\n        } else if (\n            (opportunityDetails.job_title.toLowerCase().includes(searchTerm.toLowerCase()))\n            ||\n            (opportunityDetails.job_type.toLowerCase().includes(searchTerm.toLowerCase()))\n            ||\n            (opportunityDetails.company_name.toLowerCase().includes(searchTerm.toLowerCase()))\n            ||\n            (opportunityDetails.job_location.toLowerCase().includes(searchTerm.toLowerCase()))\n        ) {\n            return opportunityDetails\n        }\n        return false;\n    })\n\n    .filter(opportunityDetails => {\n        if (searchLocationTerm === \"\") {\n            return opportunityDetails\n        } else if (opportunityDetails.job_location.toLowerCase().includes(searchLocationTerm.toLowerCase())) {\n            return opportunityDetails\n        }\n        return false;\n    })\n\n    .filter(opportunityDetails => {\n\n        if (searchEducationTerm === \"\") {\n            return opportunityDetails\n        } else if (opportunityDetails.education.toLowerCase().includes(searchEducationTerm.toLowerCase())) {\n            return opportunityDetails\n        }\n        return false;\n    })\n\n\n    .filter(opportunityDetails => {\n\n        if (searchJobTypeTerm === \"\") {\n            return opportunityDetails\n        } else if (opportunityDetails.job_type.toLowerCase().includes(searchJobTypeTerm.toLowerCase())) {\n            return opportunityDetails\n        }\n        return false;\n    })\n\n    .map((opportunityDetails, key) => {\n        const oppoID = opportunityDetails.oppo_id;\n        const job_type = opportunityDetails.job_type;\n        const job_title = opportunityDetails.job_title;\n        const company_name = opportunityDetails.companyname;\n        const job_location = opportunityDetails.job_location;\n        const salary_status = opportunityDetails.salary_status;\n        const salary = opportunityDetails.salary;\n        const test = opportunityDetails.test;\n        const nationality = opportunityDetails.nationality;\n        const year_exp = opportunityDetails.year_exp;\n        const fresh_graduate = opportunityDetails.fresh_graduate;\n        const education = opportunityDetails.education;\n        const field_study = opportunityDetails.field_study;\n        const iv_option = opportunityDetails.iv_option;\n        const job_desc = opportunityDetails.job_desc;\n        const partnerLink = \"/partner/\" + opportunityDetails.companyname.toLowerCase().trim().split(/\\s+/).join('-');\n        const partnerLogo = \"https://www.zom-in.com/images/profileimg/\" + opportunityDetails.company_logo;\n\n        return (\n\n                <OpportunityLongCard\n                    key={oppoID}\n                    oppoID={oppoID}\n                    cardImage={partnerLogo}\n                    jobType={job_type}\n                    jobTitle={job_title}\n                    jobLocation={job_location}\n                    compName={company_name}\n                    compLink={partnerLink}\n                    salary={salary}\n                    salaryStatus={salary_status}\n                    jobTest={test}\n                    nationality={nationality}\n                    yearExp={year_exp}\n                    freshGraduate={fresh_graduate}\n                    education={education}\n                    fieldStudy={field_study}\n                    ivOption={iv_option}\n                    jobDesc={job_desc}\n                />\n        );\n    })}\n\n\n\n</Row>\n        </Container>\n    )\n}\n\nexport default Employer\n"]},"metadata":{},"sourceType":"module"}