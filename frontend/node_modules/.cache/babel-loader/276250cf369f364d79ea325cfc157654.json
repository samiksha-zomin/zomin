{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/BasicInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Axios from \"axios\";\nimport useInput from \"../Hooks/use-input\"; // import DatePicker from \"react-datepicker\";\n\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport DatePicker from \"react-datepicker\";\nimport { Container, Col, Row, InputGroup, Form } from \"react-bootstrap\"; //Componnets\n\nimport Header from \"../Components/Header\";\nimport Heading from \"../Components/Heading\";\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== \"\";\n\nfunction BasicInfo(props) {\n  _s();\n\n  const [employer, setEmployer] = useState(\"\");\n  const [userID, setuserID] = useState(\"\");\n  Axios.defaults.withCredentials = true;\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/auth/login\").then(response => {\n      if (response.data.loggedIn === true) {\n        console.log(response);\n        setEmployer(response.data.user[0].email);\n        setuserID(response.data.user[0].id);\n        console.log(response.data);\n        console.log(\"hi\");\n      }\n    });\n  }, []); // Gender Input Check\n\n  const {\n    value: enteredGender,\n    isValid: enteredGenderIsValid,\n    hasError: genderInputHasError,\n    valueChangeHandler: genderChangeHandler,\n    inputBlurHandler: genderBlurHandler,\n    reset: resetGenderInput\n  } = useInput(isNotEmpty); //DOB Input Check\n\n  const {\n    value: enteredDob,\n    isValid: enteredDobIsValid,\n    hasError: dobInputHasError,\n    valueChangeHandler: dobChangeHandler,\n    inputBlurHandler: dobBlurHandler,\n    reset: resetDobInput\n  } = useInput(isNotEmpty); //About Input Check\n\n  const {\n    value: enteredAbout,\n    isValid: enteredAboutIsValid,\n    hasError: aboutInputHasError,\n    valueChangeHandler: aboutChangeHandler,\n    inputBlurHandler: aboutBlurHandler,\n    reset: resetAboutInput\n  } = useInput(isNotEmpty); //School Input Check\n  // const {\n  //   value: enteredSchool,\n  //   isValid: enteredSchoolIsValid,\n  //   hasError: schoolInputHasError,\n  //   valueChangeHandler: schoolChangeHandler,\n  //   inputBlurHandler: schoolBlurHandler,\n  //   reset: resetSchoolInput,\n  // } = useInput(isNotEmpty);\n  //Highest Education Level Check\n\n  const {\n    value: enteredHighLevel,\n    isValid: enteredHighLevelIsValid,\n    hasError: highLevelInputHasError,\n    valueChangeHandler: highLevelChangeHandler,\n    inputBlurHandler: highLevelBlurHandler,\n    reset: resetHighLevelInput\n  } = useInput(isNotEmpty); //Current Status Level Check\n\n  const {\n    value: enteredCurrentStatus,\n    isValid: enteredCurrentStatusIsValid,\n    hasError: currentStatusInputHasError,\n    valueChangeHandler: currentStatusChangeHandler,\n    inputBlurHandler: currentStatusBlurHandler,\n    reset: resetCurrentStatusInput\n  } = useInput(isNotEmpty);\n  let basicInfoFormIsValid = false;\n\n  if (enteredGenderIsValid && enteredDobIsValid && enteredAboutIsValid && enteredHighLevelIsValid && enteredCurrentStatusIsValid) {\n    basicInfoFormIsValid = true;\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredGenderIsValid && !enteredDobIsValid && !enteredAboutIsValid && !enteredHighLevelIsValid && !enteredCurrentStatusIsValid) {\n      return;\n    } else {\n      Axios.post('http://localhost:3001/basicinfo/user', {\n        gender: enteredGender,\n        dob: enteredDob,\n        about: enteredAbout\n      }).then(response => {\n        return console.log(response.data);\n      });\n    }\n\n    console.log(\"Can Submit to BE\");\n    console.log(enteredGender);\n    console.log(enteredDob);\n    console.log(enteredAbout);\n    console.log(enteredHighLevel);\n    console.log(enteredCurrentStatus); // console.log(enteredSchool);\n\n    resetGenderInput();\n    resetDobInput();\n    resetAboutInput(); // resetSchoolInput();\n\n    resetHighLevelInput();\n    resetCurrentStatusInput();\n  };\n\n  const dobClasses = dobInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const aboutClasses = aboutInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const highLevelClasses = highLevelInputHasError ? \"form-select form-select-sm is-invalid\" : \"form-select form-select-sm\"; // const schoolClasses = schoolInputHasError\n  //   ? \"form-control is-invalid\"\n  //   : \"form-control\";\n  // School Suggestion\n\n  const [schoolSelections, setSchoolSelections] = useState([]);\n  const [universityList, setUniversityList] = useState([]);\n  const [eduList, setEduList] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/meta/university\").then(response => {\n      setUniversityList(response.data);\n      console.log(response.data);\n    });\n  }, []); //Education Level\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/meta/eduLevel\").then(response => {\n      setEduList(response.data);\n      console.log(response.data);\n    });\n  }, []);\n  const [currentStatus, setCurrentStatus] = useState(0); // 0: no show, 1: show yes, 2: show no.\n\n  const jobStatus = currentStatus => {\n    setCurrentStatus(currentStatus);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HelmetProvider, {\n      children: /*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \" Basic Info | Zom - IN \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"my-5\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: 6,\n          xs: 12,\n          className: \"mx-auto\",\n          children: [employer === \"samiksha.zomin@gmail.com\" ? \"Employer\" : \"USer\", /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: userID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Heading, {\n            content: \"Basic Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: formSubmissionHandler,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              sm: 12,\n              className: \"form-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"inputgender\",\n                className: \"required\",\n                children: \"You are\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    className: \"btn-check\",\n                    name: \"gender\",\n                    id: \"male\",\n                    autoComplete: \"off\",\n                    onChange: genderChangeHandler,\n                    onBlur: genderBlurHandler,\n                    value: \"Male\",\n                    value: enteredGender\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"btn btn-outline-success\",\n                    htmlFor: \"male\",\n                    children: \"Male\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ms-2 \",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    className: \"btn-check\",\n                    name: \"gender\",\n                    id: \"female\",\n                    autoComplete: \"off\",\n                    onChange: genderChangeHandler,\n                    onBlur: genderBlurHandler,\n                    value: enteredGender,\n                    value: \"Female\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"btn btn-outline-info\",\n                    htmlFor: \"female\",\n                    children: \"Female\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this), genderInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please choose your gender.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 12,\n              className: \"form-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"inputdob\",\n                className: \"required\",\n                children: \"Date of Birth\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                id: \"inputdob\",\n                placeholder: \"Your Birthday\",\n                className: dobClasses,\n                onChange: dobChangeHandler,\n                onBlur: dobBlurHandler,\n                value: enteredDob\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this), dobInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please select your birthdate.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 12,\n              className: \"form-group mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"inputabout\",\n                className: \"required\",\n                children: \"About\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                placeholder: \"Tell us about you\",\n                className: aboutClasses,\n                onChange: aboutChangeHandler,\n                onBlur: aboutBlurHandler,\n                value: enteredAbout\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this), aboutInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Tell us about you.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"my-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Heading, {\n              content: \"Education\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 12,\n              className: \"form-group mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"inputSchool\",\n                className: \"required\",\n                children: \"School\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Typeahead, {\n                  allowNew: true,\n                  caseSensitive: true,\n                  ignoreDiacritics: false,\n                  className: \"is-valid labelkey-example\",\n                  id: \"valid-styles-example\",\n                  isValid: true,\n                  labelKey: option => `${option.university_name}`,\n                  options: universityList\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"valid\",\n                  children: \"Feedback\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 12,\n              className: \"form-group mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"eduLevel\",\n                className: \"required\",\n                children: \"Highest Education Level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                defaultValue: \"DEFAULT\",\n                className: \"\",\n                \"aria-label\": \"Default select example\",\n                className: highLevelClasses,\n                onChange: highLevelChangeHandler,\n                onBlur: highLevelBlurHandler,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Please Choose One\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 19\n                }, this), eduList.map((eduList, key) => {\n                  const enteredHighLevel = eduList.child_name;\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: enteredHighLevel,\n                    children: [\" \", enteredHighLevel, \" \"]\n                  }, enteredHighLevel, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 23\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }, this), highLevelInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please choose your highest education Level.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 12,\n              className: \"form-group mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"eduYear\",\n                className: \"required\",\n                children: \"Year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  sm: 4,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(DatePicker // required\n                  , {\n                    showYearPicker: true,\n                    dateFormat: \"yyyy\",\n                    yearItemNumber: 10,\n                    placeholderText: \"Year Start\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(DatePicker // selected={startDate}\n                  // onChange={(date) => setStartDate(date)}\n                  , {\n                    showYearPicker: true,\n                    dateFormat: \"yyyy\",\n                    yearItemNumber: 10,\n                    placeholderText: \"Year End\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"my-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Heading, {\n              content: \"Working Experience\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 12,\n              className: \"form-group mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"currentStatus\",\n                className: \"required\",\n                children: \"Current Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    className: \"btn-check\",\n                    name: \"status\",\n                    id: \"employedCS\",\n                    autoComplete: \"off\",\n                    onChange: currentStatusChangeHandler,\n                    onBlur: currentStatusBlurHandler,\n                    value: enteredCurrentStatus,\n                    value: \"employee\",\n                    checked: currentStatus === 2,\n                    onClick: e => jobStatus(2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"btn btn-outline-success\",\n                    htmlFor: \"employedCS\",\n                    children: \"Employed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 431,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ms-2 \",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    className: \"btn-check\",\n                    name: \"status\",\n                    id: \"unemployedCS\",\n                    autoComplete: \"off\",\n                    onChange: currentStatusChangeHandler,\n                    onBlur: currentStatusBlurHandler,\n                    value: enteredCurrentStatus,\n                    value: \"unemployed\",\n                    checked: currentStatus === 1,\n                    onClick: e => jobStatus(1)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 437,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"btn btn-outline-info\",\n                    htmlFor: \"unemployedCS\",\n                    children: \"Unemployed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ms-2 \",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    className: \"btn-check\",\n                    name: \"status\",\n                    id: \"internCS\",\n                    autoComplete: \"off\",\n                    onChange: currentStatusChangeHandler,\n                    onBlur: currentStatusBlurHandler,\n                    value: enteredCurrentStatus,\n                    value: \"intern\",\n                    checked: currentStatus === 3,\n                    onClick: e => jobStatus(3)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"btn btn-outline-warning\",\n                    htmlFor: \"internCS\",\n                    children: \"Intern\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 17\n              }, this), currentStatusInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please choose your current status.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this), currentStatus > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                sm: 12,\n                className: \"form-group mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"companyName\",\n                  className: \"required\",\n                  children: \"Company Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"companyName\",\n                  placeholder: \"Company Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 12,\n                className: \"form-group mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"currentPos\",\n                  className: \"required\",\n                  children: \"Current Position\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  size: \"sm\",\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"currentPos\",\n                  placeholder: \"Current Position\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"my-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Heading, {\n              content: \"Skills & Experience\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 12,\n              className: \"form-group mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"inputskillexp\",\n                children: \"Skills & Experience\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                placeholder: \"Please use comma(,) to separate your skills\" // className={aboutClasses}\n                // onChange={aboutChangeHandler}\n                // onBlur={aboutBlurHandler}\n                // value={enteredAbout}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              className: \"text-end my-3\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \" btn btn-primary\",\n                disabled: !basicInfoFormIsValid,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BasicInfo, \"jDoQK+i4c8eUYods4BQvSWYZjRM=\", false, function () {\n  return [useInput, useInput, useInput, useInput, useInput];\n});\n\n_c = BasicInfo;\nexport default BasicInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicInfo\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/BasicInfo.jsx"],"names":["React","Fragment","useState","useEffect","Helmet","HelmetProvider","Axios","useInput","Typeahead","DatePicker","Container","Col","Row","InputGroup","Form","Header","Heading","toast","isNotEmpty","value","trim","BasicInfo","props","employer","setEmployer","userID","setuserID","defaults","withCredentials","get","then","response","data","loggedIn","console","log","user","email","id","enteredGender","isValid","enteredGenderIsValid","hasError","genderInputHasError","valueChangeHandler","genderChangeHandler","inputBlurHandler","genderBlurHandler","reset","resetGenderInput","enteredDob","enteredDobIsValid","dobInputHasError","dobChangeHandler","dobBlurHandler","resetDobInput","enteredAbout","enteredAboutIsValid","aboutInputHasError","aboutChangeHandler","aboutBlurHandler","resetAboutInput","enteredHighLevel","enteredHighLevelIsValid","highLevelInputHasError","highLevelChangeHandler","highLevelBlurHandler","resetHighLevelInput","enteredCurrentStatus","enteredCurrentStatusIsValid","currentStatusInputHasError","currentStatusChangeHandler","currentStatusBlurHandler","resetCurrentStatusInput","basicInfoFormIsValid","formSubmissionHandler","event","preventDefault","post","gender","dob","about","dobClasses","aboutClasses","highLevelClasses","schoolSelections","setSchoolSelections","universityList","setUniversityList","eduList","setEduList","currentStatus","setCurrentStatus","jobStatus","option","university_name","map","key","child_name","e"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Axios from \"axios\";\nimport useInput from \"../Hooks/use-input\";\n\n// import DatePicker from \"react-datepicker\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport DatePicker from \"react-datepicker\";\nimport { Container, Col, Row, InputGroup, Form } from \"react-bootstrap\";\n\n//Componnets\nimport Header from \"../Components/Header\";\nimport Heading from \"../Components/Heading\";\nimport { toast } from 'react-toastify';\n\n\nconst isNotEmpty = (value) => value.trim() !== \"\";\n\nfunction BasicInfo(props) {\n  \n\n  const [employer, setEmployer] = useState(\"\");\n  const [userID, setuserID] = useState(\"\");\n\n  Axios.defaults.withCredentials = true;\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/auth/login\").then((response) => {\n        if (response.data.loggedIn === true) {\n          console.log(response);\n            setEmployer(response.data.user[0].email);\n            setuserID(response.data.user[0].id);\n            console.log(response.data);\n            console.log(\"hi\");\n        }\n      });\n}, []);\n\n  // Gender Input Check\n  const {\n    value: enteredGender,\n    isValid: enteredGenderIsValid,\n    hasError: genderInputHasError,\n    valueChangeHandler: genderChangeHandler,\n    inputBlurHandler: genderBlurHandler,\n    reset: resetGenderInput,\n  } = useInput(isNotEmpty);\n\n  //DOB Input Check\n  const {\n    value: enteredDob,\n    isValid: enteredDobIsValid,\n    hasError: dobInputHasError,\n    valueChangeHandler: dobChangeHandler,\n    inputBlurHandler: dobBlurHandler,\n    reset: resetDobInput,\n  } = useInput(isNotEmpty);\n\n  //About Input Check\n  const {\n    value: enteredAbout,\n    isValid: enteredAboutIsValid,\n    hasError: aboutInputHasError,\n    valueChangeHandler: aboutChangeHandler,\n    inputBlurHandler: aboutBlurHandler,\n    reset: resetAboutInput,\n  } = useInput(isNotEmpty);\n\n  //School Input Check\n  // const {\n  //   value: enteredSchool,\n  //   isValid: enteredSchoolIsValid,\n  //   hasError: schoolInputHasError,\n  //   valueChangeHandler: schoolChangeHandler,\n  //   inputBlurHandler: schoolBlurHandler,\n  //   reset: resetSchoolInput,\n  // } = useInput(isNotEmpty);\n\n  //Highest Education Level Check\n  const {\n    value: enteredHighLevel,\n    isValid: enteredHighLevelIsValid,\n    hasError: highLevelInputHasError,\n    valueChangeHandler: highLevelChangeHandler,\n    inputBlurHandler: highLevelBlurHandler,\n    reset: resetHighLevelInput,\n  } = useInput(isNotEmpty);\n\n  //Current Status Level Check\n  const {\n    value: enteredCurrentStatus,\n    isValid: enteredCurrentStatusIsValid,\n    hasError: currentStatusInputHasError,\n    valueChangeHandler: currentStatusChangeHandler,\n    inputBlurHandler: currentStatusBlurHandler,\n    reset: resetCurrentStatusInput,\n  } = useInput(isNotEmpty);\n\n  let basicInfoFormIsValid = false;\n\n  if (\n    enteredGenderIsValid &&\n    enteredDobIsValid &&\n    enteredAboutIsValid &&\n    enteredHighLevelIsValid &&\n    enteredCurrentStatusIsValid\n  ) {\n    basicInfoFormIsValid = true;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (\n      !enteredGenderIsValid &&\n      !enteredDobIsValid &&\n      !enteredAboutIsValid &&\n      !enteredHighLevelIsValid &&\n      !enteredCurrentStatusIsValid\n    ) {\n      return;\n    } else {\n      Axios.post('http://localhost:3001/basicinfo/user', {\n        gender: enteredGender,\n        dob: enteredDob,\n        about: enteredAbout,\n      })\n      .then ((response) => {\n          return (\n                  console.log(response.data)\n          );\n      })\n    }\n\n    console.log(\"Can Submit to BE\");\n    console.log(enteredGender);\n    console.log(enteredDob);\n    console.log(enteredAbout);\n    console.log(enteredHighLevel);\n    console.log(enteredCurrentStatus);\n    // console.log(enteredSchool);\n    resetGenderInput();\n    resetDobInput();\n    resetAboutInput();\n    // resetSchoolInput();\n    resetHighLevelInput();\n    resetCurrentStatusInput();\n  };\n\n  const dobClasses = dobInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const aboutClasses = aboutInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const highLevelClasses = highLevelInputHasError\n    ? \"form-select form-select-sm is-invalid\"\n    : \"form-select form-select-sm\";\n\n  // const schoolClasses = schoolInputHasError\n  //   ? \"form-control is-invalid\"\n  //   : \"form-control\";\n\n  // School Suggestion\n  const [schoolSelections, setSchoolSelections] = useState([]);\n  const [universityList, setUniversityList] = useState([]);\n  const [eduList, setEduList] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/meta/university\").then((response) => {\n      setUniversityList(response.data);\n      console.log(response.data);\n    });\n  }, []);\n\n  //Education Level\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/meta/eduLevel\").then((response) => {\n      setEduList(response.data);\n      console.log(response.data);\n    });\n  }, []);\n\n  const [currentStatus, setCurrentStatus] = useState(0); // 0: no show, 1: show yes, 2: show no.\n  const jobStatus = (currentStatus) => {\n    setCurrentStatus(currentStatus);\n  };\n\n  return (\n    <Fragment>\n      <Header />\n      <HelmetProvider>\n        <Helmet>\n          <title> Basic Info | Zom - IN </title>\n        </Helmet>\n      </HelmetProvider>\n\n      <Container className=\"my-5\">\n        <Row>\n          <Col sm={6} xs={12} className=\"mx-auto\">\n        {employer === \"samiksha.zomin@gmail.com\" ? \"Employer\" : \"USer\" }\n          <h1>{userID}</h1>\n\n          \n          \n            <Heading content=\"Basic Info\" />\n            <Form onSubmit={formSubmissionHandler}>\n              {/* Gender */}\n              <Col sm={12} className=\"form-group mb-3\">\n                <label htmlFor=\"inputgender\" className=\"required\">\n                  You are\n                </label>\n                <InputGroup>\n                  <div>\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"gender\"\n                      id=\"male\"\n                      autoComplete=\"off\"\n                      onChange={genderChangeHandler}\n                      onBlur={genderBlurHandler}\n                      value=\"Male\"\n                      value={enteredGender}\n                    />\n                    <label className=\"btn btn-outline-success\" htmlFor=\"male\">\n                      Male\n                    </label>\n                  </div>\n\n                  <div className=\"ms-2 \">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"gender\"\n                      id=\"female\"\n                      autoComplete=\"off\"\n                      onChange={genderChangeHandler}\n                      onBlur={genderBlurHandler}\n                      value={enteredGender}\n                      value=\"Female\"\n                    />\n                    <label className=\"btn btn-outline-info\" htmlFor=\"female\">\n                      Female\n                    </label>\n                  </div>\n                </InputGroup>\n                {genderInputHasError && (\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please choose your gender.\n                  </Form.Control.Feedback>\n                )}\n              </Col>\n\n              {/* DAte of Birth */}\n              <Col sm={12} className=\"form-group mb-3\">\n                <label htmlFor=\"inputdob\" className=\"required\">\n                  Date of Birth\n                </label>\n                <input\n                  type=\"date\"\n                  id=\"inputdob\"\n                  placeholder=\"Your Birthday\"\n                  className={dobClasses}\n                  onChange={dobChangeHandler}\n                  onBlur={dobBlurHandler}\n                  value={enteredDob}\n                />\n                {dobInputHasError && (\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please select your birthdate.\n                  </Form.Control.Feedback>\n                )}\n              </Col>\n\n              {/* About Me */}\n              <Col sm={12} className=\"form-group mb-2\">\n                <label htmlFor=\"inputabout\" className=\"required\">\n                  About\n                </label>\n                <Form.Control\n                  as=\"textarea\"\n                  placeholder=\"Tell us about you\"\n                  className={aboutClasses}\n                  onChange={aboutChangeHandler}\n                  onBlur={aboutBlurHandler}\n                  value={enteredAbout}\n                />\n                {aboutInputHasError && (\n                  <Form.Control.Feedback type=\"invalid\">\n                    Tell us about you.\n                  </Form.Control.Feedback>\n                )}\n              </Col>\n              <hr className=\"my-4\" />\n\n              <Heading content=\"Education\" />\n              <Col sm={12} className=\"form-group mb-2\">\n                <label htmlFor=\"inputSchool\" className=\"required\">\n                  School\n                </label>\n\n                <Form.Group>\n                  <Typeahead\n                  allowNew={true}\n                  caseSensitive\n                  ignoreDiacritics={false}\n                    className=\"is-valid labelkey-example\"\n                    id=\"valid-styles-example\"\n                    isValid\n                    labelKey={(option) => `${option.university_name}`}\n                  options={universityList}\n                  />\n                  <Form.Control.Feedback type=\"valid\">\n                    Feedback\n                  </Form.Control.Feedback>\n                </Form.Group>\n\n                \n\n                {/*  <Typeahead\n                  allowNew={true}\n                  id=\"basic-typeahead-single\"\n                  onChange={setSchoolSelections}\n                  labelKey={(option) => `${option.university_name}`}\n                  options={universityList}\n                  placeholder=\"Choose a state...\"\n                  selected={schoolSelections}\n                  newSelectionPrefix=\"Add a new item: \"\n                  // className={schoolClasses}\n                  // onChange={schoolChangeHandler}\n                  // onBlur={schoolBlurHandler}\n                  //isInvalid\n                  //className=\"is-invalid\"\n                  // value={enteredSchool}\n                  inputProps={{\n                    className: `${aboutClasses}`,\n                    required: true,\n                  }}\n                />\n\n                {aboutInputHasError && (\n                  <Form.Control.Feedback type=\"invalid\">\n                    Tell us about you.\n                  </Form.Control.Feedback>\n                )}*/}\n              </Col>\n\n              {/* Highest Education Level  */}\n              <Col sm={12} className=\"form-group mb-2\">\n                <label htmlFor=\"eduLevel\" className=\"required\">\n                  Highest Education Level\n                </label>\n                <select\n                  defaultValue={\"DEFAULT\"}\n                  className=\"\"\n                  aria-label=\"Default select example\"\n                  className={highLevelClasses}\n                  onChange={highLevelChangeHandler}\n                  onBlur={highLevelBlurHandler}\n                >\n                  <option>Please Choose One</option>\n                  {eduList.map((eduList, key) => {\n                    const enteredHighLevel = eduList.child_name;\n                    return (\n                      <option key={enteredHighLevel} value={enteredHighLevel}>\n                        {\" \"}\n                        {enteredHighLevel}{\" \"}\n                      </option>\n                    );\n                  })}\n                </select>\n\n                {highLevelInputHasError && (\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please choose your highest education Level.\n                  </Form.Control.Feedback>\n                )}\n              </Col>\n\n              <Col sm={12} className=\"form-group mb-2\">\n                <label htmlFor=\"eduYear\" className=\"required\">\n                  Year\n                </label>\n                <InputGroup className=\"mb-3\">\n                  <Col sm={4} xs={6}>\n                    <DatePicker\n                      // required\n                      showYearPicker\n                      dateFormat=\"yyyy\"\n                      yearItemNumber={10}\n                      placeholderText=\"Year Start\"\n                    />\n                  </Col>\n                  <Col>\n                    <DatePicker\n                      // selected={startDate}\n                      // onChange={(date) => setStartDate(date)}\n                      showYearPicker\n                      dateFormat=\"yyyy\"\n                      yearItemNumber={10}\n                      placeholderText=\"Year End\"\n                    />\n                  </Col>\n                </InputGroup>\n              </Col>\n\n              <hr className=\"my-4\" />\n              <Heading content=\"Working Experience\" />\n\n              <Col sm={12} className=\"form-group mb-2\">\n                <label htmlFor=\"currentStatus\" className=\"required\">\n                  Current Status\n                </label>\n\n                <InputGroup className=\"mb-3\">\n                  <div>\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"status\"\n                      id=\"employedCS\"\n                      autoComplete=\"off\"\n                      onChange={currentStatusChangeHandler}\n                      onBlur={currentStatusBlurHandler}\n                      value={enteredCurrentStatus}\n                      value=\"employee\"\n                      checked={currentStatus === 2}\n                      onClick={(e) => jobStatus(2)}\n                    />\n                    <label className=\"btn btn-outline-success\" htmlFor=\"employedCS\">\n                      Employed\n                    </label>\n                  </div>\n\n                  <div className=\"ms-2 \">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"status\"\n                      id=\"unemployedCS\"\n                      autoComplete=\"off\"\n                      onChange={currentStatusChangeHandler}\n                      onBlur={currentStatusBlurHandler}\n                      value={enteredCurrentStatus}\n                      value=\"unemployed\"\n                      checked={currentStatus === 1}\n                      onClick={(e) => jobStatus(1)}\n                    />\n                    <label className=\"btn btn-outline-info\" htmlFor=\"unemployedCS\">\n                      Unemployed\n                    </label>\n                  </div>\n\n                  <div className=\"ms-2 \">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"status\"\n                      id=\"internCS\"\n                      autoComplete=\"off\"\n                      onChange={currentStatusChangeHandler}\n                      onBlur={currentStatusBlurHandler}\n                      value={enteredCurrentStatus}\n                      value=\"intern\"\n                      checked={currentStatus === 3}\n                      onClick={(e) => jobStatus(3)}\n                    />\n                    <label className=\"btn btn-outline-warning\" htmlFor=\"internCS\">\n                      Intern\n                    </label>\n                  </div>\n                </InputGroup>\n                {currentStatusInputHasError && (\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please choose your current status.\n                  </Form.Control.Feedback>\n                )}\n              </Col>\n\n              {currentStatus > 1 && (\n                <div>\n                  <Col sm={12} className=\"form-group mb-2\">\n                    <label htmlFor=\"companyName\" className=\"required\">\n                      Company Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"companyName\"\n                      placeholder=\"Company Name\"\n                    />\n                  </Col>\n\n                  <Col sm={12} className=\"form-group mb-2\">\n                    <label htmlFor=\"currentPos\" className=\"required\">\n                      Current Position\n                    </label>\n                    <input\n                      size=\"sm\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"currentPos\"\n                      placeholder=\"Current Position\"\n                    />\n                  </Col>\n                </div>\n              )}\n\n              <hr className=\"my-4\" />\n              <Heading content=\"Skills & Experience\" />\n\n              {/* Skills & Experience\" */}\n              <Col sm={12} className=\"form-group mb-2\">\n                <label htmlFor=\"inputskillexp\">Skills & Experience</label>\n                <Form.Control\n                  as=\"textarea\"\n                  placeholder=\"Please use comma(,) to separate your skills\"\n                  // className={aboutClasses}\n                  // onChange={aboutChangeHandler}\n                  // onBlur={aboutBlurHandler}\n                  // value={enteredAbout}\n                />\n                {/* {aboutInputHasError && (\n                  <Form.Control.Feedback type=\"invalid\">\n                    Tell us about you.\n                  </Form.Control.Feedback>\n                )} */}\n\n              </Col>\n\n              <Col className=\"text-end my-3\">\n                <button\n                  type=\"submit\"\n                  className=\" btn btn-primary\"\n                  disabled={!basicInfoFormIsValid}\n                >\n                  Submit\n                </button>\n              </Col>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </Fragment>\n  );\n}\n\nexport default BasicInfo;\n"]},"metadata":{},"sourceType":"module"}