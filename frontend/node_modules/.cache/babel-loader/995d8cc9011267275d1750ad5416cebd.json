{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/SignUpEmployer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../Helpers/AuthContext\";\nimport useInput from \"../Helpers/use-input\";\nimport Heading from \"../Components/Heading\";\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\nimport { BiError, BiMessageCheck, BiMinusCircle } from \"react-icons/bi\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== \"\";\n\nconst isNotEmail = (value //eslint-disable-next-line\n) => /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value);\n\nconst isNotPassword = value => value.match(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,30}$/);\n\nconst isNotPhone = value => value.match(/^\\d{10,12}$/);\n\nfunction SignUpEmployer() {\n  _s();\n\n  let navigate = useNavigate();\n  const {\n    setAuthState\n  } = useContext(AuthContext); //Toggle Sign up and Log In form\n\n  const [userIsRegistered, setLogin] = useState(false);\n  const [industryList, setIndustryList] = useState(\"\");\n\n  function toggleLogin() {\n    setLogin(!userIsRegistered);\n  } //Industyry Level\n\n\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/industry`).then(response => {\n      setIndustryList(response.data);\n    });\n  }, []); //SIGN UP\n  // Company Name Check\n\n  const {\n    value: enteredSignUpCompanyName,\n    isValid: enteredSignUpCompanyNameIsValid,\n    hasError: signUpCompanyNameInputHasError,\n    valueChangeHandler: signUpCompanyNameChangeHandler,\n    inputBlurHandler: signUpCompanyNameBlurHandler,\n    reset: resetSignUpCompanyNameInput\n  } = useInput(isNotEmpty); //Industry Input Check\n\n  const {\n    value: enteredSignUpIndustry,\n    isValid: enteredSignUpIndustryIsValid,\n    hasError: signUpIndustryInputHasError,\n    valueChangeHandler: signUpIndustryChangeHandler,\n    inputBlurHandler: signUpIndustryBlurHandler,\n    reset: resetSignUpIndustryInput\n  } = useInput(isNotEmpty); // Full Name Check\n\n  const {\n    value: enteredSignUpFullName,\n    isValid: enteredSignUpFullNameIsValid,\n    hasError: signUpFullNameInputHasError,\n    valueChangeHandler: signUpFullNameChangeHandler,\n    inputBlurHandler: signUpFullNameBlurHandler,\n    reset: resetSignUpFullNameInput\n  } = useInput(isNotEmpty); // Email Input Check\n\n  const {\n    value: enteredSignUpEmail,\n    isValid: enteredSignUpEmailIsValid,\n    hasError: signUpEmailInputHasError,\n    valueChangeHandler: signUpEmailChangeHandler,\n    inputBlurHandler: signUpEmailBlurHandler,\n    reset: resetSignUpEmailInput\n  } = useInput(isNotEmail); // Phone Input Check\n\n  const {\n    value: enteredSignUpPhone,\n    isValid: enteredSignUpPhoneIsValid,\n    hasError: signUpPhoneInputHasError,\n    valueChangeHandler: signUpPhoneChangeHandler,\n    inputBlurHandler: signUpPhoneBlurHandler,\n    reset: resetSignUpPhoneInput\n  } = useInput(isNotPhone); // Password Input Check\n\n  const {\n    value: enteredSignUpPassword,\n    isValid: enteredSignUpPasswordIsValid,\n    hasError: signUpPasswordInputHasError,\n    valueChangeHandler: signUpPasswordChangeHandler,\n    inputBlurHandler: signUpPasswordBlurHandler,\n    reset: resetSignUpPasswordInput\n  } = useInput(isNotPassword);\n  let signUpFormIsValid = false;\n\n  if (enteredSignUpCompanyName && enteredSignUpIndustry && enteredSignUpFullName && enteredSignUpEmail && enteredSignUpPhone && enteredSignUpPassword) {\n    signUpFormIsValid = true;\n  }\n  /* eslint-disable-next-line */\n\n\n  const signUpEmployerFormSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredSignUpCompanyNameIsValid && !enteredSignUpIndustryIsValid && !enteredSignUpFullNameIsValid && !enteredSignUpEmailIsValid && !enteredSignUpPhoneIsValid && !enteredSignUpPasswordIsValid) {\n      return;\n    } else {\n      Axios.post(`${process.env.REACT_APP_SERVER_DOMAIN}/auth/employer/signup`, {\n        companyName: enteredSignUpCompanyName,\n        industry: enteredSignUpIndustry,\n        fullName: enteredSignUpFullName,\n        email: enteredSignUpEmail,\n        phone: enteredSignUpPhone,\n        password: enteredSignUpPassword\n      }).then(response => {\n        if (response.data.error) {\n          return toast.error( /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(BiMinusCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: response.data.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this));\n        } else if (response.data.warn) {\n          return toast.warn( /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(BiError, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: response.data.warn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this));\n        } else {\n          return toast.success( /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(BiMessageCheck, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: response.data.success\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this));\n        }\n      });\n    }\n\n    resetSignUpCompanyNameInput();\n    resetSignUpIndustryInput();\n    resetSignUpFullNameInput();\n    resetSignUpEmailInput();\n    resetSignUpPhoneInput();\n    resetSignUpPasswordInput();\n  };\n\n  const signUpCompanyNameClasses = signUpCompanyNameInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const signUpIndustryClasses = signUpIndustryInputHasError ? \"form-select form-select-sm is-invalid\" : \"form-select form-select-sm\";\n  const signUpFullNameClasses = signUpFullNameInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const signUpEmailClasses = signUpEmailInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const signUpPhoneClasses = signUpPhoneInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const signUpPasswordClasses = signUpPasswordInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\"; //LOGIN\n  // Email Input Check\n\n  const {\n    value: enteredLogEmail,\n    isValid: enteredLogEmailIsValid,\n    hasError: logEmailInputHasError,\n    valueChangeHandler: logEmailChangeHandler,\n    inputBlurHandler: logEmailBlurHandler,\n    reset: resetLogEmailInput\n  } = useInput(isNotEmail); // Password Input Check\n\n  const {\n    value: enteredLogPassword,\n    isValid: enteredLogPasswordIsValid,\n    hasError: logPasswordInputHasError,\n    valueChangeHandler: logPasswordChangeHandler,\n    inputBlurHandler: logPasswordBlurHandler,\n    reset: resetLogPasswordInput\n  } = useInput(isNotPassword);\n  let loginFormIsValid = false;\n\n  if (enteredLogEmailIsValid && enteredLogPasswordIsValid) {\n    loginFormIsValid = true;\n  }\n\n  const logInEmployerFormSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredLogEmailIsValid && !enteredLogPasswordIsValid) {\n      return;\n    } else {\n      Axios.post(`${process.env.REACT_APP_SERVER_DOMAIN}/auth/login`, {\n        email: enteredLogEmail,\n        password: enteredLogPassword\n      }).then(response => {\n        if (response.data.error) {\n          return toast.error( /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(BiMinusCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: response.data.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this));\n        } else if (response.data.warn) {\n          return toast.warn( /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(BiError, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: response.data.warn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this));\n        } else {\n          localStorage.setItem(\"accessToken\", response.data.token);\n          setAuthState({\n            id: response.data.id,\n            admin: response.data.admin,\n            company: response.data.company,\n            attempt: response.data.attempt,\n            status: true\n          });\n\n          if (response.data.attempt === 1) {\n            navigate(\"/\");\n          } else {\n            navigate(\"/basicinfo\");\n          }\n        }\n      });\n    }\n\n    resetLogEmailInput();\n    resetLogPasswordInput();\n  };\n\n  const logEmailClasses = logEmailInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const logPasswordClasses = logPasswordInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HelmetProvider, {\n      children: /*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \" Employer - Sign Up & Log In | Zom - IN \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"signUpEmployer\",\n      className: \"signUpEmployer\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 11,\n        md: 9,\n        className: \"mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            md: 6,\n            children: userIsRegistered ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(Heading, {\n                  content: \"Sign Up Now as an Employer!\",\n                  design: \"h4 mb-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: signUpEmployerFormSubmissionHandler,\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"inputSignUpCompanyName\",\n                    placeholder: \"Company Name\",\n                    className: signUpCompanyNameClasses,\n                    onChange: signUpCompanyNameChangeHandler,\n                    onBlur: signUpCompanyNameBlurHandler,\n                    value: enteredSignUpCompanyName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 23\n                  }, this), signUpCompanyNameInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please enter your Company Name.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                    defaultValue: \"\",\n                    className: signUpIndustryClasses,\n                    onChange: signUpIndustryChangeHandler,\n                    onBlur: signUpIndustryBlurHandler,\n                    \"aria-label\": \"Industry\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      selected: true,\n                      children: \"Industry\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 25\n                    }, this), industryList.map((industryList, key) => {\n                      const enteredSignUpIndustry = industryList.child_name;\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: enteredSignUpIndustry,\n                        children: enteredSignUpIndustry\n                      }, enteredSignUpIndustry, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 329,\n                        columnNumber: 29\n                      }, this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 23\n                  }, this), signUpCompanyNameInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please enter your Company Name.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"inputSignUpFullName\",\n                    placeholder: \"Representative Name\",\n                    className: signUpFullNameClasses,\n                    onChange: signUpFullNameChangeHandler,\n                    onBlur: signUpFullNameBlurHandler,\n                    value: enteredSignUpFullName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 23\n                  }, this), signUpFullNameInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please enter your Full Name.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    id: \"inputSignUpEmail\",\n                    placeholder: \"Representative Email Address\",\n                    className: signUpEmailClasses,\n                    onChange: signUpEmailChangeHandler,\n                    onBlur: signUpEmailBlurHandler,\n                    value: enteredSignUpEmail\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 23\n                  }, this), signUpEmailInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please enter a valid Email Address.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"inputSignUpPhone\",\n                    placeholder: \"Phone Number\",\n                    className: signUpPhoneClasses,\n                    onChange: signUpPhoneChangeHandler,\n                    onBlur: signUpPhoneBlurHandler,\n                    value: enteredSignUpPhone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 377,\n                    columnNumber: 23\n                  }, this), signUpPhoneInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please enter a valid Phone Number.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    id: \"inputSignUpPassword\",\n                    placeholder: \"Password\",\n                    className: signUpPasswordClasses,\n                    onChange: signUpPasswordChangeHandler,\n                    onBlur: signUpPasswordBlurHandler,\n                    value: enteredSignUpPassword\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 23\n                  }, this), signUpPasswordInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Must contain more than 8 characters which contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"By clicking sign up, you agree to Zom-In's\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                      className: \"text-decoration-none\",\n                      href: \"/PrivacyPolicy\",\n                      children: \"Privacy Policy\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 413,\n                      columnNumber: 25\n                    }, this), \" \", \"and\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                      className: \"text-decoration-none\",\n                      href: \"/TermOfUse\",\n                      children: \"Term of Use\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 420,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3 text-center mx-auto\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \" btn btn-success\",\n                    disabled: !signUpFormIsValid,\n                    children: \"Sign Up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    className: \" text-end\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"link\",\n                      onClick: toggleLogin,\n                      children: \"Already have an account?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 436,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(Heading, {\n                  content: \"Log In Now as an Employer!\",\n                  design: \"h4 mb-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: logInEmployerFormSubmissionHandler,\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    id: \"inputLogEmail\",\n                    placeholder: \"Email Address\",\n                    className: logEmailClasses,\n                    onChange: logEmailChangeHandler,\n                    onBlur: logEmailBlurHandler,\n                    value: enteredLogEmail\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 23\n                  }, this), logEmailInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please enter a valid Email Address.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 463,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    id: \"inputLogPassword\",\n                    placeholder: \"Password\",\n                    className: logPasswordClasses,\n                    onChange: logPasswordChangeHandler,\n                    onBlur: logPasswordBlurHandler,\n                    value: enteredLogPassword\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 21\n                  }, this), logPasswordInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Must contain more than 8 characters which contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \" btn btn-primary\",\n                    disabled: !loginFormIsValid,\n                    children: \"Log In\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 487,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  className: \"text-start\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"link\",\n                    children: userIsRegistered && \"Forget Password?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 498,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \" text-end\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"link\",\n                    onClick: toggleLogin,\n                    children: \"Don't have an account?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            md: 6,\n            className: \"divider text-center\",\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              content: \"Sign Up as User\",\n              design: \"h4 mb-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-5 d-grid gap-3\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                href: \"/signup\",\n                variant: \"outline-success\",\n                children: \"Sign Up as User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpEmployer, \"jUbPqrrUuJhK1E8njwc2+tokpmg=\", false, function () {\n  return [useNavigate, useInput, useInput, useInput, useInput, useInput, useInput, useInput, useInput];\n});\n\n_c = SignUpEmployer;\nexport default SignUpEmployer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpEmployer\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/SignUpEmployer.jsx"],"names":["React","Fragment","useState","useEffect","Helmet","HelmetProvider","Axios","useNavigate","AuthContext","useInput","Heading","Row","Col","Form","Button","BiError","BiMessageCheck","BiMinusCircle","toast","isNotEmpty","value","trim","isNotEmail","test","isNotPassword","match","isNotPhone","SignUpEmployer","navigate","setAuthState","useContext","userIsRegistered","setLogin","industryList","setIndustryList","toggleLogin","get","process","env","REACT_APP_SERVER_DOMAIN","then","response","data","enteredSignUpCompanyName","isValid","enteredSignUpCompanyNameIsValid","hasError","signUpCompanyNameInputHasError","valueChangeHandler","signUpCompanyNameChangeHandler","inputBlurHandler","signUpCompanyNameBlurHandler","reset","resetSignUpCompanyNameInput","enteredSignUpIndustry","enteredSignUpIndustryIsValid","signUpIndustryInputHasError","signUpIndustryChangeHandler","signUpIndustryBlurHandler","resetSignUpIndustryInput","enteredSignUpFullName","enteredSignUpFullNameIsValid","signUpFullNameInputHasError","signUpFullNameChangeHandler","signUpFullNameBlurHandler","resetSignUpFullNameInput","enteredSignUpEmail","enteredSignUpEmailIsValid","signUpEmailInputHasError","signUpEmailChangeHandler","signUpEmailBlurHandler","resetSignUpEmailInput","enteredSignUpPhone","enteredSignUpPhoneIsValid","signUpPhoneInputHasError","signUpPhoneChangeHandler","signUpPhoneBlurHandler","resetSignUpPhoneInput","enteredSignUpPassword","enteredSignUpPasswordIsValid","signUpPasswordInputHasError","signUpPasswordChangeHandler","signUpPasswordBlurHandler","resetSignUpPasswordInput","signUpFormIsValid","signUpEmployerFormSubmissionHandler","event","preventDefault","post","companyName","industry","fullName","email","phone","password","error","warn","success","signUpCompanyNameClasses","signUpIndustryClasses","signUpFullNameClasses","signUpEmailClasses","signUpPhoneClasses","signUpPasswordClasses","enteredLogEmail","enteredLogEmailIsValid","logEmailInputHasError","logEmailChangeHandler","logEmailBlurHandler","resetLogEmailInput","enteredLogPassword","enteredLogPasswordIsValid","logPasswordInputHasError","logPasswordChangeHandler","logPasswordBlurHandler","resetLogPasswordInput","loginFormIsValid","logInEmployerFormSubmissionHandler","localStorage","setItem","token","id","admin","company","attempt","status","logEmailClasses","logPasswordClasses","map","key","child_name"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { AuthContext } from \"../Helpers/AuthContext\";\nimport useInput from \"../Helpers/use-input\";\n\nimport Heading from \"../Components/Heading\";\n\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\nimport { BiError, BiMessageCheck, BiMinusCircle } from \"react-icons/bi\";\nimport { toast } from \"react-toastify\";\n\nconst isNotEmpty = (value) => value.trim() !== \"\";\nconst isNotEmail = (\n  value //eslint-disable-next-line\n) => /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value);\n\nconst isNotPassword = (value) =>\n  value.match(\n    /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,30}$/\n  );\n\nconst isNotPhone = (value) => value.match(/^\\d{10,12}$/);\n\nfunction SignUpEmployer() {\n\n  let navigate = useNavigate();\n  const { setAuthState } = useContext(AuthContext);\n\n  //Toggle Sign up and Log In form\n  const [userIsRegistered, setLogin] = useState(false);\n  const [industryList, setIndustryList] = useState(\"\");\n\n  function toggleLogin() {\n    setLogin(!userIsRegistered);\n  }\n  //Industyry Level\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/industry`).then(\n      (response) => {\n        setIndustryList(response.data);\n      }\n    );\n  }, []);\n\n  //SIGN UP\n  // Company Name Check\n  const {\n    value: enteredSignUpCompanyName,\n    isValid: enteredSignUpCompanyNameIsValid,\n    hasError: signUpCompanyNameInputHasError,\n    valueChangeHandler: signUpCompanyNameChangeHandler,\n    inputBlurHandler: signUpCompanyNameBlurHandler,\n    reset: resetSignUpCompanyNameInput,\n  } = useInput(isNotEmpty);\n\n  //Industry Input Check\n  const {\n    value: enteredSignUpIndustry,\n    isValid: enteredSignUpIndustryIsValid,\n    hasError: signUpIndustryInputHasError,\n    valueChangeHandler: signUpIndustryChangeHandler,\n    inputBlurHandler: signUpIndustryBlurHandler,\n    reset: resetSignUpIndustryInput,\n  } = useInput(isNotEmpty);\n\n  // Full Name Check\n  const {\n    value: enteredSignUpFullName,\n    isValid: enteredSignUpFullNameIsValid,\n    hasError: signUpFullNameInputHasError,\n    valueChangeHandler: signUpFullNameChangeHandler,\n    inputBlurHandler: signUpFullNameBlurHandler,\n    reset: resetSignUpFullNameInput,\n  } = useInput(isNotEmpty);\n\n  // Email Input Check\n  const {\n    value: enteredSignUpEmail,\n    isValid: enteredSignUpEmailIsValid,\n    hasError: signUpEmailInputHasError,\n    valueChangeHandler: signUpEmailChangeHandler,\n    inputBlurHandler: signUpEmailBlurHandler,\n    reset: resetSignUpEmailInput,\n  } = useInput(isNotEmail);\n\n  // Phone Input Check\n  const {\n    value: enteredSignUpPhone,\n    isValid: enteredSignUpPhoneIsValid,\n    hasError: signUpPhoneInputHasError,\n    valueChangeHandler: signUpPhoneChangeHandler,\n    inputBlurHandler: signUpPhoneBlurHandler,\n    reset: resetSignUpPhoneInput,\n  } = useInput(isNotPhone);\n\n  // Password Input Check\n  const {\n    value: enteredSignUpPassword,\n    isValid: enteredSignUpPasswordIsValid,\n    hasError: signUpPasswordInputHasError,\n    valueChangeHandler: signUpPasswordChangeHandler,\n    inputBlurHandler: signUpPasswordBlurHandler,\n    reset: resetSignUpPasswordInput,\n  } = useInput(isNotPassword);\n\n  let signUpFormIsValid = false;\n\n  if (\n    enteredSignUpCompanyName &&\n    enteredSignUpIndustry &&\n    enteredSignUpFullName &&\n    enteredSignUpEmail &&\n    enteredSignUpPhone &&\n    enteredSignUpPassword\n  ) {\n    signUpFormIsValid = true;\n  }\n  \n  /* eslint-disable-next-line */\n  const signUpEmployerFormSubmissionHandler = (event) => {\n    event.preventDefault();\n    if (\n      !enteredSignUpCompanyNameIsValid &&\n      !enteredSignUpIndustryIsValid &&\n      !enteredSignUpFullNameIsValid &&\n      !enteredSignUpEmailIsValid &&\n      !enteredSignUpPhoneIsValid &&\n      !enteredSignUpPasswordIsValid\n    ) {\n      return;\n    } else {\n      Axios.post(\n        `${process.env.REACT_APP_SERVER_DOMAIN}/auth/employer/signup`,\n        {\n          companyName: enteredSignUpCompanyName,\n          industry: enteredSignUpIndustry,\n          fullName: enteredSignUpFullName,\n          email: enteredSignUpEmail,\n          phone: enteredSignUpPhone,\n          password: enteredSignUpPassword,\n        }\n      ).then((response) => {\n        if (response.data.error) {\n          return toast.error(\n            <Fragment>\n              <BiMinusCircle /> <span>{response.data.error}</span>\n            </Fragment>\n          );\n        } else if (response.data.warn) {\n          return toast.warn(\n            <Fragment>\n              <BiError /> <span>{response.data.warn}</span>\n            </Fragment>\n          );\n        } else {\n          return toast.success(\n            <Fragment>\n              <BiMessageCheck /> <span>{response.data.success}</span>\n            </Fragment>\n          );\n        }\n      });\n    }\n    resetSignUpCompanyNameInput();\n    resetSignUpIndustryInput();\n    resetSignUpFullNameInput();\n    resetSignUpEmailInput();\n    resetSignUpPhoneInput();\n    resetSignUpPasswordInput();\n  };\n\n  const signUpCompanyNameClasses = signUpCompanyNameInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const signUpIndustryClasses = signUpIndustryInputHasError\n    ? \"form-select form-select-sm is-invalid\"\n    : \"form-select form-select-sm\";\n\n  const signUpFullNameClasses = signUpFullNameInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const signUpEmailClasses = signUpEmailInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const signUpPhoneClasses = signUpPhoneInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const signUpPasswordClasses = signUpPasswordInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n\n    //LOGIN\n      // Email Input Check\n  const {\n    value: enteredLogEmail,\n    isValid: enteredLogEmailIsValid,\n    hasError: logEmailInputHasError,\n    valueChangeHandler: logEmailChangeHandler,\n    inputBlurHandler: logEmailBlurHandler,\n    reset: resetLogEmailInput,\n  } = useInput(isNotEmail);\n\n  // Password Input Check\n  const {\n    value: enteredLogPassword,\n    isValid: enteredLogPasswordIsValid,\n    hasError: logPasswordInputHasError,\n    valueChangeHandler: logPasswordChangeHandler,\n    inputBlurHandler: logPasswordBlurHandler,\n    reset: resetLogPasswordInput,\n  } = useInput(isNotPassword);\n\n  let loginFormIsValid = false;\n\n  if (enteredLogEmailIsValid && enteredLogPasswordIsValid) {\n    loginFormIsValid = true;\n  }\n  const logInEmployerFormSubmissionHandler = (event) => {\n    event.preventDefault();\n    if (!enteredLogEmailIsValid && !enteredLogPasswordIsValid) {\n      return;\n    } else {\n      Axios.post(`${process.env.REACT_APP_SERVER_DOMAIN}/auth/login`, {\n        email: enteredLogEmail,\n        password: enteredLogPassword,\n      }).then((response) => {\n        if (response.data.error) {\n          return toast.error(\n            <Fragment>\n              <BiMinusCircle /> <span>{response.data.error}</span>\n            </Fragment>\n          );\n        } else if (response.data.warn) {\n          return toast.warn(\n            <Fragment>\n              <BiError /> <span>{response.data.warn}</span>\n            </Fragment>\n          );\n        } else {\n          localStorage.setItem(\"accessToken\", response.data.token);\n          setAuthState({\n            id: response.data.id,\n            admin: response.data.admin,\n            company: response.data.company,\n            attempt: response.data.attempt,\n            status: true,\n          });\n\n          if(response.data.attempt === 1){\n            navigate(\"/\");\n          } else {\n            navigate(\"/basicinfo\");\n          }\n          \n        }\n      });\n    }\n    resetLogEmailInput();\n    resetLogPasswordInput();\n  }\n\n  const logEmailClasses = logEmailInputHasError\n  ? \"form-control form-control-sm is-invalid\"\n  : \"form-control form-control-sm\";\n\nconst logPasswordClasses = logPasswordInputHasError\n  ? \"form-control form-control-sm is-invalid\"\n  : \"form-control form-control-sm\";\n\n  return (\n    <Fragment>\n      <HelmetProvider>\n        <Helmet>\n          <title> Employer - Sign Up & Log In | Zom - IN </title>\n        </Helmet>\n      </HelmetProvider>\n      <div id=\"signUpEmployer\" className=\"signUpEmployer\">\n        <Col sm={11} md={9} className=\"mx-auto\">\n          <Row>\n            <Col sm={12} md={6}>\n              {userIsRegistered ? (\n                <>\n                  <div className=\"text-center\">\n                    <Heading\n                      content=\"Sign Up Now as an Employer!\"\n                      design=\"h4 mb-4\"\n                    />\n                  </div>\n                  <Form onSubmit={signUpEmployerFormSubmissionHandler}>\n                    <Col sm={12} className=\"mb-3\">\n                      <input\n                        type=\"text\"\n                        id=\"inputSignUpCompanyName\"\n                        placeholder=\"Company Name\"\n                        className={signUpCompanyNameClasses}\n                        onChange={signUpCompanyNameChangeHandler}\n                        onBlur={signUpCompanyNameBlurHandler}\n                        value={enteredSignUpCompanyName}\n                      />\n                      {signUpCompanyNameInputHasError && (\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please enter your Company Name.\n                        </Form.Control.Feedback>\n                      )}\n                    </Col>\n                    <Col sm={12} className=\"mb-3\">\n                      <select\n                        defaultValue={\"\"}\n                        className={signUpIndustryClasses}\n                        onChange={signUpIndustryChangeHandler}\n                        onBlur={signUpIndustryBlurHandler}\n                        aria-label=\"Industry\"\n                      >\n                        <option value=\"\" selected>\n                          Industry\n                        </option>\n\n                        {industryList.map((industryList, key) => {\n                          const enteredSignUpIndustry = industryList.child_name;\n                          return (\n                            <option\n                              key={enteredSignUpIndustry}\n                              value={enteredSignUpIndustry}\n                            >\n                              {enteredSignUpIndustry}\n                            </option>\n                          );\n                        })}\n                      </select>\n                      {signUpCompanyNameInputHasError && (\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please enter your Company Name.\n                        </Form.Control.Feedback>\n                      )}\n                    </Col>\n                    <Col sm={12} className=\"mb-3\">\n                      <input\n                        type=\"text\"\n                        id=\"inputSignUpFullName\"\n                        placeholder=\"Representative Name\"\n                        className={signUpFullNameClasses}\n                        onChange={signUpFullNameChangeHandler}\n                        onBlur={signUpFullNameBlurHandler}\n                        value={enteredSignUpFullName}\n                      />\n                      {signUpFullNameInputHasError && (\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please enter your Full Name.\n                        </Form.Control.Feedback>\n                      )}\n                    </Col>\n                    <Col sm={12} className=\"mb-3\">\n                      <input\n                        type=\"email\"\n                        id=\"inputSignUpEmail\"\n                        placeholder=\"Representative Email Address\"\n                        className={signUpEmailClasses}\n                        onChange={signUpEmailChangeHandler}\n                        onBlur={signUpEmailBlurHandler}\n                        value={enteredSignUpEmail}\n                      />\n                      {signUpEmailInputHasError && (\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please enter a valid Email Address.\n                        </Form.Control.Feedback>\n                      )}\n                    </Col>\n                    <Col sm={12} className=\"mb-3\">\n                      <input\n                        type=\"text\"\n                        id=\"inputSignUpPhone\"\n                        placeholder=\"Phone Number\"\n                        className={signUpPhoneClasses}\n                        onChange={signUpPhoneChangeHandler}\n                        onBlur={signUpPhoneBlurHandler}\n                        value={enteredSignUpPhone}\n                      />\n                      {signUpPhoneInputHasError && (\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please enter a valid Phone Number.\n                        </Form.Control.Feedback>\n                      )}\n                    </Col>\n                    <Col sm={12} className=\"mb-3\">\n                      <input\n                        type=\"password\"\n                        id=\"inputSignUpPassword\"\n                        placeholder=\"Password\"\n                        className={signUpPasswordClasses}\n                        onChange={signUpPasswordChangeHandler}\n                        onBlur={signUpPasswordBlurHandler}\n                        value={enteredSignUpPassword}\n                      />\n                      {signUpPasswordInputHasError && (\n                        <Form.Control.Feedback type=\"invalid\">\n                          Must contain more than 8 characters which contain at\n                          least one lowercase letter, one uppercase letter, one\n                          numeric digit, and one special character.\n                        </Form.Control.Feedback>\n                      )}\n                    </Col>\n                    <Col sm={12} className=\"mb-3\">\n                      <label>\n                        By clicking sign up, you agree to Zom-In's{\" \"}\n                        <a\n                          className=\"text-decoration-none\"\n                          href=\"/PrivacyPolicy\"\n                        >\n                          Privacy Policy\n                        </a>{\" \"}\n                        and{\" \"}\n                        <a className=\"text-decoration-none\" href=\"/TermOfUse\">\n                          Term of Use\n                        </a>\n                      </label>\n                    </Col>\n                    <Col sm={12} className=\"mb-3 text-center mx-auto\">\n                      <button\n                        type=\"submit\"\n                        className=\" btn btn-success\"\n                        disabled={!signUpFormIsValid}\n                      >\n                        Sign Up\n                      </button>\n                    </Col>\n                    <Row>\n                      <Col className=\" text-end\">\n                        <Button variant=\"link\" onClick={toggleLogin}>\n                          Already have an account?\n                        </Button>\n                      </Col>\n                    </Row>\n                  </Form>\n                </>\n              ) : (\n                <>\n                  <div className=\"text-center\">\n                    <Heading\n                      content=\"Log In Now as an Employer!\"\n                      design=\"h4 mb-4\"\n                    />\n                  </div>\n                  <Form onSubmit={logInEmployerFormSubmissionHandler}>\n                    <Col sm={12} className=\"mb-3\">\n                      <input \n                      type=\"email\"\n                        id=\"inputLogEmail\"\n                        placeholder=\"Email Address\"\n                        className={logEmailClasses}\n                        onChange={logEmailChangeHandler}\n                        onBlur={logEmailBlurHandler}\n                        value={enteredLogEmail}\n                         />\n                         {logEmailInputHasError && (\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please enter a valid Email Address.\n                        </Form.Control.Feedback>\n                      )}\n                    </Col>\n                    <Col sm={12} className=\"mb-3\">\n                    <input\n                        type=\"password\"\n                        id=\"inputLogPassword\"\n                        placeholder=\"Password\"\n                        className={logPasswordClasses}\n                        onChange={logPasswordChangeHandler}\n                        onBlur={logPasswordBlurHandler}\n                        value={enteredLogPassword}\n                      />\n                      {logPasswordInputHasError && (\n                        <Form.Control.Feedback type=\"invalid\">\n                          Must contain more than 8 characters which contain at\n                          least one lowercase letter, one uppercase letter, one\n                          numeric digit, and one special character.\n                        </Form.Control.Feedback>\n                      )}\n                    </Col>\n                    <Col sm={12} className=\"mb-3\">\n                      <button\n                        type=\"submit\"\n                        className=\" btn btn-primary\"\n                        disabled={!loginFormIsValid}\n                      >\n                        Log In\n                      </button>\n                    </Col>\n                  </Form>\n                  <Row>\n                    <Col className=\"text-start\">\n                      <Button variant=\"link\">\n                        {userIsRegistered && \"Forget Password?\"}\n                      </Button>\n                    </Col>\n                    <Col className=\" text-end\">\n                      <Button variant=\"link\" onClick={toggleLogin}>\n                        Don't have an account?\n                      </Button>\n                    </Col>\n                  </Row>\n                </>\n              )}\n            </Col>\n            <Col sm={12} md={6} className=\"divider text-center\">\n              <Heading content=\"Sign Up as User\" design=\"h4 mb-4\" />\n              <div className=\"mb-5 d-grid gap-3\">\n                <Button \n                href=\"/signup\"\n                variant=\"outline-success\">Sign Up as User</Button>\n              </div>\n            </Col>\n          </Row>\n        </Col>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default SignUpEmployer;\n"]},"metadata":{},"sourceType":"module"}