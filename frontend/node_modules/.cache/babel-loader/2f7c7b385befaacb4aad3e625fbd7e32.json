{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/SignUpEmployer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Axios from \"axios\";\nimport useInput from \"../Helpers/use-input\";\nimport Heading from \"../Components/Heading\";\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\nimport { BiError, BiMessageCheck, BiMinusCircle } from \"react-icons/bi\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== \"\";\n\nconst isNotEmail = (value //eslint-disable-next-line\n) => /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value);\n\nconst isNotPassword = value => value.match(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,30}$/);\n\nconst isNotPhone = value => value.match(/^\\d{10,12}$/);\n\nfunction SignUpEmployer() {\n  _s();\n\n  //Toggle Sign up and Log In form\n  const [userIsRegistered, setLogin] = useState(false);\n  const [industryList, setIndustryList] = useState(\"\");\n\n  function toggleLogin() {\n    setLogin(!userIsRegistered);\n  } //Industyry Level\n\n\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/industry`).then(response => {\n      setIndustryList(response.data);\n    });\n  }, []); //SIGN UP\n  // Company Name Check\n\n  const {\n    value: enteredSignUpCompanyName,\n    isValid: enteredSignUpCompanyNameIsValid,\n    hasError: signUpCompanyNameInputHasError,\n    valueChangeHandler: signUpCompanyNameChangeHandler,\n    inputBlurHandler: signUpCompanyNameBlurHandler,\n    reset: resetSignUpCompanyNameInput\n  } = useInput(isNotEmpty); //Industry Input Check\n\n  const {\n    value: enteredSignUpIndustry,\n    isValid: enteredSignUpIndustryIsValid,\n    hasError: signUpIndustryInputHasError,\n    valueChangeHandler: signUpIndustryChangeHandler,\n    inputBlurHandler: signUpIndustryBlurHandler,\n    reset: resetSignUpIndustryInput\n  } = useInput(isNotEmpty); // Full Name Check\n\n  const {\n    value: enteredSignUpFullName,\n    isValid: enteredSignUpFullNameIsValid,\n    hasError: signUpFullNameInputHasError,\n    valueChangeHandler: signUpFullNameChangeHandler,\n    inputBlurHandler: signUpFullNameBlurHandler,\n    reset: resetSignUpFullNameInput\n  } = useInput(isNotEmpty); // Email Input Check\n\n  const {\n    value: enteredSignUpEmail,\n    isValid: enteredSignUpEmailIsValid,\n    hasError: signUpEmailInputHasError,\n    valueChangeHandler: signUpEmailChangeHandler,\n    inputBlurHandler: signUpEmailBlurHandler,\n    reset: resetSignUpEmailInput\n  } = useInput(isNotEmail); // Phone Input Check\n\n  const {\n    value: enteredSignUpPhone,\n    isValid: enteredSignUpPhoneIsValid,\n    hasError: signUpPhoneInputHasError,\n    valueChangeHandler: signUpPhoneChangeHandler,\n    inputBlurHandler: signUpPhoneBlurHandler,\n    reset: resetSignUpPhoneInput\n  } = useInput(isNotPhone); // Password Input Check\n\n  const {\n    value: enteredSignUpPassword,\n    isValid: enteredSignUpPasswordIsValid,\n    hasError: signUpPasswordInputHasError,\n    valueChangeHandler: signUpPasswordChangeHandler,\n    inputBlurHandler: signUpPasswordBlurHandler,\n    reset: resetSignUpPasswordInput\n  } = useInput(isNotPassword);\n  let signUpFormIsValid = false;\n\n  if (enteredSignUpCompanyName && enteredSignUpIndustry && enteredSignUpFullName && enteredSignUpEmail && enteredSignUpPhone && enteredSignUpPassword) {\n    signUpFormIsValid = true;\n  }\n  /* eslint-disable-next-line */\n\n\n  const signUpFormSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredSignUpCompanyNameIsValid && !enteredSignUpIndustryIsValid && !enteredSignUpFullNameIsValid && !enteredSignUpEmailIsValid && !enteredSignUpPhoneIsValid && !enteredSignUpPasswordIsValid) {\n      return;\n    } else {\n      Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/auth/employer/signup`, {\n        companyName: enteredSignUpCompanyName,\n        industry: enteredSignUpIndustry,\n        fullName: enteredSignUpFullName,\n        email: enteredSignUpEmail,\n        phone: enteredSignUpPhone,\n        password: enteredSignUpPassword\n      }).then(response => {\n        if (response.data.error) {\n          return toast.error( /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(BiMinusCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: response.data.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this));\n        } else if (response.data.warn) {\n          return toast.warn( /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(BiError, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: response.data.warn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this));\n        } else {\n          return toast.success( /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(BiMessageCheck, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: response.data.success\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this));\n        }\n      });\n    }\n\n    resetSignUpCompanyNameInput();\n    resetSignUpIndustryInput();\n    resetSignUpFullNameInput();\n    resetSignUpEmailInput();\n    resetSignUpPhoneInput();\n    resetSignUpPasswordInput();\n  };\n\n  const signUpCompanyNameClasses = signUpCompanyNameInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const signUpIndustryClasses = signUpIndustryInputHasError ? \"form-select form-select-sm is-invalid\" : \"form-select form-select-sm\";\n  const signUpFullNameClasses = signUpFullNameInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const signUpEmailClasses = signUpEmailInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const signUpPhoneClasses = signUpPhoneInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const signUpPasswordClasses = signUpPasswordInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HelmetProvider, {\n      children: /*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \" Employer - Sign Up & Log In | Zom - IN \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"signUpEmployer\",\n      className: \"signUpEmployer\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 11,\n        md: 9,\n        className: \"mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            md: 6,\n            children: userIsRegistered ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(Heading, {\n                  content: \"Sign Up Now as an Employer!\",\n                  design: \"h4 mb-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"inputSignUpCompanyName\",\n                    placeholder: \"Company Name\",\n                    className: signUpCompanyNameClasses,\n                    onChange: signUpCompanyNameChangeHandler,\n                    onBlur: signUpCompanyNameBlurHandler,\n                    value: enteredSignUpCompanyName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 21\n                  }, this), signUpCompanyNameInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please enter your Company Name.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                    defaultValue: \"\",\n                    className: signUpIndustryClasses,\n                    onChange: signUpIndustryChangeHandler,\n                    onBlur: signUpIndustryBlurHandler,\n                    \"aria-label\": \"Industry\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      selected: true,\n                      children: \"Industry\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 238,\n                      columnNumber: 25\n                    }, this), industryList.map((industryList, key) => {\n                      const enteredSignUpIndustry = industryList.child_name;\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: enteredSignUpIndustry,\n                        children: enteredSignUpIndustry\n                      }, enteredSignUpIndustry, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 243,\n                        columnNumber: 27\n                      }, this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 23\n                  }, this), signUpCompanyNameInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please enter your Company Name.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"inputSignUpFullName\",\n                    placeholder: \"Representative Name\",\n                    className: signUpFullNameClasses,\n                    onChange: signUpFullNameChangeHandler,\n                    onBlur: signUpFullNameBlurHandler,\n                    value: enteredSignUpFullName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 25\n                  }, this), signUpFullNameInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please enter your Full Name.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    id: \"inputSignUpEmail\",\n                    placeholder: \"Representative Email Address\",\n                    className: signUpEmailClasses,\n                    onChange: signUpEmailChangeHandler,\n                    onBlur: signUpEmailBlurHandler,\n                    value: enteredSignUpEmail\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 25\n                  }, this), signUpEmailInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please enter a valid Email Address.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"inputSignUpPhone\",\n                    placeholder: \"Phone Number\",\n                    className: signUpPhoneClasses,\n                    onChange: signUpPhoneChangeHandler,\n                    onBlur: signUpPhoneBlurHandler,\n                    value: enteredSignUpPhone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 21\n                  }, this), signUpPhoneInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please enter a valid Phone Number.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    id: \"inputSignUpPassword\",\n                    placeholder: \"Password\",\n                    className: signUpPasswordClasses,\n                    onChange: signUpPasswordChangeHandler,\n                    onBlur: signUpPasswordBlurHandler,\n                    value: enteredSignUpPassword\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 21\n                  }, this), signUpPasswordInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Must contain more than 8 characters which contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"By clicking sign up, you agree to Zom-In's\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                      className: \"text-decoration-none\",\n                      href: \"/PrivacyPolicy\",\n                      children: \"Privacy Policy\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 25\n                    }, this), \" \", \"and\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                      className: \"text-decoration-none\",\n                      href: \"/TermOfUse\",\n                      children: \"Term of Use\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3 text-center mx-auto\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \" btn btn-success\",\n                    disabled: !signUpFormIsValid,\n                    children: \"Sign Up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    className: \" text-end\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"link\",\n                      onClick: toggleLogin,\n                      children: \"Already have an account?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 350,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(Heading, {\n                  content: \"Log In Now as an Employer!\",\n                  design: \"h4 mb-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    sm: 12,\n                    className: \"mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: \"Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 366,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: 12,\n                    className: \"mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"password\",\n                      placeholder: \"Password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: 12,\n                    className: \"mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \" btn btn-primary\" // disabled={!loginFormIsValid}\n                      ,\n                      children: \"Log In\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    className: \"text-start\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"link\",\n                      children: userIsRegistered && \"Forget Password?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 383,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    className: \" text-end\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"link\",\n                      onClick: toggleLogin,\n                      children: \"Don't have an account?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 388,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 19\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpEmployer, \"QesbzPtWZAA3Yx5xCQ3/8fu05bM=\", false, function () {\n  return [useInput, useInput, useInput, useInput, useInput, useInput];\n});\n\n_c = SignUpEmployer;\nexport default SignUpEmployer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpEmployer\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/SignUpEmployer.jsx"],"names":["React","Fragment","useState","useEffect","Helmet","HelmetProvider","Axios","useInput","Heading","Row","Col","Form","Button","BiError","BiMessageCheck","BiMinusCircle","toast","isNotEmpty","value","trim","isNotEmail","test","isNotPassword","match","isNotPhone","SignUpEmployer","userIsRegistered","setLogin","industryList","setIndustryList","toggleLogin","get","process","env","REACT_APP_SERVER_DOMAIN","then","response","data","enteredSignUpCompanyName","isValid","enteredSignUpCompanyNameIsValid","hasError","signUpCompanyNameInputHasError","valueChangeHandler","signUpCompanyNameChangeHandler","inputBlurHandler","signUpCompanyNameBlurHandler","reset","resetSignUpCompanyNameInput","enteredSignUpIndustry","enteredSignUpIndustryIsValid","signUpIndustryInputHasError","signUpIndustryChangeHandler","signUpIndustryBlurHandler","resetSignUpIndustryInput","enteredSignUpFullName","enteredSignUpFullNameIsValid","signUpFullNameInputHasError","signUpFullNameChangeHandler","signUpFullNameBlurHandler","resetSignUpFullNameInput","enteredSignUpEmail","enteredSignUpEmailIsValid","signUpEmailInputHasError","signUpEmailChangeHandler","signUpEmailBlurHandler","resetSignUpEmailInput","enteredSignUpPhone","enteredSignUpPhoneIsValid","signUpPhoneInputHasError","signUpPhoneChangeHandler","signUpPhoneBlurHandler","resetSignUpPhoneInput","enteredSignUpPassword","enteredSignUpPasswordIsValid","signUpPasswordInputHasError","signUpPasswordChangeHandler","signUpPasswordBlurHandler","resetSignUpPasswordInput","signUpFormIsValid","signUpFormSubmissionHandler","event","preventDefault","companyName","industry","fullName","email","phone","password","error","warn","success","signUpCompanyNameClasses","signUpIndustryClasses","signUpFullNameClasses","signUpEmailClasses","signUpPhoneClasses","signUpPasswordClasses","map","key","child_name"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Axios from \"axios\";\n\nimport useInput from \"../Helpers/use-input\";\n\nimport Heading from \"../Components/Heading\";\n\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\nimport { BiError, BiMessageCheck, BiMinusCircle } from \"react-icons/bi\";\nimport { toast } from \"react-toastify\";\n\n\n\nconst isNotEmpty = (value) => value.trim() !== \"\";\nconst isNotEmail = (\n  value //eslint-disable-next-line\n) => /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value);\n\nconst isNotPassword = (value) =>\n  value.match(\n    /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,30}$/\n  );\n\nconst isNotPhone = (value) => value.match(/^\\d{10,12}$/);\n\n\nfunction SignUpEmployer() {\n  //Toggle Sign up and Log In form\n  const [userIsRegistered, setLogin] = useState(false);\n  const [industryList, setIndustryList] = useState(\"\");\n\n  function toggleLogin() {\n    setLogin(!userIsRegistered);\n  }\n  //Industyry Level\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/industry`).then(\n      (response) => {\n        setIndustryList(response.data);\n      }\n    );\n  }, []);\n\n   //SIGN UP\n     // Company Name Check\n  const {\n    value: enteredSignUpCompanyName,\n    isValid: enteredSignUpCompanyNameIsValid,\n    hasError: signUpCompanyNameInputHasError,\n    valueChangeHandler: signUpCompanyNameChangeHandler,\n    inputBlurHandler: signUpCompanyNameBlurHandler,\n    reset: resetSignUpCompanyNameInput,\n  } = useInput(isNotEmpty);\n\n    //Industry Input Check\n    const {\n        value: enteredSignUpIndustry,\n        isValid: enteredSignUpIndustryIsValid,\n        hasError: signUpIndustryInputHasError,\n        valueChangeHandler: signUpIndustryChangeHandler,\n        inputBlurHandler: signUpIndustryBlurHandler,\n        reset: resetSignUpIndustryInput,\n      } = useInput(isNotEmpty);\n\n\n  // Full Name Check\n  const {\n    value: enteredSignUpFullName,\n    isValid: enteredSignUpFullNameIsValid,\n    hasError: signUpFullNameInputHasError,\n    valueChangeHandler: signUpFullNameChangeHandler,\n    inputBlurHandler: signUpFullNameBlurHandler,\n    reset: resetSignUpFullNameInput,\n  } = useInput(isNotEmpty);\n\n  // Email Input Check\n  const {\n    value: enteredSignUpEmail,\n    isValid: enteredSignUpEmailIsValid,\n    hasError: signUpEmailInputHasError,\n    valueChangeHandler: signUpEmailChangeHandler,\n    inputBlurHandler: signUpEmailBlurHandler,\n    reset: resetSignUpEmailInput,\n  } = useInput(isNotEmail);\n\n  // Phone Input Check\n  const {\n    value: enteredSignUpPhone,\n    isValid: enteredSignUpPhoneIsValid,\n    hasError: signUpPhoneInputHasError,\n    valueChangeHandler: signUpPhoneChangeHandler,\n    inputBlurHandler: signUpPhoneBlurHandler,\n    reset: resetSignUpPhoneInput,\n  } = useInput(isNotPhone);\n\n  // Password Input Check\n  const {\n    value: enteredSignUpPassword,\n    isValid: enteredSignUpPasswordIsValid,\n    hasError: signUpPasswordInputHasError,\n    valueChangeHandler: signUpPasswordChangeHandler,\n    inputBlurHandler: signUpPasswordBlurHandler,\n    reset: resetSignUpPasswordInput,\n  } = useInput(isNotPassword);\n\n  let signUpFormIsValid = false;\n\n  if (\n    enteredSignUpCompanyName &&\n    enteredSignUpIndustry &&\n    enteredSignUpFullName &&\n    enteredSignUpEmail &&\n    enteredSignUpPhone &&\n    enteredSignUpPassword\n  ) {\n    signUpFormIsValid = true;\n  }\n  /* eslint-disable-next-line */\n  const signUpFormSubmissionHandler = (event) => {\n    event.preventDefault();\n    if (\n      !enteredSignUpCompanyNameIsValid &&\n      !enteredSignUpIndustryIsValid &&\n      !enteredSignUpFullNameIsValid &&\n      !enteredSignUpEmailIsValid &&\n      !enteredSignUpPhoneIsValid &&\n      !enteredSignUpPasswordIsValid\n    ) {\n      return;\n    } else {\n      Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/auth/employer/signup`, {\n        companyName: enteredSignUpCompanyName,\n        industry: enteredSignUpIndustry,\n        fullName: enteredSignUpFullName,\n        email: enteredSignUpEmail,\n        phone: enteredSignUpPhone,\n        password: enteredSignUpPassword,\n      }).then((response) => {\n        if (response.data.error) {\n          return toast.error(\n            <Fragment>\n              <BiMinusCircle /> <span>{response.data.error}</span>\n            </Fragment>\n          );\n        } else if (response.data.warn) {\n          return toast.warn(\n            <Fragment>\n              <BiError /> <span>{response.data.warn}</span>\n            </Fragment>\n          );\n        } else {\n          return toast.success(\n            <Fragment>\n              <BiMessageCheck /> <span>{response.data.success}</span>\n            </Fragment>\n          );\n        }\n      });\n    }\n    resetSignUpCompanyNameInput();\n    resetSignUpIndustryInput();\n    resetSignUpFullNameInput();\n    resetSignUpEmailInput();\n    resetSignUpPhoneInput();\n    resetSignUpPasswordInput();\n  };\n\n  const signUpCompanyNameClasses = signUpCompanyNameInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n    const signUpIndustryClasses = signUpIndustryInputHasError\n    ? \"form-select form-select-sm is-invalid\"\n    : \"form-select form-select-sm\";\n\n    const signUpFullNameClasses = signUpFullNameInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const signUpEmailClasses = signUpEmailInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const signUpPhoneClasses = signUpPhoneInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const signUpPasswordClasses = signUpPasswordInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n\n  return (\n    <Fragment>\n      <HelmetProvider>\n        <Helmet>\n          <title> Employer - Sign Up & Log In | Zom - IN </title>\n        </Helmet>\n      </HelmetProvider>\n      <div id=\"signUpEmployer\" className=\"signUpEmployer\">\n        <Col sm={11} md={9} className=\"mx-auto\">\n          <Row>\n            <Col sm={12} md={6}>\n              {userIsRegistered ? (\n                <>\n                  <div className=\"text-center\">\n                    <Heading\n                      content=\"Sign Up Now as an Employer!\"\n                      design=\"h4 mb-4\"\n                    />\n                  </div>\n                  <Form>\n                    <Col sm={12} className=\"mb-3\">\n                    <input \n                        type=\"text\"\n                        id=\"inputSignUpCompanyName\"\n                        placeholder=\"Company Name\"\n                        className={signUpCompanyNameClasses}\n                        onChange={signUpCompanyNameChangeHandler}\n                        onBlur={signUpCompanyNameBlurHandler}\n                        value={enteredSignUpCompanyName} \n                        />\n                         {signUpCompanyNameInputHasError && (\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please enter your Company Name.\n                        </Form.Control.Feedback>\n                      )}\n                    </Col>\n                    <Col sm={12} className=\"mb-3\">\n                      <select\n                      defaultValue={\"\"}\n                        className={signUpIndustryClasses}\n                        onChange={signUpIndustryChangeHandler}\n                        onBlur={signUpIndustryBlurHandler}\n                        aria-label=\"Industry\"\n                      >\n                        <option value=\"\" selected>Industry</option>\n\n                        {industryList.map((industryList, key) => {\n                        const enteredSignUpIndustry = industryList.child_name;\n                        return (\n                          <option\n                            key={enteredSignUpIndustry}\n                            value={enteredSignUpIndustry}\n                          >\n                            {enteredSignUpIndustry}\n                          </option>\n                        );\n                      })}\n                      </select>\n                      {signUpCompanyNameInputHasError && (\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please enter your Company Name.\n                        </Form.Control.Feedback>\n                      )}\n                    </Col>\n                    <Col sm={12} className=\"mb-3\">\n                        <input \n                        type=\"text\"\n                        id=\"inputSignUpFullName\"\n                        placeholder=\"Representative Name\"\n                        className={signUpFullNameClasses}\n                        onChange={signUpFullNameChangeHandler}\n                        onBlur={signUpFullNameBlurHandler}\n                        value={enteredSignUpFullName} \n                        />\n                         {signUpFullNameInputHasError && (\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please enter your Full Name.\n                        </Form.Control.Feedback>\n                      )}\n                    </Col>\n                    <Col sm={12} className=\"mb-3\">\n                        <input \n                        type=\"email\"\n                        id=\"inputSignUpEmail\"\n                        placeholder=\"Representative Email Address\"\n                        className={signUpEmailClasses}\n                        onChange={signUpEmailChangeHandler}\n                        onBlur={signUpEmailBlurHandler}\n                        value={enteredSignUpEmail}\n                         />\n                         {signUpEmailInputHasError && (\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please enter a valid Email Address.\n                        </Form.Control.Feedback>\n                      )}\n                    </Col>\n                    <Col sm={12} className=\"mb-3\">\n                    <input\n                        type=\"text\"\n                        id=\"inputSignUpPhone\"\n                        placeholder=\"Phone Number\"\n                        className={signUpPhoneClasses}\n                        onChange={signUpPhoneChangeHandler}\n                        onBlur={signUpPhoneBlurHandler}\n                        value={enteredSignUpPhone}\n                      />\n                      {signUpPhoneInputHasError && (\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please enter a valid Phone Number.\n                        </Form.Control.Feedback>\n                      )}\n                    </Col>\n                    <Col sm={12} className=\"mb-3\">\n                    <input\n                        type=\"password\"\n                        id=\"inputSignUpPassword\"\n                        placeholder=\"Password\"\n                        className={signUpPasswordClasses}\n                        onChange={signUpPasswordChangeHandler}\n                        onBlur={signUpPasswordBlurHandler}\n                        value={enteredSignUpPassword}\n                      />\n                      {signUpPasswordInputHasError && (\n                        <Form.Control.Feedback type=\"invalid\">\n                          Must contain more than 8 characters which contain at\n                          least one lowercase letter, one uppercase letter, one\n                          numeric digit, and one special character.\n                        </Form.Control.Feedback>\n                      )}\n                    </Col>\n                    <Col sm={12} className=\"mb-3\">\n                    <label>\n                        By clicking sign up, you agree to Zom-In's{\" \"}\n                        <a\n                          className=\"text-decoration-none\"\n                          href=\"/PrivacyPolicy\"\n                        >\n                          Privacy Policy\n                        </a>{\" \"}\n                        and{\" \"}\n                        <a className=\"text-decoration-none\" href=\"/TermOfUse\">\n                          Term of Use\n                        </a>\n                      </label>\n                    </Col>\n                    <Col sm={12} className=\"mb-3 text-center mx-auto\">\n                    <button\n                        type=\"submit\"\n                        className=\" btn btn-success\"\n                        disabled={!signUpFormIsValid}\n                      >\n                        Sign Up\n                      </button>\n                    </Col>\n                    <Row>\n                      <Col className=\" text-end\">\n                        <Button variant=\"link\" onClick={toggleLogin}>\n                          Already have an account?\n                        </Button>\n                      </Col>\n                    </Row>\n                  </Form>\n                </>\n              ) : (\n                <>\n                  <div className=\"text-center\">\n                    <Heading\n                      content=\"Log In Now as an Employer!\"\n                      design=\"h4 mb-4\"\n                    />\n                    <Form>\n                      <Col sm={12} className=\"mb-3\">\n                        <input type=\"text\" placeholder=\"Email\" />\n                      </Col>\n                      <Col sm={12} className=\"mb-3\">\n                        <input type=\"password\" placeholder=\"Password\" />\n                      </Col>\n                      <Col sm={12} className=\"mb-3\">\n                        <button\n                          type=\"submit\"\n                          className=\" btn btn-primary\"\n                          // disabled={!loginFormIsValid}\n                        >\n                          Log In\n                        </button>\n                      </Col>\n                    </Form>\n                    <Row>\n                      <Col className=\"text-start\">\n                        <Button variant=\"link\">\n                          {userIsRegistered && \"Forget Password?\"}\n                        </Button>\n                      </Col>\n                      <Col className=\" text-end\">\n                        <Button variant=\"link\" onClick={toggleLogin}>\n                          Don't have an account?\n                        </Button>\n                      </Col>\n                    </Row>\n                  </div>\n                </>\n              )}\n            </Col>\n          </Row>\n        </Col>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default SignUpEmployer;\n"]},"metadata":{},"sourceType":"module"}