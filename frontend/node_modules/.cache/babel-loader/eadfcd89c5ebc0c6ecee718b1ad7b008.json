{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/BasicInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState, useContext } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { useHistory } from \"react-router-dom\";\nimport Axios from \"axios\"; //SESSION and INPUT\n\nimport { AuthContext } from \"../Helpers/AuthContext\";\nimport useInput from \"../Helpers/use-input\";\nimport { Container, Row, Col, InputGroup, Form } from \"react-bootstrap\";\nimport { BiMessageCheck, BiMinusCircle } from \"react-icons/bi\";\nimport DatePicker from \"react-datepicker\";\nimport { Typeahead } from \"react-bootstrap-typeahead\"; //Toast\n\nimport { toast } from \"react-toastify\"; //Components\n\nimport Heading from \"../Components/Heading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== \"\";\n\nfunction BasicInfo() {\n  _s();\n\n  let history = useHistory();\n  const {\n    authState,\n    setAuthState\n  } = useContext(AuthContext);\n  const [universityList, setUniversityList] = useState([]);\n  const [eduList, setEduList] = useState([]);\n  useEffect(() => {\n    if (!localStorage.getItem(\"accessToken\")) {\n      history.push(\"/signup\");\n    } else {\n      Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/university`).then(response => {\n        const uni = response.data;\n        var rows = [];\n\n        for (var i = 0; i < uni.length; i++) {\n          rows.push(response.data[i].university_name);\n        }\n\n        setUniversityList(rows);\n      });\n    }\n  }); //Education Level\n\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/eduLevel`).then(response => {\n      setEduList(response.data);\n    });\n  }, []);\n  const [currentStatus, setCurrentStatus] = useState(0); // 0: no show, 1: show yes, 2: show no.\n\n  const jobStatus = currentStatus => {\n    setCurrentStatus(currentStatus);\n  }; //GENDER Input Check\n\n\n  const [genderInput, setGenderInput] = useState(\"\"); //DOB Input Check\n\n  const {\n    value: enteredDob,\n    isValid: enteredDobIsValid,\n    hasError: dobInputHasError,\n    valueChangeHandler: dobChangeHandler,\n    inputBlurHandler: dobBlurHandler,\n    reset: resetDobInput\n  } = useInput(isNotEmpty); //About Input Check\n\n  const {\n    value: enteredAbout,\n    isValid: enteredAboutIsValid,\n    hasError: aboutInputHasError,\n    valueChangeHandler: aboutChangeHandler,\n    inputBlurHandler: aboutBlurHandler,\n    reset: resetAboutInput\n  } = useInput(isNotEmpty); //School Input Check\n\n  const [school, setSchool] = useState(\"\"); //Highest Education Level Input Check\n\n  const {\n    value: enteredHighLevel,\n    isValid: enteredHighLevelIsValid,\n    hasError: highLevelInputHasError,\n    valueChangeHandler: highLevelChangeHandler,\n    inputBlurHandler: highLevelBlurHandler,\n    reset: resetHighLevelInput\n  } = useInput(isNotEmpty); //Study Field Level Input Check\n\n  const {\n    value: enteredStudyField,\n    isValid: enteredStudyFieldIsValid,\n    hasError: studyFieldInputHasError,\n    valueChangeHandler: studyFieldChangeHandler,\n    inputBlurHandler: studyFieldBlurHandler,\n    reset: resetStudyFieldInput\n  } = useInput(isNotEmpty); //Start Year Input Check\n\n  const [startDate, setStartDate] = useState(); //End Year Input Check\n\n  const [endDate, setEndDate] = useState(); //Current Status Level Input Check\n\n  const {\n    value: enteredCurrentStatus,\n    isValid: enteredCurrentStatusIsValid,\n    // hasError: currentStatusInputHasError,\n    valueChangeHandler: currentStatusChangeHandler,\n    inputBlurHandler: currentStatusBlurHandler,\n    reset: resetCurrentStatusInput\n  } = useInput(isNotEmpty); //Company Name Input Check\n\n  const [companyName, setCompanyName] = useState(\"\"); //Current Position Input Check\n\n  const [currentPosition, setCurrentPosition] = useState(\"\");\n  const [skill, setSkill] = useState(\"\");\n  let userBasicInfoFormIsValid = false;\n\n  if (genderInput !== \"\" && enteredDobIsValid && enteredAboutIsValid && school !== \"\" && enteredHighLevelIsValid && enteredCurrentStatusIsValid && enteredHighLevelIsValid) {\n    userBasicInfoFormIsValid = true;\n  }\n\n  const userBasicInfoFormSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (genderInput === \"\" && !enteredDobIsValid && !enteredAboutIsValid && school === \"\" && !enteredHighLevelIsValid && !enteredCurrentStatusIsValid && !enteredStudyFieldIsValid) {\n      return;\n    } else {\n      Axios.post(`${process.env.REACT_APP_SERVER_DOMAIN}/basicinfo/user`, {\n        gender: genderInput,\n        dob: enteredDob,\n        about: enteredAbout,\n        school: school,\n        eduLevel: enteredHighLevel,\n        studyField: enteredStudyField,\n        startDate: startDate,\n        endDate: endDate,\n        currentStatus: enteredCurrentStatus,\n        companyName: companyName,\n        currentPosition: currentPosition,\n        skill: skill\n      }, {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        if (response.data.error) {\n          return toast.error( /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(BiMinusCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: response.data.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this));\n        } else {\n          return toast.success( /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(BiMessageCheck, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: response.data.success\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this));\n        }\n      });\n    }\n\n    setGenderInput(\"\");\n    resetDobInput();\n    resetAboutInput();\n    setSchool(\"\");\n    resetHighLevelInput();\n    resetCurrentStatusInput();\n    resetStudyFieldInput();\n    history.push('/');\n  };\n\n  const dobClasses = dobInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const aboutClasses = aboutInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const highLevelClasses = highLevelInputHasError ? \"form-select form-select-sm is-invalid\" : \"form-select form-select-sm\";\n  const studyFieldClasses = studyFieldInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authState,\n      setAuthState\n    },\n    children: /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HelmetProvider, {\n        children: /*#__PURE__*/_jsxDEV(Helmet, {\n          children: /*#__PURE__*/_jsxDEV(\"title\", {\n            children: \" Basic Info | Zom - IN \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"basicInfo\",\n        className: \"basicInfo\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          className: \"my-5\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: 6,\n              xs: 12,\n              className: \"mx-auto\",\n              children: [/*#__PURE__*/_jsxDEV(Heading, {\n                content: \"Basic Info\",\n                design: \"h4 mb-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: userBasicInfoFormSubmissionHandler,\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"inputgender\",\n                    className: \"required\",\n                    children: \"You are\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"radio\",\n                        className: \"btn-check\",\n                        name: \"gender\",\n                        required: true,\n                        id: \"male\",\n                        autoComplete: \"off\",\n                        onChange: e => setGenderInput(e.target.value),\n                        value: [genderInput === \"Male\" || \"Male\"]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"btn btn-outline-success\",\n                        htmlFor: \"male\",\n                        children: \"Male\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 252,\n                        columnNumber: 23\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"ms-2 \",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"radio\",\n                        className: \"btn-check\",\n                        name: \"gender\",\n                        id: \"female\",\n                        autoComplete: \"off\",\n                        onChange: e => setGenderInput(e.target.value),\n                        value: [genderInput === \"Female\" || \"Female\"]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 258,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"btn btn-outline-info\",\n                        htmlFor: \"female\",\n                        children: \"Female\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 267,\n                        columnNumber: 23\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"inputdob\",\n                    className: \"required\",\n                    children: \"Date of Birth\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"date\",\n                    id: \"inputdob\",\n                    placeholder: \"Your Birthday\",\n                    className: dobClasses,\n                    onChange: dobChangeHandler,\n                    onBlur: dobBlurHandler,\n                    value: enteredDob\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 19\n                  }, this), dobInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please select your birthdate.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"inputabout\",\n                    className: \"required\",\n                    children: \"About\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    placeholder: \"Tell us about you\",\n                    className: aboutClasses,\n                    onChange: aboutChangeHandler,\n                    onBlur: aboutBlurHandler,\n                    value: enteredAbout\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 19\n                  }, this), aboutInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Tell us about you.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                  className: \"my-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Heading, {\n                  content: \"Education\",\n                  design: \"h4 mb-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"inputSchool\",\n                    className: \"required\",\n                    children: \"School\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Typeahead, {\n                    inputProps: {\n                      required: true\n                    },\n                    id: \"valid-styles-example\",\n                    size: \"small\",\n                    placeholder: \"Choose a School\",\n                    options: universityList,\n                    onChange: value => {\n                      setSchool(value);\n                    },\n                    onInputChange: value => {\n                      setSchool(value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"eduLevel\",\n                    className: \"required\",\n                    children: \"Highest Education Level\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    defaultValue: \"\",\n                    \"aria-label\": \"Education Level\",\n                    className: highLevelClasses,\n                    onChange: highLevelChangeHandler,\n                    onBlur: highLevelBlurHandler,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Please Choose One\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 21\n                    }, this), eduList.map((eduList, key) => {\n                      const enteredHighLevel = eduList.child_name;\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: enteredHighLevel,\n                        children: enteredHighLevel\n                      }, enteredHighLevel, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 350,\n                        columnNumber: 25\n                      }, this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 19\n                  }, this), highLevelInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please choose your highest education Level.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"studyField\",\n                    className: \"required\",\n                    children: \"Field of Study\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: studyFieldClasses,\n                    onChange: studyFieldChangeHandler,\n                    onBlur: studyFieldBlurHandler,\n                    value: enteredStudyField\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 19\n                  }, this), studyFieldInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please fill in your field of study.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 377,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"eduYear\",\n                    className: \"required\",\n                    children: \"Year\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      sm: 4,\n                      xs: 6,\n                      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                        required: true,\n                        selected: startDate,\n                        onChange: date => setStartDate(date),\n                        showYearPicker: true,\n                        dateFormat: \"yyyy\",\n                        yearItemNumber: 10,\n                        placeholderText: \"Year Start\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 389,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 388,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                        selected: endDate,\n                        onChange: date => setEndDate(date),\n                        showYearPicker: true,\n                        dateFormat: \"yyyy\",\n                        yearItemNumber: 10,\n                        placeholderText: \"Year End\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 400,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 399,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                  className: \"my-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Heading, {\n                  content: \"Working Experience\",\n                  design: \"h4 mb-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"currentStatus\",\n                    className: \"required\",\n                    children: \"Current Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"radio\",\n                        className: \"btn-check\",\n                        name: \"status\",\n                        id: \"employedCS\",\n                        autoComplete: \"off\",\n                        onChange: currentStatusChangeHandler,\n                        onBlur: currentStatusBlurHandler,\n                        value: [enteredCurrentStatus === \"employee\" || \"employee\"],\n                        checked: currentStatus === 2,\n                        onClick: e => jobStatus(2)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 422,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"btn btn-outline-success\",\n                        htmlFor: \"employedCS\",\n                        children: \"Employed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 436,\n                        columnNumber: 23\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 421,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"ms-2 \",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"radio\",\n                        className: \"btn-check\",\n                        name: \"status\",\n                        id: \"unemployedCS\",\n                        autoComplete: \"off\",\n                        onChange: currentStatusChangeHandler,\n                        onBlur: currentStatusBlurHandler,\n                        value: [enteredCurrentStatus === \"unemployed\" || \"unemployed\"],\n                        checked: currentStatus === 1,\n                        onClick: e => jobStatus(1)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 445,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"btn btn-outline-info\",\n                        htmlFor: \"unemployedCS\",\n                        children: \"Unemployed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 459,\n                        columnNumber: 23\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 444,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"ms-2 \",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"radio\",\n                        className: \"btn-check\",\n                        name: \"status\",\n                        id: \"internCS\",\n                        autoComplete: \"off\",\n                        onChange: currentStatusChangeHandler,\n                        onBlur: currentStatusBlurHandler,\n                        value: [enteredCurrentStatus === \"intern\" || \"intern\"],\n                        checked: currentStatus === 3,\n                        onClick: e => jobStatus(3)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 468,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"btn btn-outline-warning\",\n                        htmlFor: \"internCS\",\n                        children: \"Intern\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 480,\n                        columnNumber: 23\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 467,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 17\n                }, this), currentStatus === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    sm: 12,\n                    className: \"form-group mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"companyName\",\n                      className: \"required\",\n                      children: \"Company Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 493,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"form-control\",\n                      id: \"companyName\",\n                      placeholder: \"Company Name\",\n                      value: companyName,\n                      onChange: e => {\n                        setCompanyName(e.target.value);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 496,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: 12,\n                    className: \"form-group mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"currentPos\",\n                      className: \"required\",\n                      children: \"Current Position\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 509,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      size: \"sm\",\n                      type: \"text\",\n                      className: \"form-control\",\n                      id: \"currentPos\",\n                      placeholder: \"Current Position\",\n                      value: currentPosition,\n                      onChange: e => {\n                        setCurrentPosition(e.target.value);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 512,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 508,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 19\n                }, this), currentStatus === 3 && /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"inputabout\",\n                    className: \"required\",\n                    children: \"About\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 529,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    placeholder: \"Tell us about you\",\n                    className: aboutClasses,\n                    onChange: aboutChangeHandler,\n                    onBlur: aboutBlurHandler,\n                    value: enteredAbout\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 532,\n                    columnNumber: 19\n                  }, this), aboutInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Tell us about you.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                  className: \"my-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Heading, {\n                  content: \"Skills & Experience\",\n                  design: \"h4 mb-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"inputskillexp\",\n                    children: \"Skills & Experience\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 551,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Typeahead, {\n                    options: [],\n                    onChange: value => {\n                      setSkill(value);\n                    },\n                    onInputChange: value => {\n                      setSkill(value);\n                    },\n                    newSelectionPrefix: \"Add a new skill: \",\n                    allowNew: true,\n                    id: \"public-methods-example\",\n                    multiple: true,\n                    placeholder: \"Add a new skill:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 552,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"text-end my-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \" btn btn-primary\",\n                    disabled: !userBasicInfoFormIsValid,\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 569,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 568,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BasicInfo, \"8BXCKwm1XH8SgRdVR4MA19H/5Zs=\", false, function () {\n  return [useHistory, useInput, useInput, useInput, useInput, useInput];\n});\n\n_c = BasicInfo;\nexport default BasicInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicInfo\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/BasicInfo.jsx"],"names":["React","Fragment","useEffect","useState","useContext","Helmet","HelmetProvider","useHistory","Axios","AuthContext","useInput","Container","Row","Col","InputGroup","Form","BiMessageCheck","BiMinusCircle","DatePicker","Typeahead","toast","Heading","isNotEmpty","value","trim","BasicInfo","history","authState","setAuthState","universityList","setUniversityList","eduList","setEduList","localStorage","getItem","push","get","process","env","REACT_APP_SERVER_DOMAIN","then","response","uni","data","rows","i","length","university_name","currentStatus","setCurrentStatus","jobStatus","genderInput","setGenderInput","enteredDob","isValid","enteredDobIsValid","hasError","dobInputHasError","valueChangeHandler","dobChangeHandler","inputBlurHandler","dobBlurHandler","reset","resetDobInput","enteredAbout","enteredAboutIsValid","aboutInputHasError","aboutChangeHandler","aboutBlurHandler","resetAboutInput","school","setSchool","enteredHighLevel","enteredHighLevelIsValid","highLevelInputHasError","highLevelChangeHandler","highLevelBlurHandler","resetHighLevelInput","enteredStudyField","enteredStudyFieldIsValid","studyFieldInputHasError","studyFieldChangeHandler","studyFieldBlurHandler","resetStudyFieldInput","startDate","setStartDate","endDate","setEndDate","enteredCurrentStatus","enteredCurrentStatusIsValid","currentStatusChangeHandler","currentStatusBlurHandler","resetCurrentStatusInput","companyName","setCompanyName","currentPosition","setCurrentPosition","skill","setSkill","userBasicInfoFormIsValid","userBasicInfoFormSubmissionHandler","event","preventDefault","post","gender","dob","about","eduLevel","studyField","headers","accessToken","error","success","dobClasses","aboutClasses","highLevelClasses","studyFieldClasses","e","target","required","map","key","child_name","date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,EAA+CC,UAA/C,QAAiE,OAAjE;AACA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,oBAAvC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,UAA9B,EAA0CC,IAA1C,QAAsD,iBAAtD;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,gBAA9C;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,SAAT,QAA0B,2BAA1B,C,CAEA;;AACA,SAASC,KAAT,QAAsB,gBAAtB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAAN,OAAiB,EAA/C;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,MAAIC,OAAO,GAAGnB,UAAU,EAAxB;AACA,QAAM;AAAEoB,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BxB,UAAU,CAACK,WAAD,CAA9C;AAEA,QAAM,CAACoB,cAAD,EAAiBC,iBAAjB,IAAsC3B,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAAC4B,OAAD,EAAUC,UAAV,IAAwB7B,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAAC+B,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAL,EAA0C;AACxCR,MAAAA,OAAO,CAACS,IAAR,CAAa,SAAb;AACD,KAFD,MAEO;AACP3B,MAAAA,KAAK,CAAC4B,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,uBAAwB,kBAAjD,EAAoEC,IAApE,CACGC,QAAD,IAAc;AACZ,cAAMC,GAAG,GAAGD,QAAQ,CAACE,IAArB;AACA,YAAIC,IAAI,GAAG,EAAX;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACI,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnCD,UAAAA,IAAI,CAACT,IAAL,CAAUM,QAAQ,CAACE,IAAT,CAAcE,CAAd,EAAiBE,eAA3B;AACD;;AACDjB,QAAAA,iBAAiB,CAACc,IAAD,CAAjB;AACD,OARH;AAUC;AACF,GAfQ,CAAT,CAPmB,CAwBnB;;AACA1C,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAAC4B,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,uBAAwB,gBAAjD,EAAkEC,IAAlE,CACGC,QAAD,IAAc;AACZT,MAAAA,UAAU,CAACS,QAAQ,CAACE,IAAV,CAAV;AACD,KAHH;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoC9C,QAAQ,CAAC,CAAD,CAAlD,CAjCmB,CAiCoC;;AACvD,QAAM+C,SAAS,GAAIF,aAAD,IAAmB;AACnCC,IAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACD,GAFD,CAlCmB,CAsCnB;;;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCjD,QAAQ,CAAC,EAAD,CAA9C,CAvCmB,CAyCnB;;AACA,QAAM;AACJoB,IAAAA,KAAK,EAAE8B,UADH;AAEJC,IAAAA,OAAO,EAAEC,iBAFL;AAGJC,IAAAA,QAAQ,EAAEC,gBAHN;AAIJC,IAAAA,kBAAkB,EAAEC,gBAJhB;AAKJC,IAAAA,gBAAgB,EAAEC,cALd;AAMJC,IAAAA,KAAK,EAAEC;AANH,MAOFrD,QAAQ,CAACY,UAAD,CAPZ,CA1CmB,CAmDnB;;AACA,QAAM;AACJC,IAAAA,KAAK,EAAEyC,YADH;AAEJV,IAAAA,OAAO,EAAEW,mBAFL;AAGJT,IAAAA,QAAQ,EAAEU,kBAHN;AAIJR,IAAAA,kBAAkB,EAAES,kBAJhB;AAKJP,IAAAA,gBAAgB,EAAEQ,gBALd;AAMJN,IAAAA,KAAK,EAAEO;AANH,MAOF3D,QAAQ,CAACY,UAAD,CAPZ,CApDmB,CA6DnB;;AACA,QAAM,CAACgD,MAAD,EAASC,SAAT,IAAsBpE,QAAQ,CAAC,EAAD,CAApC,CA9DmB,CAgEnB;;AACA,QAAM;AACJoB,IAAAA,KAAK,EAAEiD,gBADH;AAEJlB,IAAAA,OAAO,EAAEmB,uBAFL;AAGJjB,IAAAA,QAAQ,EAAEkB,sBAHN;AAIJhB,IAAAA,kBAAkB,EAAEiB,sBAJhB;AAKJf,IAAAA,gBAAgB,EAAEgB,oBALd;AAMJd,IAAAA,KAAK,EAAEe;AANH,MAOFnE,QAAQ,CAACY,UAAD,CAPZ,CAjEmB,CA0EnB;;AACA,QAAM;AACJC,IAAAA,KAAK,EAAEuD,iBADH;AAEJxB,IAAAA,OAAO,EAAEyB,wBAFL;AAGJvB,IAAAA,QAAQ,EAAEwB,uBAHN;AAIJtB,IAAAA,kBAAkB,EAAEuB,uBAJhB;AAKJrB,IAAAA,gBAAgB,EAAEsB,qBALd;AAMJpB,IAAAA,KAAK,EAAEqB;AANH,MAOFzE,QAAQ,CAACY,UAAD,CAPZ,CA3EmB,CAoFnB;;AACA,QAAM,CAAC8D,SAAD,EAAYC,YAAZ,IAA4BlF,QAAQ,EAA1C,CArFmB,CAuFnB;;AACA,QAAM,CAACmF,OAAD,EAAUC,UAAV,IAAwBpF,QAAQ,EAAtC,CAxFmB,CA0FnB;;AACA,QAAM;AACJoB,IAAAA,KAAK,EAAEiE,oBADH;AAEJlC,IAAAA,OAAO,EAAEmC,2BAFL;AAGJ;AACA/B,IAAAA,kBAAkB,EAAEgC,0BAJhB;AAKJ9B,IAAAA,gBAAgB,EAAE+B,wBALd;AAMJ7B,IAAAA,KAAK,EAAE8B;AANH,MAOFlF,QAAQ,CAACY,UAAD,CAPZ,CA3FmB,CAoGnB;;AACA,QAAM,CAACuE,WAAD,EAAcC,cAAd,IAAgC3F,QAAQ,CAAC,EAAD,CAA9C,CArGmB,CAuGnB;;AACA,QAAM,CAAC4F,eAAD,EAAkBC,kBAAlB,IAAwC7F,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAM,CAAC8F,KAAD,EAAQC,QAAR,IAAoB/F,QAAQ,CAAC,EAAD,CAAlC;AAEA,MAAIgG,wBAAwB,GAAG,KAA/B;;AAEA,MACEhD,WAAW,KAAK,EAAhB,IACAI,iBADA,IAEAU,mBAFA,IAGAK,MAAM,KAAK,EAHX,IAIAG,uBAJA,IAKAgB,2BALA,IAMAhB,uBAPF,EAQE;AACA0B,IAAAA,wBAAwB,GAAG,IAA3B;AACD;;AACD,QAAMC,kCAAkC,GAAIC,KAAD,IAAW;AACpDA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QACEnD,WAAW,KAAK,EAAhB,IACA,CAACI,iBADD,IAEA,CAACU,mBAFD,IAGAK,MAAM,KAAK,EAHX,IAIA,CAACG,uBAJD,IAKA,CAACgB,2BALD,IAMA,CAACV,wBAPH,EAQE;AACA;AACD,KAVD,MAUO;AACLvE,MAAAA,KAAK,CAAC+F,IAAN,CACG,GAAElE,OAAO,CAACC,GAAR,CAAYC,uBAAwB,iBADzC,EAEE;AACEiE,QAAAA,MAAM,EAAErD,WADV;AAEEsD,QAAAA,GAAG,EAAEpD,UAFP;AAGEqD,QAAAA,KAAK,EAAE1C,YAHT;AAIEM,QAAAA,MAAM,EAAEA,MAJV;AAKEqC,QAAAA,QAAQ,EAAEnC,gBALZ;AAMEoC,QAAAA,UAAU,EAAE9B,iBANd;AAOEM,QAAAA,SAAS,EAAEA,SAPb;AAQEE,QAAAA,OAAO,EAAEA,OARX;AASEtC,QAAAA,aAAa,EAAEwC,oBATjB;AAUEK,QAAAA,WAAW,EAAEA,WAVf;AAWEE,QAAAA,eAAe,EAAEA,eAXnB;AAYEE,QAAAA,KAAK,EAAEA;AAZT,OAFF,EAgBE;AACEY,QAAAA,OAAO,EAAE;AACPC,UAAAA,WAAW,EAAE7E,YAAY,CAACC,OAAb,CAAqB,aAArB;AADN;AADX,OAhBF,EAqBEM,IArBF,CAqBQC,QAAD,IAAc;AACnB,YAAIA,QAAQ,CAACE,IAAT,CAAcoE,KAAlB,EAAyB;AACvB,iBAAO3F,KAAK,CAAC2F,KAAN,eACL,QAAC,QAAD;AAAA,oCACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,oBADF,oBACoB;AAAA,wBAAOtE,QAAQ,CAACE,IAAT,CAAcoE;AAArB;AAAA;AAAA;AAAA;AAAA,oBADpB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADK,CAAP;AAKD,SAND,MAMO;AACL,iBAAO3F,KAAK,CAAC4F,OAAN,eACL,QAAC,QAAD;AAAA,oCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,oBADF,oBACqB;AAAA,wBAAOvE,QAAQ,CAACE,IAAT,CAAcqE;AAArB;AAAA;AAAA;AAAA;AAAA,oBADrB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADK,CAAP;AAKD;AACF,OAnCD;AAoCD;;AACD5D,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAW,IAAAA,aAAa;AACbM,IAAAA,eAAe;AACfE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAM,IAAAA,mBAAmB;AACnBe,IAAAA,uBAAuB;AACvBT,IAAAA,oBAAoB;AACpBzD,IAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AACD,GA3DD;;AA6DA,QAAM8E,UAAU,GAAGxD,gBAAgB,GAC/B,yCAD+B,GAE/B,8BAFJ;AAIA,QAAMyD,YAAY,GAAGhD,kBAAkB,GACnC,yCADmC,GAEnC,8BAFJ;AAIA,QAAMiD,gBAAgB,GAAGzC,sBAAsB,GAC3C,uCAD2C,GAE3C,4BAFJ;AAIA,QAAM0C,iBAAiB,GAAGpC,uBAAuB,GAC7C,yCAD6C,GAE7C,8BAFJ;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAErD,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAA7B;AAAA,2BACA,QAAC,QAAD;AAAA,8BACE,QAAC,cAAD;AAAA,+BACE,QAAC,MAAD;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,EAAE,EAAC,WAAR;AAAoB,QAAA,SAAS,EAAC,WAA9B;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,MAArB;AAAA,iCACE,QAAC,GAAD;AAAA,mCACE,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAY,cAAA,EAAE,EAAE,EAAhB;AAAoB,cAAA,SAAS,EAAC,SAA9B;AAAA,sCACE,QAAC,OAAD;AAAS,gBAAA,OAAO,EAAC,YAAjB;AAA8B,gBAAA,MAAM,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD;AAAM,gBAAA,QAAQ,EAAEwE,kCAAhB;AAAA,wCACE,QAAC,GAAD;AAAK,kBAAA,EAAE,EAAE,EAAT;AAAa,kBAAA,SAAS,EAAC,iBAAvB;AAAA,0CACE;AAAO,oBAAA,OAAO,EAAC,aAAf;AAA6B,oBAAA,SAAS,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE,QAAC,UAAD;AAAA,4CACE;AAAA,8CACE;AACE,wBAAA,IAAI,EAAC,OADP;AAEE,wBAAA,SAAS,EAAC,WAFZ;AAGE,wBAAA,IAAI,EAAC,QAHP;AAIE,wBAAA,QAAQ,MAJV;AAKE,wBAAA,EAAE,EAAC,MALL;AAME,wBAAA,YAAY,EAAC,KANf;AAOE,wBAAA,QAAQ,EAAGiB,CAAD,IAAOjE,cAAc,CAACiE,CAAC,CAACC,MAAF,CAAS/F,KAAV,CAPjC;AAQE,wBAAA,KAAK,EAAE,CAAC4B,WAAW,KAAK,MAAhB,IAA0B,MAA3B;AART;AAAA;AAAA;AAAA;AAAA,8BADF,eAWE;AAAO,wBAAA,SAAS,EAAC,yBAAjB;AAA2C,wBAAA,OAAO,EAAC,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAXF;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAiBE;AAAK,sBAAA,SAAS,EAAC,OAAf;AAAA,8CACE;AACE,wBAAA,IAAI,EAAC,OADP;AAEE,wBAAA,SAAS,EAAC,WAFZ;AAGE,wBAAA,IAAI,EAAC,QAHP;AAIE,wBAAA,EAAE,EAAC,QAJL;AAKE,wBAAA,YAAY,EAAC,KALf;AAME,wBAAA,QAAQ,EAAGkE,CAAD,IAAOjE,cAAc,CAACiE,CAAC,CAACC,MAAF,CAAS/F,KAAV,CANjC;AAOE,wBAAA,KAAK,EAAE,CAAC4B,WAAW,KAAK,QAAhB,IAA4B,QAA7B;AAPT;AAAA;AAAA;AAAA;AAAA,8BADF,eAUE;AAAO,wBAAA,SAAS,EAAC,sBAAjB;AAAwC,wBAAA,OAAO,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAVF;AAAA;AAAA;AAAA;AAAA;AAAA,4BAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAsCE,QAAC,GAAD;AAAK,kBAAA,EAAE,EAAE,EAAT;AAAa,kBAAA,SAAS,EAAC,iBAAvB;AAAA,0CACE;AAAO,oBAAA,OAAO,EAAC,UAAf;AAA0B,oBAAA,SAAS,EAAC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AACE,oBAAA,IAAI,EAAC,MADP;AAEE,oBAAA,EAAE,EAAC,UAFL;AAGE,oBAAA,WAAW,EAAC,eAHd;AAIE,oBAAA,SAAS,EAAE8D,UAJb;AAKE,oBAAA,QAAQ,EAAEtD,gBALZ;AAME,oBAAA,MAAM,EAAEE,cANV;AAOE,oBAAA,KAAK,EAAER;AAPT;AAAA;AAAA;AAAA;AAAA,0BAJF,EAaGI,gBAAgB,iBACf,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,oBAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAtCF,eA0DE,QAAC,GAAD;AAAK,kBAAA,EAAE,EAAE,EAAT;AAAa,kBAAA,SAAS,EAAC,iBAAvB;AAAA,0CACE;AAAO,oBAAA,OAAO,EAAC,YAAf;AAA4B,oBAAA,SAAS,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE,QAAC,IAAD,CAAM,OAAN;AACE,oBAAA,EAAE,EAAC,UADL;AAEE,oBAAA,WAAW,EAAC,mBAFd;AAGE,oBAAA,SAAS,EAAEyD,YAHb;AAIE,oBAAA,QAAQ,EAAE/C,kBAJZ;AAKE,oBAAA,MAAM,EAAEC,gBALV;AAME,oBAAA,KAAK,EAAEJ;AANT;AAAA;AAAA;AAAA;AAAA,0BAJF,EAYGE,kBAAkB,iBACjB,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,oBAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBA1DF,eA6EE;AAAI,kBAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,wBA7EF,eA8EE,QAAC,OAAD;AAAS,kBAAA,OAAO,EAAC,WAAjB;AAA6B,kBAAA,MAAM,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,wBA9EF,eAgFE,QAAC,GAAD;AAAK,kBAAA,EAAE,EAAE,EAAT;AAAa,kBAAA,SAAS,EAAC,iBAAvB;AAAA,0CACE;AAAO,oBAAA,OAAO,EAAC,aAAf;AAA6B,oBAAA,SAAS,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAKE,QAAC,SAAD;AACE,oBAAA,UAAU,EAAE;AAAEqD,sBAAAA,QAAQ,EAAE;AAAZ,qBADd;AAEE,oBAAA,EAAE,EAAC,sBAFL;AAGE,oBAAA,IAAI,EAAC,OAHP;AAIE,oBAAA,WAAW,EAAC,iBAJd;AAKE,oBAAA,OAAO,EAAE1F,cALX;AAME,oBAAA,QAAQ,EAAGN,KAAD,IAAW;AACnBgD,sBAAAA,SAAS,CAAChD,KAAD,CAAT;AACD,qBARH;AASE,oBAAA,aAAa,EAAGA,KAAD,IAAW;AACxBgD,sBAAAA,SAAS,CAAChD,KAAD,CAAT;AACD;AAXH;AAAA;AAAA;AAAA;AAAA,0BALF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhFF,eAoGE,QAAC,GAAD;AAAK,kBAAA,EAAE,EAAE,EAAT;AAAa,kBAAA,SAAS,EAAC,iBAAvB;AAAA,0CACE;AAAO,oBAAA,OAAO,EAAC,UAAf;AAA0B,oBAAA,SAAS,EAAC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AACE,oBAAA,YAAY,EAAE,EADhB;AAEE,kCAAW,iBAFb;AAGE,oBAAA,SAAS,EAAE4F,gBAHb;AAIE,oBAAA,QAAQ,EAAExC,sBAJZ;AAKE,oBAAA,MAAM,EAAEC,oBALV;AAAA,4CAOE;AAAQ,sBAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAPF,EAQG7C,OAAO,CAACyF,GAAR,CAAY,CAACzF,OAAD,EAAU0F,GAAV,KAAkB;AAC7B,4BAAMjD,gBAAgB,GAAGzC,OAAO,CAAC2F,UAAjC;AACA,0CACE;AAA+B,wBAAA,KAAK,EAAElD,gBAAtC;AAAA,kCACGA;AADH,yBAAaA,gBAAb;AAAA;AAAA;AAAA;AAAA,8BADF;AAKD,qBAPA,CARH;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,EAsBGE,sBAAsB,iBACrB,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,oBAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBApGF,eAiIE,QAAC,GAAD;AAAK,kBAAA,EAAE,EAAE,EAAT;AAAa,kBAAA,SAAS,EAAC,iBAAvB;AAAA,0CACE;AAAO,oBAAA,OAAO,EAAC,YAAf;AAA4B,oBAAA,SAAS,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AACE,oBAAA,IAAI,EAAC,MADP;AAEE,oBAAA,SAAS,EAAE0C,iBAFb;AAGE,oBAAA,QAAQ,EAAEnC,uBAHZ;AAIE,oBAAA,MAAM,EAAEC,qBAJV;AAKE,oBAAA,KAAK,EAAEJ;AALT;AAAA;AAAA;AAAA;AAAA,0BAJF,EAYGE,uBAAuB,iBACtB,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,oBAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAjIF,eAoJE,QAAC,GAAD;AAAK,kBAAA,EAAE,EAAE,EAAT;AAAa,kBAAA,SAAS,EAAC,iBAAvB;AAAA,0CACE;AAAO,oBAAA,OAAO,EAAC,SAAf;AAAyB,oBAAA,SAAS,EAAC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE,QAAC,UAAD;AAAY,oBAAA,SAAS,EAAC,MAAtB;AAAA,4CACE,QAAC,GAAD;AAAK,sBAAA,EAAE,EAAE,CAAT;AAAY,sBAAA,EAAE,EAAE,CAAhB;AAAA,6CACE,QAAC,UAAD;AACE,wBAAA,QAAQ,MADV;AAEE,wBAAA,QAAQ,EAAEI,SAFZ;AAGE,wBAAA,QAAQ,EAAGuC,IAAD,IAAUtC,YAAY,CAACsC,IAAD,CAHlC;AAIE,wBAAA,cAAc,MAJhB;AAKE,wBAAA,UAAU,EAAC,MALb;AAME,wBAAA,cAAc,EAAE,EANlB;AAOE,wBAAA,eAAe,EAAC;AAPlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BADF,eAYE,QAAC,GAAD;AAAA,6CACE,QAAC,UAAD;AACE,wBAAA,QAAQ,EAAErC,OADZ;AAEE,wBAAA,QAAQ,EAAGqC,IAAD,IAAUpC,UAAU,CAACoC,IAAD,CAFhC;AAGE,wBAAA,cAAc,MAHhB;AAIE,wBAAA,UAAU,EAAC,MAJb;AAKE,wBAAA,cAAc,EAAE,EALlB;AAME,wBAAA,eAAe,EAAC;AANlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BAZF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,wBApJF,eAiLE;AAAI,kBAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,wBAjLF,eAmLE,QAAC,OAAD;AAAS,kBAAA,OAAO,EAAC,oBAAjB;AAAsC,kBAAA,MAAM,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,wBAnLF,eAoLE,QAAC,GAAD;AAAK,kBAAA,EAAE,EAAE,EAAT;AAAa,kBAAA,SAAS,EAAC,iBAAvB;AAAA,0CACE;AAAO,oBAAA,OAAO,EAAC,eAAf;AAA+B,oBAAA,SAAS,EAAC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAKE,QAAC,UAAD;AAAY,oBAAA,SAAS,EAAC,MAAtB;AAAA,4CACE;AAAA,8CACE;AACE,wBAAA,IAAI,EAAC,OADP;AAEE,wBAAA,SAAS,EAAC,WAFZ;AAGE,wBAAA,IAAI,EAAC,QAHP;AAIE,wBAAA,EAAE,EAAC,YAJL;AAKE,wBAAA,YAAY,EAAC,KALf;AAME,wBAAA,QAAQ,EAAEjC,0BANZ;AAOE,wBAAA,MAAM,EAAEC,wBAPV;AAQE,wBAAA,KAAK,EAAE,CACLH,oBAAoB,KAAK,UAAzB,IAAuC,UADlC,CART;AAWE,wBAAA,OAAO,EAAExC,aAAa,KAAK,CAX7B;AAYE,wBAAA,OAAO,EAAGqE,CAAD,IAAOnE,SAAS,CAAC,CAAD;AAZ3B;AAAA;AAAA;AAAA;AAAA,8BADF,eAeE;AACE,wBAAA,SAAS,EAAC,yBADZ;AAEE,wBAAA,OAAO,EAAC,YAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAfF;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAwBE;AAAK,sBAAA,SAAS,EAAC,OAAf;AAAA,8CACE;AACE,wBAAA,IAAI,EAAC,OADP;AAEE,wBAAA,SAAS,EAAC,WAFZ;AAGE,wBAAA,IAAI,EAAC,QAHP;AAIE,wBAAA,EAAE,EAAC,cAJL;AAKE,wBAAA,YAAY,EAAC,KALf;AAME,wBAAA,QAAQ,EAAEwC,0BANZ;AAOE,wBAAA,MAAM,EAAEC,wBAPV;AAQE,wBAAA,KAAK,EAAE,CACLH,oBAAoB,KAAK,YAAzB,IAAyC,YADpC,CART;AAWE,wBAAA,OAAO,EAAExC,aAAa,KAAK,CAX7B;AAYE,wBAAA,OAAO,EAAGqE,CAAD,IAAOnE,SAAS,CAAC,CAAD;AAZ3B;AAAA;AAAA;AAAA;AAAA,8BADF,eAeE;AACE,wBAAA,SAAS,EAAC,sBADZ;AAEE,wBAAA,OAAO,EAAC,cAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAfF;AAAA;AAAA;AAAA;AAAA;AAAA,4BAxBF,eA+CE;AAAK,sBAAA,SAAS,EAAC,OAAf;AAAA,8CACE;AACE,wBAAA,IAAI,EAAC,OADP;AAEE,wBAAA,SAAS,EAAC,WAFZ;AAGE,wBAAA,IAAI,EAAC,QAHP;AAIE,wBAAA,EAAE,EAAC,UAJL;AAKE,wBAAA,YAAY,EAAC,KALf;AAME,wBAAA,QAAQ,EAAEwC,0BANZ;AAOE,wBAAA,MAAM,EAAEC,wBAPV;AAQE,wBAAA,KAAK,EAAE,CAACH,oBAAoB,KAAK,QAAzB,IAAqC,QAAtC,CART;AASE,wBAAA,OAAO,EAAExC,aAAa,KAAK,CAT7B;AAUE,wBAAA,OAAO,EAAGqE,CAAD,IAAOnE,SAAS,CAAC,CAAD;AAV3B;AAAA;AAAA;AAAA;AAAA,8BADF,eAaE;AACE,wBAAA,SAAS,EAAC,yBADZ;AAEE,wBAAA,OAAO,EAAC,UAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAbF;AAAA;AAAA;AAAA;AAAA;AAAA,4BA/CF;AAAA;AAAA;AAAA;AAAA;AAAA,0BALF;AAAA;AAAA;AAAA;AAAA;AAAA,wBApLF,EA+PGF,aAAa,KAAK,CAAlB,iBACC;AAAA,0CACE,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE,EAAT;AAAa,oBAAA,SAAS,EAAC,iBAAvB;AAAA,4CACE;AAAO,sBAAA,OAAO,EAAC,aAAf;AAA6B,sBAAA,SAAS,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAIE;AACE,sBAAA,IAAI,EAAC,MADP;AAEE,sBAAA,SAAS,EAAC,cAFZ;AAGE,sBAAA,EAAE,EAAC,aAHL;AAIE,sBAAA,WAAW,EAAC,cAJd;AAKE,sBAAA,KAAK,EAAE6C,WALT;AAME,sBAAA,QAAQ,EAAGwB,CAAD,IAAO;AACfvB,wBAAAA,cAAc,CAACuB,CAAC,CAACC,MAAF,CAAS/F,KAAV,CAAd;AACD;AARH;AAAA;AAAA;AAAA;AAAA,4BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAiBE,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE,EAAT;AAAa,oBAAA,SAAS,EAAC,iBAAvB;AAAA,4CACE;AAAO,sBAAA,OAAO,EAAC,YAAf;AAA4B,sBAAA,SAAS,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAIE;AACE,sBAAA,IAAI,EAAC,IADP;AAEE,sBAAA,IAAI,EAAC,MAFP;AAGE,sBAAA,SAAS,EAAC,cAHZ;AAIE,sBAAA,EAAE,EAAC,YAJL;AAKE,sBAAA,WAAW,EAAC,kBALd;AAME,sBAAA,KAAK,EAAEwE,eANT;AAOE,sBAAA,QAAQ,EAAGsB,CAAD,IAAO;AACfrB,wBAAAA,kBAAkB,CAACqB,CAAC,CAACC,MAAF,CAAS/F,KAAV,CAAlB;AACD;AATH;AAAA;AAAA;AAAA;AAAA,4BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhQJ,EAoSGyB,aAAa,KAAK,CAAlB,iBACC,QAAC,GAAD;AAAK,kBAAA,EAAE,EAAE,EAAT;AAAa,kBAAA,SAAS,EAAC,iBAAvB;AAAA,0CACA;AAAO,oBAAA,OAAO,EAAC,YAAf;AAA4B,oBAAA,SAAS,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,eAIA,QAAC,IAAD,CAAM,OAAN;AACE,oBAAA,EAAE,EAAC,UADL;AAEE,oBAAA,WAAW,EAAC,mBAFd;AAGE,oBAAA,SAAS,EAAEkE,YAHb;AAIE,oBAAA,QAAQ,EAAE/C,kBAJZ;AAKE,oBAAA,MAAM,EAAEC,gBALV;AAME,oBAAA,KAAK,EAAEJ;AANT;AAAA;AAAA;AAAA;AAAA,0BAJA,EAYCE,kBAAkB,iBACjB,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,oBAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAbF;AAAA;AAAA;AAAA;AAAA;AAAA,wBArSJ,eAyTE;AAAI,kBAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,wBAzTF,eA0TE,QAAC,OAAD;AAAS,kBAAA,OAAO,EAAC,qBAAjB;AAAuC,kBAAA,MAAM,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,wBA1TF,eA2TE,QAAC,GAAD;AAAK,kBAAA,EAAE,EAAE,EAAT;AAAa,kBAAA,SAAS,EAAC,iBAAvB;AAAA,0CACE;AAAO,oBAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,SAAD;AACE,oBAAA,OAAO,EAAE,EADX;AAEE,oBAAA,QAAQ,EAAG3C,KAAD,IAAW;AACnB2E,sBAAAA,QAAQ,CAAC3E,KAAD,CAAR;AACD,qBAJH;AAKE,oBAAA,aAAa,EAAGA,KAAD,IAAW;AACxB2E,sBAAAA,QAAQ,CAAC3E,KAAD,CAAR;AACD,qBAPH;AAQE,oBAAA,kBAAkB,EAAC,mBARrB;AASE,oBAAA,QAAQ,MATV;AAUE,oBAAA,EAAE,EAAC,wBAVL;AAWE,oBAAA,QAAQ,MAXV;AAYE,oBAAA,WAAW,EAAC;AAZd;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBA3TF,eA6UE,QAAC,GAAD;AAAK,kBAAA,SAAS,EAAC,eAAf;AAAA,yCACE;AACE,oBAAA,IAAI,EAAC,QADP;AAEE,oBAAA,SAAS,EAAC,kBAFZ;AAGE,oBAAA,QAAQ,EAAE,CAAC4E,wBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBA7UF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AA4WD;;GAljBQ1E,S;UACOlB,U,EAgDVG,Q,EAUAA,Q,EAaAA,Q,EAUAA,Q,EAgBAA,Q;;;KAlGGe,S;AAojBT,eAAeA,SAAf","sourcesContent":["import React, { Fragment, useEffect, useState, useContext } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { useHistory } from \"react-router-dom\";\nimport Axios from \"axios\";\n\n\n//SESSION and INPUT\nimport { AuthContext } from \"../Helpers/AuthContext\";\nimport useInput from \"../Helpers/use-input\";\n\nimport { Container, Row, Col, InputGroup, Form } from \"react-bootstrap\";\nimport { BiMessageCheck, BiMinusCircle } from \"react-icons/bi\";\nimport DatePicker from \"react-datepicker\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\n//Toast\nimport { toast } from \"react-toastify\";\n\n//Components\nimport Heading from \"../Components/Heading\";\n\nconst isNotEmpty = (value) => value.trim() !== \"\";\n\nfunction BasicInfo() {\n  let history = useHistory();\n  const { authState, setAuthState } = useContext(AuthContext);\n\n  const [universityList, setUniversityList] = useState([]);\n  const [eduList, setEduList] = useState([]);\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"accessToken\")) {\n      history.push(\"/signup\");\n    } else {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/university`).then(\n      (response) => {\n        const uni = response.data;\n        var rows = [];\n        for (var i = 0; i < uni.length; i++) {\n          rows.push(response.data[i].university_name);\n        }\n        setUniversityList(rows);\n      }\n    );\n    }\n  });\n\n  //Education Level\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/eduLevel`).then(\n      (response) => {\n        setEduList(response.data);\n      }\n    );\n  }, []);\n\n  const [currentStatus, setCurrentStatus] = useState(0); // 0: no show, 1: show yes, 2: show no.\n  const jobStatus = (currentStatus) => {\n    setCurrentStatus(currentStatus);\n  };\n\n  //GENDER Input Check\n  const [genderInput, setGenderInput] = useState(\"\");\n\n  //DOB Input Check\n  const {\n    value: enteredDob,\n    isValid: enteredDobIsValid,\n    hasError: dobInputHasError,\n    valueChangeHandler: dobChangeHandler,\n    inputBlurHandler: dobBlurHandler,\n    reset: resetDobInput,\n  } = useInput(isNotEmpty);\n\n  //About Input Check\n  const {\n    value: enteredAbout,\n    isValid: enteredAboutIsValid,\n    hasError: aboutInputHasError,\n    valueChangeHandler: aboutChangeHandler,\n    inputBlurHandler: aboutBlurHandler,\n    reset: resetAboutInput,\n  } = useInput(isNotEmpty);\n\n  //School Input Check\n  const [school, setSchool] = useState(\"\");\n\n  //Highest Education Level Input Check\n  const {\n    value: enteredHighLevel,\n    isValid: enteredHighLevelIsValid,\n    hasError: highLevelInputHasError,\n    valueChangeHandler: highLevelChangeHandler,\n    inputBlurHandler: highLevelBlurHandler,\n    reset: resetHighLevelInput,\n  } = useInput(isNotEmpty);\n\n  //Study Field Level Input Check\n  const {\n    value: enteredStudyField,\n    isValid: enteredStudyFieldIsValid,\n    hasError: studyFieldInputHasError,\n    valueChangeHandler: studyFieldChangeHandler,\n    inputBlurHandler: studyFieldBlurHandler,\n    reset: resetStudyFieldInput,\n  } = useInput(isNotEmpty);\n\n  //Start Year Input Check\n  const [startDate, setStartDate] = useState();\n\n  //End Year Input Check\n  const [endDate, setEndDate] = useState();\n\n  //Current Status Level Input Check\n  const {\n    value: enteredCurrentStatus,\n    isValid: enteredCurrentStatusIsValid,\n    // hasError: currentStatusInputHasError,\n    valueChangeHandler: currentStatusChangeHandler,\n    inputBlurHandler: currentStatusBlurHandler,\n    reset: resetCurrentStatusInput,\n  } = useInput(isNotEmpty);\n\n  //Company Name Input Check\n  const [companyName, setCompanyName] = useState(\"\");\n\n  //Current Position Input Check\n  const [currentPosition, setCurrentPosition] = useState(\"\");\n\n  const [skill, setSkill] = useState(\"\");\n\n  let userBasicInfoFormIsValid = false;\n\n  if (\n    genderInput !== \"\" &&\n    enteredDobIsValid &&\n    enteredAboutIsValid &&\n    school !== \"\" &&\n    enteredHighLevelIsValid &&\n    enteredCurrentStatusIsValid &&\n    enteredHighLevelIsValid\n  ) {\n    userBasicInfoFormIsValid = true;\n  }\n  const userBasicInfoFormSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (\n      genderInput === \"\" &&\n      !enteredDobIsValid &&\n      !enteredAboutIsValid &&\n      school === \"\" &&\n      !enteredHighLevelIsValid &&\n      !enteredCurrentStatusIsValid &&\n      !enteredStudyFieldIsValid\n    ) {\n      return;\n    } else {\n      Axios.post(\n        `${process.env.REACT_APP_SERVER_DOMAIN}/basicinfo/user`,\n        {\n          gender: genderInput,\n          dob: enteredDob,\n          about: enteredAbout,\n          school: school,\n          eduLevel: enteredHighLevel,\n          studyField: enteredStudyField,\n          startDate: startDate,\n          endDate: endDate,\n          currentStatus: enteredCurrentStatus,\n          companyName: companyName,\n          currentPosition: currentPosition,\n          skill: skill,\n        },\n        {\n          headers: {\n            accessToken: localStorage.getItem(\"accessToken\"),\n          },\n        }\n      ).then((response) => {\n        if (response.data.error) {\n          return toast.error(\n            <Fragment>\n              <BiMinusCircle /> <span>{response.data.error}</span>\n            </Fragment>\n          );\n        } else {\n          return toast.success(\n            <Fragment>\n              <BiMessageCheck /> <span>{response.data.success}</span>\n            </Fragment>\n          )\n        }\n      });\n    }\n    setGenderInput(\"\");\n    resetDobInput();\n    resetAboutInput();\n    setSchool(\"\");\n    resetHighLevelInput();\n    resetCurrentStatusInput();\n    resetStudyFieldInput();\n    history.push('/');\n  };\n\n  const dobClasses = dobInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const aboutClasses = aboutInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const highLevelClasses = highLevelInputHasError\n    ? \"form-select form-select-sm is-invalid\"\n    : \"form-select form-select-sm\";\n\n  const studyFieldClasses = studyFieldInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  return (\n    <AuthContext.Provider value={{ authState, setAuthState }}>\n    <Fragment>\n      <HelmetProvider>\n        <Helmet>\n          <title> Basic Info | Zom - IN </title>\n        </Helmet>\n      </HelmetProvider>\n      <div id=\"basicInfo\" className=\"basicInfo\">\n        <Container className=\"my-5\">\n          <Row>\n            <Col sm={6} xs={12} className=\"mx-auto\">\n              <Heading content=\"Basic Info\" design=\"h4 mb-4\"/>\n              <Form onSubmit={userBasicInfoFormSubmissionHandler}>\n                <Col sm={12} className=\"form-group mb-3\">\n                  <label htmlFor=\"inputgender\" className=\"required\">\n                    You are\n                  </label>\n                  <InputGroup>\n                    <div>\n                      <input\n                        type=\"radio\"\n                        className=\"btn-check\"\n                        name=\"gender\"\n                        required\n                        id=\"male\"\n                        autoComplete=\"off\"\n                        onChange={(e) => setGenderInput(e.target.value)}\n                        value={[genderInput === \"Male\" || \"Male\"]}\n                      />\n                      <label className=\"btn btn-outline-success\" htmlFor=\"male\">\n                        Male\n                      </label>\n                    </div>\n\n                    <div className=\"ms-2 \">\n                      <input\n                        type=\"radio\"\n                        className=\"btn-check\"\n                        name=\"gender\"\n                        id=\"female\"\n                        autoComplete=\"off\"\n                        onChange={(e) => setGenderInput(e.target.value)}\n                        value={[genderInput === \"Female\" || \"Female\"]}\n                      />\n                      <label className=\"btn btn-outline-info\" htmlFor=\"female\">\n                        Female\n                      </label>\n                    </div>\n                  </InputGroup>\n                </Col>\n                <Col sm={12} className=\"form-group mb-3\">\n                  <label htmlFor=\"inputdob\" className=\"required\">\n                    Date of Birth\n                  </label>\n                  <input\n                    type=\"date\"\n                    id=\"inputdob\"\n                    placeholder=\"Your Birthday\"\n                    className={dobClasses}\n                    onChange={dobChangeHandler}\n                    onBlur={dobBlurHandler}\n                    value={enteredDob}\n                  />\n                  {dobInputHasError && (\n                    <Form.Control.Feedback type=\"invalid\">\n                      Please select your birthdate.\n                    </Form.Control.Feedback>\n                  )}\n                </Col>\n\n                <Col sm={12} className=\"form-group mb-2\">\n                  <label htmlFor=\"inputabout\" className=\"required\">\n                    About\n                  </label>\n                  <Form.Control\n                    as=\"textarea\"\n                    placeholder=\"Tell us about you\"\n                    className={aboutClasses}\n                    onChange={aboutChangeHandler}\n                    onBlur={aboutBlurHandler}\n                    value={enteredAbout}\n                  />\n                  {aboutInputHasError && (\n                    <Form.Control.Feedback type=\"invalid\">\n                      Tell us about you.\n                    </Form.Control.Feedback>\n                  )}\n                </Col>\n\n                <hr className=\"my-4\" />\n                <Heading content=\"Education\" design=\"h4 mb-4\" />\n\n                <Col sm={12} className=\"form-group mb-2\">\n                  <label htmlFor=\"inputSchool\" className=\"required\">\n                    School\n                  </label>\n\n                  <Typeahead\n                    inputProps={{ required: true }}\n                    id=\"valid-styles-example\"\n                    size=\"small\"\n                    placeholder=\"Choose a School\"\n                    options={universityList}\n                    onChange={(value) => {\n                      setSchool(value);\n                    }}\n                    onInputChange={(value) => {\n                      setSchool(value);\n                    }}\n                  />\n                </Col>\n\n                <Col sm={12} className=\"form-group mb-2\">\n                  <label htmlFor=\"eduLevel\" className=\"required\">\n                    Highest Education Level\n                  </label>\n                  <select\n                    defaultValue={\"\"}\n                    aria-label=\"Education Level\"\n                    className={highLevelClasses}\n                    onChange={highLevelChangeHandler}\n                    onBlur={highLevelBlurHandler}\n                  >\n                    <option value=\"\">Please Choose One</option>\n                    {eduList.map((eduList, key) => {\n                      const enteredHighLevel = eduList.child_name;\n                      return (\n                        <option key={enteredHighLevel} value={enteredHighLevel}>\n                          {enteredHighLevel}\n                        </option>\n                      );\n                    })}\n                  </select>\n\n                  {highLevelInputHasError && (\n                    <Form.Control.Feedback type=\"invalid\">\n                      Please choose your highest education Level.\n                    </Form.Control.Feedback>\n                  )}\n                </Col>\n\n                <Col sm={12} className=\"form-group mb-2\">\n                  <label htmlFor=\"studyField\" className=\"required\">\n                    Field of Study\n                  </label>\n                  <input\n                    type=\"text\"\n                    className={studyFieldClasses}\n                    onChange={studyFieldChangeHandler}\n                    onBlur={studyFieldBlurHandler}\n                    value={enteredStudyField}\n                  />\n\n                  {studyFieldInputHasError && (\n                    <Form.Control.Feedback type=\"invalid\">\n                      Please fill in your field of study.\n                    </Form.Control.Feedback>\n                  )}\n                </Col>\n\n                <Col sm={12} className=\"form-group mb-2\">\n                  <label htmlFor=\"eduYear\" className=\"required\">\n                    Year\n                  </label>\n                  <InputGroup className=\"mb-3\">\n                    <Col sm={4} xs={6}>\n                      <DatePicker\n                        required\n                        selected={startDate}\n                        onChange={(date) => setStartDate(date)}\n                        showYearPicker\n                        dateFormat=\"yyyy\"\n                        yearItemNumber={10}\n                        placeholderText=\"Year Start\"\n                      />\n                    </Col>\n                    <Col>\n                      <DatePicker\n                        selected={endDate}\n                        onChange={(date) => setEndDate(date)}\n                        showYearPicker\n                        dateFormat=\"yyyy\"\n                        yearItemNumber={10}\n                        placeholderText=\"Year End\"\n                      />\n                    </Col>\n                  </InputGroup>\n                </Col>\n\n                <hr className=\"my-4\" />\n\n                <Heading content=\"Working Experience\" design=\"h4 mb-4\"/>\n                <Col sm={12} className=\"form-group mb-2\">\n                  <label htmlFor=\"currentStatus\" className=\"required\">\n                    Current Status\n                  </label>\n\n                  <InputGroup className=\"mb-3\">\n                    <div>\n                      <input\n                        type=\"radio\"\n                        className=\"btn-check\"\n                        name=\"status\"\n                        id=\"employedCS\"\n                        autoComplete=\"off\"\n                        onChange={currentStatusChangeHandler}\n                        onBlur={currentStatusBlurHandler}\n                        value={[\n                          enteredCurrentStatus === \"employee\" || \"employee\",\n                        ]}\n                        checked={currentStatus === 2}\n                        onClick={(e) => jobStatus(2)}\n                      />\n                      <label\n                        className=\"btn btn-outline-success\"\n                        htmlFor=\"employedCS\"\n                      >\n                        Employed\n                      </label>\n                    </div>\n\n                    <div className=\"ms-2 \">\n                      <input\n                        type=\"radio\"\n                        className=\"btn-check\"\n                        name=\"status\"\n                        id=\"unemployedCS\"\n                        autoComplete=\"off\"\n                        onChange={currentStatusChangeHandler}\n                        onBlur={currentStatusBlurHandler}\n                        value={[\n                          enteredCurrentStatus === \"unemployed\" || \"unemployed\",\n                        ]}\n                        checked={currentStatus === 1}\n                        onClick={(e) => jobStatus(1)}\n                      />\n                      <label\n                        className=\"btn btn-outline-info\"\n                        htmlFor=\"unemployedCS\"\n                      >\n                        Unemployed\n                      </label>\n                    </div>\n\n                    <div className=\"ms-2 \">\n                      <input\n                        type=\"radio\"\n                        className=\"btn-check\"\n                        name=\"status\"\n                        id=\"internCS\"\n                        autoComplete=\"off\"\n                        onChange={currentStatusChangeHandler}\n                        onBlur={currentStatusBlurHandler}\n                        value={[enteredCurrentStatus === \"intern\" || \"intern\"]}\n                        checked={currentStatus === 3}\n                        onClick={(e) => jobStatus(3)}\n                      />\n                      <label\n                        className=\"btn btn-outline-warning\"\n                        htmlFor=\"internCS\"\n                      >\n                        Intern\n                      </label>\n                    </div>\n                  </InputGroup>\n                </Col>\n\n                {currentStatus === 2 && (\n                  <div>\n                    <Col sm={12} className=\"form-group mb-2\">\n                      <label htmlFor=\"companyName\" className=\"required\">\n                        Company Name\n                      </label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"companyName\"\n                        placeholder=\"Company Name\"\n                        value={companyName}\n                        onChange={(e) => {\n                          setCompanyName(e.target.value);\n                        }}\n                      />\n                    </Col>\n\n                    <Col sm={12} className=\"form-group mb-2\">\n                      <label htmlFor=\"currentPos\" className=\"required\">\n                        Current Position\n                      </label>\n                      <input\n                        size=\"sm\"\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"currentPos\"\n                        placeholder=\"Current Position\"\n                        value={currentPosition}\n                        onChange={(e) => {\n                          setCurrentPosition(e.target.value);\n                        }}\n                      />\n                    </Col>\n                  </div>\n                )}\n\n                {currentStatus === 3 && (\n                  <Col sm={12} className=\"form-group mb-2\">\n                  <label htmlFor=\"inputabout\" className=\"required\">\n                    About\n                  </label>\n                  <Form.Control\n                    as=\"textarea\"\n                    placeholder=\"Tell us about you\"\n                    className={aboutClasses}\n                    onChange={aboutChangeHandler}\n                    onBlur={aboutBlurHandler}\n                    value={enteredAbout}\n                  />\n                  {aboutInputHasError && (\n                    <Form.Control.Feedback type=\"invalid\">\n                      Tell us about you.\n                    </Form.Control.Feedback>\n                  )}\n                </Col>\n                )}\n\n                <hr className=\"my-4\" />\n                <Heading content=\"Skills & Experience\" design=\"h4 mb-4\" />\n                <Col sm={12} className=\"form-group mb-2\">\n                  <label htmlFor=\"inputskillexp\">Skills & Experience</label>\n                  <Typeahead\n                    options={[]}\n                    onChange={(value) => {\n                      setSkill(value);\n                    }}\n                    onInputChange={(value) => {\n                      setSkill(value);\n                    }}\n                    newSelectionPrefix=\"Add a new skill: \"\n                    allowNew\n                    id=\"public-methods-example\"\n                    multiple\n                    placeholder=\"Add a new skill:\"\n                  />\n                </Col>\n\n                <Col className=\"text-end my-3\">\n                  <button\n                    type=\"submit\"\n                    className=\" btn btn-primary\"\n                    disabled={!userBasicInfoFormIsValid}\n                  >\n                    Submit\n                  </button>\n                </Col>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </Fragment>\n    </AuthContext.Provider>\n\n  );\n}\n\nexport default BasicInfo;\n"]},"metadata":{},"sourceType":"module"}