{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/ApplyJob.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useContext } from \"react\";\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../Helpers/AuthContext\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { BiMessageCheck, BiMinusCircle } from \"react-icons/bi\"; //Toast\n\nimport { toast } from \"react-toastify\";\nimport Heading from \"../Heading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ApplyJob(props) {\n  _s();\n\n  let history = useHistory();\n  const {\n    authState,\n    setAuthState\n  } = useContext(AuthContext);\n  const oppoID = props.oppo_id;\n  const jobTitle = props.job_title;\n\n  if (localStorage.getItem(\"accessToken\")) {\n    useEffect(() => {\n      Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/stateLocation`).then(response => {\n        console.log(response.data);\n      });\n    }, []);\n  }\n\n  const applyJob = id => {\n    let applyJobInfo = [id];\n    console.log(applyJobInfo[0]);\n\n    if (!localStorage.getItem(\"accessToken\")) {\n      return [history.push(\"/signup\"), toast.warn( /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(BiMinusCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Please Sign In /Sign Up before applying for a job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))];\n    } else {\n      Axios.post(`${process.env.REACT_APP_SERVER_DOMAIN}/opportunity/user/`, {\n        oppoID: applyJobInfo[0]\n      }, {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        if (response.data.error) {\n          return toast.error( /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(BiMinusCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: response.data.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this));\n        } else {\n          return toast.success( /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(BiMessageCheck, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: response.data.success\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this));\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authState,\n      setAuthState\n    },\n    children: /*#__PURE__*/_jsxDEV(Modal, { ...props,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          content: `Applying for ${jobTitle}`,\n          design: \"h5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Is your resume complete?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), authState.status && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"If Yes, please click \\\"Apply\\\" and if No, then click \\\"Go to Profile\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [authState.status && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-success\",\n          href: \"/profile\",\n          children: \"Go to Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => applyJob(oppoID),\n          children: \"Apply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ApplyJob, \"/fYJOzQfLphzCf98RS6RRMoYd8E=\", false, function () {\n  return [useHistory];\n});\n\n_c = ApplyJob;\nexport default ApplyJob;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApplyJob\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/ApplyJob.js"],"names":["React","Fragment","useEffect","useContext","Axios","useHistory","AuthContext","Modal","Button","BiMessageCheck","BiMinusCircle","toast","Heading","ApplyJob","props","history","authState","setAuthState","oppoID","oppo_id","jobTitle","job_title","localStorage","getItem","get","process","env","REACT_APP_SERVER_DOMAIN","then","response","console","log","data","applyJob","id","applyJobInfo","push","warn","post","headers","accessToken","error","success","status"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useContext } from \"react\";\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../Helpers/AuthContext\";\n\nimport { Modal, Button } from \"react-bootstrap\";\nimport { BiMessageCheck, BiMinusCircle } from \"react-icons/bi\";\n\n//Toast\nimport { toast } from \"react-toastify\";\n\nimport Heading from \"../Heading\";\n\nfunction ApplyJob(props) {\n  let history = useHistory();\n  const { authState, setAuthState } = useContext(AuthContext);\n\n  const oppoID = props.oppo_id;\n  const jobTitle = props.job_title;\n\n  if (localStorage.getItem(\"accessToken\")) {\n    useEffect(() => {\n        Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/stateLocation`)\n            .then((response) => {\n                console.log(response.data);\n\n            });\n    }, []);\n  }\n\n\n\n  const applyJob = (id) => {\n    let applyJobInfo = [id];\n    console.log(applyJobInfo[0]);\n\n    if (!localStorage.getItem(\"accessToken\")) {\n      return [\n        history.push(\"/signup\"),\n        toast.warn(\n          <Fragment>\n            <BiMinusCircle />\n            <span>Please Sign In /Sign Up before applying for a job</span>\n          </Fragment>\n        ),\n      ];\n    } else {\n      Axios.post(\n        `${process.env.REACT_APP_SERVER_DOMAIN}/opportunity/user/`,\n        {\n          oppoID: applyJobInfo[0],\n        },\n        {\n          headers: {\n            accessToken: localStorage.getItem(\"accessToken\"),\n          },\n        }\n      ).then((response) => {\n        if (response.data.error) {\n          return toast.error(\n            <Fragment>\n              <BiMinusCircle /> <span>{response.data.error}</span>\n            </Fragment>\n          );\n        } else {\n          return toast.success(\n            <Fragment>\n              <BiMessageCheck /> <span>{response.data.success}</span>\n            </Fragment>\n          );\n        }\n      });\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ authState, setAuthState }}>\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Heading content={`Applying for ${jobTitle}`} design=\"h5\" />\n        </Modal.Header>\n        <Modal.Body>\n          <p>Is your resume complete?</p>\n          {authState.status && (\n            <p>\n              If Yes, please click \"Apply\" and if No, then click \"Go to Profile\"\n            </p>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          {authState.status && (\n            <Button variant=\"outline-success\" href=\"/profile\">\n              Go to Profile\n            </Button>\n          )}\n          <Button onClick={() => applyJob(oppoID)}>Apply</Button>\n        </Modal.Footer>\n      </Modal>\n    </AuthContext.Provider>\n  );\n}\n\nexport default ApplyJob;\n"]},"metadata":{},"sourceType":"module"}