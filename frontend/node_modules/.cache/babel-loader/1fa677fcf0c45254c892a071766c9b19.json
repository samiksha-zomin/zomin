{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Test.jsx\";\nimport React from \"react\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction test() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TEST HERE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CKEditor, {\n      editor: ClassicEditor,\n      config: {\n        placeholder: \"Add content here...\",\n        removePlugins: [\"Heading\", \"Essentials\", \"Italic\", \"Bold\", \"imageUpload\", \"EasyImage\", \"ImageUpload\", \"MediaEmbed\", \"BlockQuote\", \"List\", \"Indent\", \"Table\" // \"link\"\n        ]\n      },\n      data: \"<p>Hello from CKEditor 5!</p>\",\n      onReady: editor => {\n        // You can store the \"editor\" and use when it is needed.\n        console.log(\"Editor is ready to use!\", editor);\n      },\n      onChange: (event, editor) => {\n        const data = editor.getData();\n        console.log({\n          event,\n          editor,\n          data\n        });\n      },\n      onBlur: (event, editor) => {\n        console.log(\"Blur.\", editor);\n      },\n      onFocus: (event, editor) => {\n        console.log(\"Focus.\", editor);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\nexport default test;","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Test.jsx"],"names":["React","CKEditor","ClassicEditor","test","placeholder","removePlugins","editor","console","log","event","data","getData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;;;AAEA,SAASC,IAAT,GAAgB;AAGd,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AACE,MAAA,MAAM,EAAED,aADV;AAEE,MAAA,MAAM,EAAE;AACNE,QAAAA,WAAW,EAAE,qBADP;AAENC,QAAAA,aAAa,EAAE,CACb,SADa,EAEb,YAFa,EAGb,QAHa,EAIb,MAJa,EAKb,aALa,EAMb,WANa,EAOb,aAPa,EAQb,YARa,EASb,YATa,EAUb,MAVa,EAWb,QAXa,EAYb,OAZa,CAab;AAba;AAFT,OAFV;AAoBE,MAAA,IAAI,EAAC,+BApBP;AAqBE,MAAA,OAAO,EAAGC,MAAD,IAAY;AACnB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,MAAvC;AACD,OAxBH;AAyBE,MAAA,QAAQ,EAAE,CAACG,KAAD,EAAQH,MAAR,KAAmB;AAC3B,cAAMI,IAAI,GAAGJ,MAAM,CAACK,OAAP,EAAb;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY;AAAEC,UAAAA,KAAF;AAASH,UAAAA,MAAT;AAAiBI,UAAAA;AAAjB,SAAZ;AACD,OA5BH;AA6BE,MAAA,MAAM,EAAE,CAACD,KAAD,EAAQH,MAAR,KAAmB;AACzBC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,MAArB;AACD,OA/BH;AAgCE,MAAA,OAAO,EAAE,CAACG,KAAD,EAAQH,MAAR,KAAmB;AAC1BC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AACD;AAlCH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD;;AAED,eAAeH,IAAf","sourcesContent":["import React from \"react\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n\nfunction test() {\n\n    \n  return (\n    <div>\n      <h1>TEST HERE</h1>\n      <CKEditor\n        editor={ClassicEditor}\n        config={{\n          placeholder: \"Add content here...\",\n          removePlugins: [\n            \"Heading\",\n            \"Essentials\",\n            \"Italic\",\n            \"Bold\",\n            \"imageUpload\",\n            \"EasyImage\",\n            \"ImageUpload\",\n            \"MediaEmbed\",\n            \"BlockQuote\",\n            \"List\",\n            \"Indent\",\n            \"Table\",\n            // \"link\"\n          ],\n        }}\n        data=\"<p>Hello from CKEditor 5!</p>\"\n        onReady={(editor) => {\n          // You can store the \"editor\" and use when it is needed.\n          console.log(\"Editor is ready to use!\", editor);\n        }}\n        onChange={(event, editor) => {\n          const data = editor.getData();\n          console.log({ event, editor, data });\n        }}\n        onBlur={(event, editor) => {\n          console.log(\"Blur.\", editor);\n        }}\n        onFocus={(event, editor) => {\n          console.log(\"Focus.\", editor);\n        }}\n      />\n    </div>\n  );\n}\n\nexport default test;\n"]},"metadata":{},"sourceType":"module"}