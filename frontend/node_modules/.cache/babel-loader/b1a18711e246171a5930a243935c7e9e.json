{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/BasicInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState, useContext } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { useHistory } from \"react-router-dom\";\nimport Axios from \"axios\"; //SESSION and INPUT\n\nimport { AuthContext } from \"../Helpers/AuthContext\";\nimport useInput from \"../Helpers/use-input\";\nimport { Container, Row, Col, InputGroup, Form } from \"react-bootstrap\";\nimport { BiMessageCheck, BiMinusCircle } from \"react-icons/bi\";\nimport DatePicker from \"react-datepicker\";\nimport { Typeahead } from \"react-bootstrap-typeahead\"; //Toast\n\nimport { toast } from \"react-toastify\"; //Components\n\nimport Heading from \"../Components/Heading\";\nimport { response } from \"../../../backend/routes/meta\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== \"\";\n\nfunction BasicInfo() {\n  _s();\n\n  let history = useHistory(); // const { setAuthState } = useContext(AuthContext);\n\n  const {\n    authState\n  } = useContext(AuthContext); // const [authState, setAuthState] = useState({\n  //   id: \"\",\n  //   admin: \"\",\n  //   company: \"\",\n  //   status: false,\n  //   attempt: \"\",\n  // });\n  // useEffect(() => {\n  //   Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/auth/authenticate`, {\n  //     headers: {\n  //       accessToken: localStorage.getItem(\"accessToken\"),\n  //     },\n  //   }).then((response) => {\n  //     if (response.data.error) {\n  //       setAuthState({ ...authState, status: false });\n  //       history.push(\"/\");\n  //     } else {\n  //       setAuthState({\n  //         id: response.data.id,\n  //         admin: response.data.admin,\n  //         company: response.data.company,\n  //         attempt: response.data.attempt,\n  //         status: true,\n  //       });\n  //     }\n  //   });\n  // }, []);\n\n  const [universityList, setUniversityList] = useState([]);\n  const [eduList, setEduList] = useState([]);\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/university`).then(response => {\n      const uni = response.data;\n      var rows = [];\n\n      for (var i = 0; i < uni.length; i++) {\n        rows.push(response.data[i].university_name);\n      }\n\n      setUniversityList(rows);\n    });\n  }, []); //Education Level\n\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/eduLevel`).then(response => {\n      setEduList(response.data);\n    });\n  }, []);\n  const [currentStatus, setCurrentStatus] = useState(0); // 0: no show, 1: show yes, 2: show no.\n\n  const jobStatus = currentStatus => {\n    setCurrentStatus(currentStatus);\n  }; //GENDER Input Check\n\n\n  const [genderInput, setGenderInput] = useState(\"\"); //DOB Input Check\n\n  const {\n    value: enteredDob,\n    isValid: enteredDobIsValid,\n    hasError: dobInputHasError,\n    valueChangeHandler: dobChangeHandler,\n    inputBlurHandler: dobBlurHandler,\n    reset: resetDobInput\n  } = useInput(isNotEmpty); //About Input Check\n\n  const {\n    value: enteredAbout,\n    isValid: enteredAboutIsValid,\n    hasError: aboutInputHasError,\n    valueChangeHandler: aboutChangeHandler,\n    inputBlurHandler: aboutBlurHandler,\n    reset: resetAboutInput\n  } = useInput(isNotEmpty); //School Input Check\n\n  const [school, setSchool] = useState(\"\"); //Highest Education Level Input Check\n\n  const {\n    value: enteredHighLevel,\n    isValid: enteredHighLevelIsValid,\n    hasError: highLevelInputHasError,\n    valueChangeHandler: highLevelChangeHandler,\n    inputBlurHandler: highLevelBlurHandler,\n    reset: resetHighLevelInput\n  } = useInput(isNotEmpty); //Start Year Input Check\n\n  const [startDate, setStartDate] = useState(new Date()); //End Year Input Check\n\n  const [endDate, setEndDate] = useState(new Date()); //Current Status Level Input Check\n\n  const {\n    value: enteredCurrentStatus,\n    isValid: enteredCurrentStatusIsValid,\n    hasError: currentStatusInputHasError,\n    valueChangeHandler: currentStatusChangeHandler,\n    inputBlurHandler: currentStatusBlurHandler,\n    reset: resetCurrentStatusInput\n  } = useInput(isNotEmpty);\n  let userBasicInfoFormIsValid = false; //Company Name Input Check\n\n  const [companyName, setCompanyName] = useState(\"\"); //Current Position Input Check\n\n  const [currentPosition, setCurrentPosition] = useState(\"\");\n  const [skill, setSkill] = useState([]);\n\n  if (genderInput !== \"\" && enteredDobIsValid && enteredAboutIsValid && school !== \"\" && enteredHighLevelIsValid && enteredCurrentStatusIsValid) {\n    userBasicInfoFormIsValid = true;\n  }\n\n  const userBasicInfoFormSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (genderInput === \"\" && !enteredDobIsValid && !enteredAboutIsValid && school === \"\" && enteredHighLevelIsValid && enteredCurrentStatusIsValid) {\n      return;\n    } else {\n      Axios.post(`${process.env.REACT_APP_SERVER_DOMAIN}/basicinfo/user`, {\n        // gender: genderInput,\n        // dob: enteredDob,\n        // about: enteredAbout,\n        // school: school,\n        // eduLevel: enteredHighLevel,\n        // startDate: startDate,\n        // endDate: endDate,\n        // currentStatus: enteredCurrentStatus,\n        // companyName: companyName,\n        // currentPosition: currentPosition,\n        // skill: skill,\n        id: authState.id\n      }, {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        if (response.data.error) {\n          console.log(response.data.error);\n        } else {\n          alert(response.data);\n        }\n      });\n    }\n\n    setGenderInput(\"\");\n    resetDobInput();\n    resetAboutInput();\n    setSchool(\"\");\n    resetHighLevelInput();\n    resetCurrentStatusInput();\n  };\n\n  const dobClasses = dobInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const aboutClasses = aboutInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const highLevelClasses = highLevelInputHasError ? \"form-select form-select-sm is-invalid\" : \"form-select form-select-sm\";\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        authState,\n        setAuthState\n      },\n      children: [/*#__PURE__*/_jsxDEV(HelmetProvider, {\n        children: /*#__PURE__*/_jsxDEV(Helmet, {\n          children: /*#__PURE__*/_jsxDEV(\"title\", {\n            children: \" Basic Info | Zom - IN \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"basicInfo\",\n        className: \"basicInfo\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          className: \"my-5\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: 6,\n              xs: 12,\n              className: \"mx-auto\",\n              children: [/*#__PURE__*/_jsxDEV(Heading, {\n                content: \"Basic Info\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: userBasicInfoFormSubmissionHandler,\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"inputgender\",\n                    className: \"required\",\n                    children: \"You are\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"radio\",\n                        className: \"btn-check\",\n                        name: \"gender\",\n                        required: true,\n                        id: \"male\",\n                        autoComplete: \"off\",\n                        onChange: e => setGenderInput(e.target.value),\n                        value: [genderInput === \"Male\" || \"Male\"]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"btn btn-outline-success\",\n                        htmlFor: \"male\",\n                        children: \"Male\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 256,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"ms-2 \",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"radio\",\n                        className: \"btn-check\",\n                        name: \"gender\",\n                        id: \"female\",\n                        autoComplete: \"off\",\n                        onChange: e => setGenderInput(e.target.value),\n                        value: [genderInput === \"Female\" || \"Female\"]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 265,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"btn btn-outline-info\",\n                        htmlFor: \"female\",\n                        children: \"Female\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 274,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"inputdob\",\n                    className: \"required\",\n                    children: \"Date of Birth\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"date\",\n                    id: \"inputdob\",\n                    placeholder: \"Your Birthday\",\n                    className: dobClasses,\n                    onChange: dobChangeHandler,\n                    onBlur: dobBlurHandler,\n                    value: enteredDob\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 21\n                  }, this), dobInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please select your birthdate.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"inputabout\",\n                    className: \"required\",\n                    children: \"About\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    placeholder: \"Tell us about you\",\n                    className: aboutClasses,\n                    onChange: aboutChangeHandler,\n                    onBlur: aboutBlurHandler,\n                    value: enteredAbout\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 21\n                  }, this), aboutInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Tell us about you.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                  className: \"my-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Heading, {\n                  content: \"Education\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"inputSchool\",\n                    className: \"required\",\n                    children: \"School\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typeahead, {\n                    inputProps: {\n                      required: true\n                    },\n                    id: \"valid-styles-example\",\n                    size: \"small\",\n                    placeholder: \"Choose a School\",\n                    options: universityList,\n                    onChange: value => {\n                      setSchool(value);\n                    },\n                    onInputChange: value => {\n                      setSchool(value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"eduLevel\",\n                    className: \"required\",\n                    children: \"Highest Education Level\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    defaultValue: \"DEFAULT\",\n                    \"aria-label\": \"Default select example\",\n                    className: highLevelClasses,\n                    onChange: highLevelChangeHandler,\n                    onBlur: highLevelBlurHandler,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Please Choose One\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 356,\n                      columnNumber: 23\n                    }, this), eduList.map((eduList, key) => {\n                      const enteredHighLevel = eduList.child_name;\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: enteredHighLevel,\n                        children: enteredHighLevel\n                      }, enteredHighLevel, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 360,\n                        columnNumber: 27\n                      }, this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 21\n                  }, this), highLevelInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please choose your highest education Level.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"eduYear\",\n                    className: \"required\",\n                    children: \"Year\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      sm: 4,\n                      xs: 6,\n                      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                        required: true,\n                        selected: startDate,\n                        onChange: date => setStartDate(date),\n                        showYearPicker: true,\n                        dateFormat: \"yyyy\",\n                        yearItemNumber: 10,\n                        placeholderText: \"Year Start\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 383,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 382,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                        selected: endDate,\n                        onChange: date => setEndDate(date),\n                        showYearPicker: true,\n                        dateFormat: \"yyyy\",\n                        yearItemNumber: 10,\n                        placeholderText: \"Year End\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 394,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 393,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                  className: \"my-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Heading, {\n                  content: \"Working Experience\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"currentStatus\",\n                    className: \"required\",\n                    children: \"Current Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"radio\",\n                        className: \"btn-check\",\n                        name: \"status\",\n                        id: \"employedCS\",\n                        autoComplete: \"off\",\n                        onChange: currentStatusChangeHandler,\n                        onBlur: currentStatusBlurHandler,\n                        value: [enteredCurrentStatus === \"employee\" || \"employee\"],\n                        checked: currentStatus === 2,\n                        onClick: e => jobStatus(2)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 416,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"btn btn-outline-success\",\n                        htmlFor: \"employedCS\",\n                        children: \"Employed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 430,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 415,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"ms-2 \",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"radio\",\n                        className: \"btn-check\",\n                        name: \"status\",\n                        id: \"unemployedCS\",\n                        autoComplete: \"off\",\n                        onChange: currentStatusChangeHandler,\n                        onBlur: currentStatusBlurHandler,\n                        value: [enteredCurrentStatus === \"unemployed\" || \"unemployed\"],\n                        checked: currentStatus === 1,\n                        onClick: e => jobStatus(1)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 439,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"btn btn-outline-info\",\n                        htmlFor: \"unemployedCS\",\n                        children: \"Unemployed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 454,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 438,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"ms-2 \",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"radio\",\n                        className: \"btn-check\",\n                        name: \"status\",\n                        id: \"internCS\",\n                        autoComplete: \"off\",\n                        onChange: currentStatusChangeHandler,\n                        onBlur: currentStatusBlurHandler,\n                        value: [enteredCurrentStatus === \"intern\" || \"intern\"],\n                        checked: currentStatus === 3,\n                        onClick: e => jobStatus(3)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 463,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"btn btn-outline-warning\",\n                        htmlFor: \"internCS\",\n                        children: \"Intern\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 477,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 462,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 19\n                }, this), currentStatus > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    sm: 12,\n                    className: \"form-group mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"companyName\",\n                      className: \"required\",\n                      children: \"Company Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 490,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"form-control\",\n                      id: \"companyName\",\n                      placeholder: \"Company Name\",\n                      value: companyName,\n                      onChange: e => {\n                        setCompanyName(e.target.value);\n                        console.log(companyName);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 493,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 489,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: 12,\n                    className: \"form-group mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"currentPos\",\n                      className: \"required\",\n                      children: \"Current Position\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 507,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      size: \"sm\",\n                      type: \"text\",\n                      className: \"form-control\",\n                      id: \"currentPos\",\n                      placeholder: \"Current Position\",\n                      value: currentPosition,\n                      onChange: e => {\n                        setCurrentPosition(e.target.value);\n                        console.log(companyName);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 510,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 506,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                  className: \"my-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Heading, {\n                  content: \"Skills & Experience\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"inputskillexp\",\n                    children: \"Skills & Experience\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 529,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typeahead, {\n                    options: [],\n                    onChange: value => {\n                      setSkill(value);\n                      console.log(value);\n                    },\n                    onInputChange: value => {\n                      setSkill(value);\n                      console.log(value);\n                    },\n                    newSelectionPrefix: \"Add a new skill: \",\n                    allowNew: true,\n                    id: \"public-methods-example\",\n                    multiple: true,\n                    placeholder: \"Add a new skill:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 530,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"text-end my-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \" btn btn-primary\",\n                    disabled: !userBasicInfoFormIsValid,\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 549,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BasicInfo, \"zR5o5I0kj2clqUhlaVS0knUSNMs=\", false, function () {\n  return [useHistory, useInput, useInput, useInput, useInput];\n});\n\n_c = BasicInfo;\nexport default BasicInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicInfo\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/BasicInfo.jsx"],"names":["React","Fragment","useEffect","useState","useContext","Helmet","HelmetProvider","useHistory","Axios","AuthContext","useInput","Container","Row","Col","InputGroup","Form","BiMessageCheck","BiMinusCircle","DatePicker","Typeahead","toast","Heading","response","isNotEmpty","value","trim","BasicInfo","history","authState","universityList","setUniversityList","eduList","setEduList","get","process","env","REACT_APP_SERVER_DOMAIN","then","uni","data","rows","i","length","push","university_name","currentStatus","setCurrentStatus","jobStatus","genderInput","setGenderInput","enteredDob","isValid","enteredDobIsValid","hasError","dobInputHasError","valueChangeHandler","dobChangeHandler","inputBlurHandler","dobBlurHandler","reset","resetDobInput","enteredAbout","enteredAboutIsValid","aboutInputHasError","aboutChangeHandler","aboutBlurHandler","resetAboutInput","school","setSchool","enteredHighLevel","enteredHighLevelIsValid","highLevelInputHasError","highLevelChangeHandler","highLevelBlurHandler","resetHighLevelInput","startDate","setStartDate","Date","endDate","setEndDate","enteredCurrentStatus","enteredCurrentStatusIsValid","currentStatusInputHasError","currentStatusChangeHandler","currentStatusBlurHandler","resetCurrentStatusInput","userBasicInfoFormIsValid","companyName","setCompanyName","currentPosition","setCurrentPosition","skill","setSkill","userBasicInfoFormSubmissionHandler","event","preventDefault","post","id","headers","accessToken","localStorage","getItem","error","console","log","alert","dobClasses","aboutClasses","highLevelClasses","setAuthState","e","target","required","map","key","child_name","date"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState, useContext } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { useHistory } from \"react-router-dom\";\nimport Axios from \"axios\";\n\n//SESSION and INPUT\nimport { AuthContext } from \"../Helpers/AuthContext\";\nimport useInput from \"../Helpers/use-input\";\n\nimport { Container, Row, Col, InputGroup, Form } from \"react-bootstrap\";\nimport { BiMessageCheck, BiMinusCircle } from \"react-icons/bi\";\nimport DatePicker from \"react-datepicker\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\n//Toast\nimport { toast } from \"react-toastify\";\n\n//Components\nimport Heading from \"../Components/Heading\";\nimport { response } from \"../../../backend/routes/meta\";\n\n\n\n\nconst isNotEmpty = (value) => value.trim() !== \"\";\n\nfunction BasicInfo() {\n  let history = useHistory();\n  // const { setAuthState } = useContext(AuthContext);\n  const { authState } = useContext(AuthContext);\n\n\n  // const [authState, setAuthState] = useState({\n  //   id: \"\",\n  //   admin: \"\",\n  //   company: \"\",\n  //   status: false,\n  //   attempt: \"\",\n  // });\n\n  // useEffect(() => {\n  //   Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/auth/authenticate`, {\n  //     headers: {\n  //       accessToken: localStorage.getItem(\"accessToken\"),\n  //     },\n  //   }).then((response) => {\n  //     if (response.data.error) {\n  //       setAuthState({ ...authState, status: false });\n  //       history.push(\"/\");\n  //     } else {\n  //       setAuthState({\n  //         id: response.data.id,\n  //         admin: response.data.admin,\n  //         company: response.data.company,\n  //         attempt: response.data.attempt,\n  //         status: true,\n  //       });\n  //     }\n  //   });\n  // }, []);\n\n  const [universityList, setUniversityList] = useState([]);\n  const [eduList, setEduList] = useState([]);\n\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/university`).then((response) => {\n      const uni = response.data;\n      var rows = [];\n      for (var i = 0; i < uni.length; i++) {\n        rows.push(response.data[i].university_name);\n      }\n      setUniversityList(rows);\n    });\n  }, []);\n\n  //Education Level\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/eduLevel`).then((response) => {\n      setEduList(response.data);\n    });\n  }, []);\n\n  const [currentStatus, setCurrentStatus] = useState(0); // 0: no show, 1: show yes, 2: show no.\n  const jobStatus = (currentStatus) => {\n    setCurrentStatus(currentStatus);\n  };\n\n  //GENDER Input Check\n  const [genderInput, setGenderInput] = useState(\"\");\n\n  //DOB Input Check\n  const {\n    value: enteredDob,\n    isValid: enteredDobIsValid,\n    hasError: dobInputHasError,\n    valueChangeHandler: dobChangeHandler,\n    inputBlurHandler: dobBlurHandler,\n    reset: resetDobInput,\n  } = useInput(isNotEmpty);\n\n  //About Input Check\n  const {\n    value: enteredAbout,\n    isValid: enteredAboutIsValid,\n    hasError: aboutInputHasError,\n    valueChangeHandler: aboutChangeHandler,\n    inputBlurHandler: aboutBlurHandler,\n    reset: resetAboutInput,\n  } = useInput(isNotEmpty);\n\n  //School Input Check\n  const [school, setSchool] = useState(\"\");\n\n  //Highest Education Level Input Check\n  const {\n    value: enteredHighLevel,\n    isValid: enteredHighLevelIsValid,\n    hasError: highLevelInputHasError,\n    valueChangeHandler: highLevelChangeHandler,\n    inputBlurHandler: highLevelBlurHandler,\n    reset: resetHighLevelInput,\n  } = useInput(isNotEmpty);\n\n  //Start Year Input Check\n  const [startDate, setStartDate] = useState(new Date());\n\n  //End Year Input Check\n  const [endDate, setEndDate] = useState(new Date());\n\n  //Current Status Level Input Check\n  const {\n    value: enteredCurrentStatus,\n    isValid: enteredCurrentStatusIsValid,\n    hasError: currentStatusInputHasError,\n    valueChangeHandler: currentStatusChangeHandler,\n    inputBlurHandler: currentStatusBlurHandler,\n    reset: resetCurrentStatusInput,\n  } = useInput(isNotEmpty);\n  let userBasicInfoFormIsValid = false;\n\n  //Company Name Input Check\n  const [companyName, setCompanyName] = useState(\"\");\n\n  //Current Position Input Check\n  const [currentPosition, setCurrentPosition] = useState(\"\");\n\n  const [skill, setSkill] = useState([]);\n\n  if (\n    genderInput !== \"\" &&\n    enteredDobIsValid &&\n    enteredAboutIsValid &&\n    school !== \"\" &&\n    enteredHighLevelIsValid &&\n    enteredCurrentStatusIsValid\n  ) {\n    userBasicInfoFormIsValid = true;\n  }\n  const userBasicInfoFormSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (\n      genderInput === \"\" &&\n      !enteredDobIsValid &&\n      !enteredAboutIsValid &&\n      school === \"\" &&\n      enteredHighLevelIsValid &&\n      enteredCurrentStatusIsValid\n    ) {\n      return;\n    } else {\n      Axios.post(\n        `${process.env.REACT_APP_SERVER_DOMAIN}/basicinfo/user`, \n        {\n        // gender: genderInput,\n        // dob: enteredDob,\n        // about: enteredAbout,\n        // school: school,\n        // eduLevel: enteredHighLevel,\n        // startDate: startDate,\n        // endDate: endDate,\n        // currentStatus: enteredCurrentStatus,\n        // companyName: companyName,\n        // currentPosition: currentPosition,\n        // skill: skill,\n        id: authState.id\n      },\n      {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n      }\n      )\n      .then ((response) => {\n        if(response.data.error) {\n          console.log(response.data.error);\n        } else {\n          alert(response.data);\n        }\n      });\n\n    }\n    setGenderInput(\"\");\n    resetDobInput();\n    resetAboutInput();\n    setSchool(\"\");\n    resetHighLevelInput();\n    resetCurrentStatusInput();\n  };\n\n\n\n  const dobClasses = dobInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const aboutClasses = aboutInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const highLevelClasses = highLevelInputHasError\n    ? \"form-select form-select-sm is-invalid\"\n    : \"form-select form-select-sm\";\n\n  return (\n    <Fragment>\n      <AuthContext.Provider value={{ authState, setAuthState }}>\n        <HelmetProvider>\n          <Helmet>\n            <title> Basic Info | Zom - IN </title>\n          </Helmet>\n        </HelmetProvider>\n        <div id=\"basicInfo\" className=\"basicInfo\">\n          <Container className=\"my-5\">\n            <Row>\n              <Col sm={6} xs={12} className=\"mx-auto\">\n                {/* <h1>{authState.id}</h1> */}\n                <Heading content=\"Basic Info\" />\n                <Form onSubmit={userBasicInfoFormSubmissionHandler}>\n                  <Col sm={12} className=\"form-group mb-3\">\n                    <label htmlFor=\"inputgender\" className=\"required\">\n                      You are\n                    </label>\n                    <InputGroup>\n                      <div>\n                        <input\n                          type=\"radio\"\n                          className=\"btn-check\"\n                          name=\"gender\"\n                          required\n                          id=\"male\"\n                          autoComplete=\"off\"\n                          onChange={(e) => setGenderInput(e.target.value)}\n                          value={[genderInput === \"Male\" || \"Male\"]}\n                        />\n                        <label\n                          className=\"btn btn-outline-success\"\n                          htmlFor=\"male\"\n                        >\n                          Male\n                        </label>\n                      </div>\n\n                      <div className=\"ms-2 \">\n                        <input\n                          type=\"radio\"\n                          className=\"btn-check\"\n                          name=\"gender\"\n                          id=\"female\"\n                          autoComplete=\"off\"\n                          onChange={(e) => setGenderInput(e.target.value)}\n                          value={[genderInput === \"Female\" || \"Female\"]}\n                        />\n                        <label\n                          className=\"btn btn-outline-info\"\n                          htmlFor=\"female\"\n                        >\n                          Female\n                        </label>\n                      </div>\n                    </InputGroup>\n                  </Col>\n                  <Col sm={12} className=\"form-group mb-3\">\n                    <label htmlFor=\"inputdob\" className=\"required\">\n                      Date of Birth\n                    </label>\n                    <input\n                      type=\"date\"\n                      id=\"inputdob\"\n                      placeholder=\"Your Birthday\"\n                      className={dobClasses}\n                      onChange={dobChangeHandler}\n                      onBlur={dobBlurHandler}\n                      value={enteredDob}\n                    />\n                    {dobInputHasError && (\n                      <Form.Control.Feedback type=\"invalid\">\n                        Please select your birthdate.\n                      </Form.Control.Feedback>\n                    )}\n                  </Col>\n\n                  <Col sm={12} className=\"form-group mb-2\">\n                    <label htmlFor=\"inputabout\" className=\"required\">\n                      About\n                    </label>\n                    <Form.Control\n                      as=\"textarea\"\n                      placeholder=\"Tell us about you\"\n                      className={aboutClasses}\n                      onChange={aboutChangeHandler}\n                      onBlur={aboutBlurHandler}\n                      value={enteredAbout}\n                    />\n                    {aboutInputHasError && (\n                      <Form.Control.Feedback type=\"invalid\">\n                        Tell us about you.\n                      </Form.Control.Feedback>\n                    )}\n                  </Col>\n\n                  <hr className=\"my-4\" />\n                  <Heading content=\"Education\" />\n\n                  <Col sm={12} className=\"form-group mb-2\">\n                    <label htmlFor=\"inputSchool\" className=\"required\">\n                      School\n                    </label>\n\n                    <Typeahead\n                      inputProps={{ required: true }}\n                      id=\"valid-styles-example\"\n                      size=\"small\"\n                      placeholder=\"Choose a School\"\n                      options={universityList}\n                      onChange={(value) => {\n                        setSchool(value);\n                      }}\n                      onInputChange={(value) => {\n                        setSchool(value);\n                      }}\n                    />\n                  </Col>\n\n                  <Col sm={12} className=\"form-group mb-2\">\n                    <label htmlFor=\"eduLevel\" className=\"required\">\n                      Highest Education Level\n                    </label>\n                    <select\n                      defaultValue={\"DEFAULT\"}\n                      aria-label=\"Default select example\"\n                      className={highLevelClasses}\n                      onChange={highLevelChangeHandler}\n                      onBlur={highLevelBlurHandler}\n                    >\n                      <option value=\"\">Please Choose One</option>\n                      {eduList.map((eduList, key) => {\n                        const enteredHighLevel = eduList.child_name;\n                        return (\n                          <option\n                            key={enteredHighLevel}\n                            value={enteredHighLevel}\n                          >\n                            {enteredHighLevel}\n                          </option>\n                        );\n                      })}\n                    </select>\n\n                    {highLevelInputHasError && (\n                      <Form.Control.Feedback type=\"invalid\">\n                        Please choose your highest education Level.\n                      </Form.Control.Feedback>\n                    )}\n                  </Col>\n\n                  <Col sm={12} className=\"form-group mb-2\">\n                    <label htmlFor=\"eduYear\" className=\"required\">\n                      Year\n                    </label>\n                    <InputGroup className=\"mb-3\">\n                      <Col sm={4} xs={6}>\n                        <DatePicker\n                          required\n                          selected={startDate}\n                          onChange={(date) => setStartDate(date)}\n                          showYearPicker\n                          dateFormat=\"yyyy\"\n                          yearItemNumber={10}\n                          placeholderText=\"Year Start\"\n                        />\n                      </Col>\n                      <Col>\n                        <DatePicker\n                          selected={endDate}\n                          onChange={(date) => setEndDate(date)}\n                          showYearPicker\n                          dateFormat=\"yyyy\"\n                          yearItemNumber={10}\n                          placeholderText=\"Year End\"\n                        />\n                      </Col>\n                    </InputGroup>\n                  </Col>\n\n                  <hr className=\"my-4\" />\n\n                  <Heading content=\"Working Experience\" />\n                  <Col sm={12} className=\"form-group mb-2\">\n                    <label htmlFor=\"currentStatus\" className=\"required\">\n                      Current Status\n                    </label>\n\n                    <InputGroup className=\"mb-3\">\n                      <div>\n                        <input\n                          type=\"radio\"\n                          className=\"btn-check\"\n                          name=\"status\"\n                          id=\"employedCS\"\n                          autoComplete=\"off\"\n                          onChange={currentStatusChangeHandler}\n                          onBlur={currentStatusBlurHandler}\n                          value={[\n                            enteredCurrentStatus === \"employee\" || \"employee\",\n                          ]}\n                          checked={currentStatus === 2}\n                          onClick={(e) => jobStatus(2)}\n                        />\n                        <label\n                          className=\"btn btn-outline-success\"\n                          htmlFor=\"employedCS\"\n                        >\n                          Employed\n                        </label>\n                      </div>\n\n                      <div className=\"ms-2 \">\n                        <input\n                          type=\"radio\"\n                          className=\"btn-check\"\n                          name=\"status\"\n                          id=\"unemployedCS\"\n                          autoComplete=\"off\"\n                          onChange={currentStatusChangeHandler}\n                          onBlur={currentStatusBlurHandler}\n                          value={[\n                            enteredCurrentStatus === \"unemployed\" ||\n                              \"unemployed\",\n                          ]}\n                          checked={currentStatus === 1}\n                          onClick={(e) => jobStatus(1)}\n                        />\n                        <label\n                          className=\"btn btn-outline-info\"\n                          htmlFor=\"unemployedCS\"\n                        >\n                          Unemployed\n                        </label>\n                      </div>\n\n                      <div className=\"ms-2 \">\n                        <input\n                          type=\"radio\"\n                          className=\"btn-check\"\n                          name=\"status\"\n                          id=\"internCS\"\n                          autoComplete=\"off\"\n                          onChange={currentStatusChangeHandler}\n                          onBlur={currentStatusBlurHandler}\n                          value={[\n                            enteredCurrentStatus === \"intern\" || \"intern\",\n                          ]}\n                          checked={currentStatus === 3}\n                          onClick={(e) => jobStatus(3)}\n                        />\n                        <label\n                          className=\"btn btn-outline-warning\"\n                          htmlFor=\"internCS\"\n                        >\n                          Intern\n                        </label>\n                      </div>\n                    </InputGroup>\n                  </Col>\n\n                  {currentStatus > 1 && (\n                    <div>\n                      <Col sm={12} className=\"form-group mb-2\">\n                        <label htmlFor=\"companyName\" className=\"required\">\n                          Company Name\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"companyName\"\n                          placeholder=\"Company Name\"\n                          value={companyName}\n                          onChange={(e) => {\n                            setCompanyName(e.target.value);\n                            console.log(companyName);\n                          }}\n                        />\n                      </Col>\n\n                      <Col sm={12} className=\"form-group mb-2\">\n                        <label htmlFor=\"currentPos\" className=\"required\">\n                          Current Position\n                        </label>\n                        <input\n                          size=\"sm\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"currentPos\"\n                          placeholder=\"Current Position\"\n                          value={currentPosition}\n                          onChange={(e) => {\n                            setCurrentPosition(e.target.value);\n                            console.log(companyName);\n                          }}\n                        />\n                      </Col>\n                    </div>\n                  )}\n\n                  <hr className=\"my-4\" />\n                  <Heading content=\"Skills & Experience\" />\n                  <Col sm={12} className=\"form-group mb-2\">\n                    <label htmlFor=\"inputskillexp\">Skills & Experience</label>\n                    <Typeahead\n                      options={[]}\n                      onChange={(value) => {\n                        setSkill(value);\n                        console.log(value);\n                      }}\n                      onInputChange={(value) => {\n                        setSkill(value);\n                        console.log(value);\n                      }}\n                      newSelectionPrefix=\"Add a new skill: \"\n                      allowNew\n                      id=\"public-methods-example\"\n                      multiple\n                      placeholder=\"Add a new skill:\"\n                    />\n                  </Col>\n\n                  <Col className=\"text-end my-3\">\n                    <button\n                      type=\"submit\"\n                      className=\" btn btn-primary\"\n                      disabled={!userBasicInfoFormIsValid}\n                    >\n                      Submit\n                    </button>\n                  </Col>\n                </Form>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </AuthContext.Provider>\n    </Fragment>\n  );\n}\n\nexport default BasicInfo;\n"]},"metadata":{},"sourceType":"module"}