{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Dashboard/User/Profile/WorkExperience.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport Axios from \"axios\";\nimport useInput from \"../../../../Helpers/use-input\";\nimport { BiPlus, BiMinusCircle, BiPencil, BiTrash, BiMessageCheck, BiBriefcase, BiBuilding, BiCalendar } from \"react-icons/bi\";\nimport { Col, Row, Form } from \"react-bootstrap\";\nimport Heading from \"../../../Heading\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== \"\";\n\nfunction WorkExperience() {\n  _s();\n\n  const [workingExperience, setWorkingExperience] = useState([]);\n  const [jobType, setJobType] = useState([\"Full Time\", \"Internship\", \"Contract\", \"Part Time\"]);\n  const [stateList, setStateList] = useState([]);\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/dashboardUserProfile/workingExperience/`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        return toast.error( /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(BiMinusCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: response.data.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this));\n      } else {\n        setWorkingExperience(response.data);\n      }\n    });\n  }, []); //State List\n\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/stateLocation`).then(response => {\n      setStateList(response.data);\n    });\n  }); //Job Type Input\n\n  const {\n    value: enteredJobType,\n    isValid: enteredJobTypeIsValid,\n    hasError: jobTypeInputHasError,\n    valueChangeHandler: jobTypeChangeHandler,\n    inputBlurHandler: jobTypeBlurHandler,\n    reset: resetJobTypeInput\n  } = useInput(isNotEmpty); //Company Name Input\n\n  const {\n    value: enteredCompName,\n    isValid: enteredCompNameIsValid,\n    hasError: compNameInputHasError,\n    valueChangeHandler: compNameChangeHandler,\n    inputBlurHandler: compNameBlurHandler,\n    reset: resetCompNameInput\n  } = useInput(isNotEmpty); //Location Input\n\n  const {\n    value: enteredLocation,\n    isValid: enteredLocationIsValid,\n    hasError: locationInputHasError,\n    valueChangeHandler: locationChangeHandler,\n    inputBlurHandler: locationBlurHandler,\n    reset: resetlocationInput\n  } = useInput(isNotEmpty);\n  let workExpFormIsValid = false;\n\n  if (enteredJobTypeIsValid && enteredCompNameIsValid && enteredLocationIsValid // enteredPositionIsValid \n  // enteredIndustryIsValid\n  ) {\n      workExpFormIsValid = true;\n    }\n\n  const workExpFormSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredJobTypeIsValid && !enteredCompNameIsValid && !enteredLocationIsValid // !enteredPositionIsValid \n    // !enteredIndustryIsValid\n    ) {\n        return;\n      } else {\n      alert(enteredLocation); // Axios.post(\n      //   `${process.env.REACT_APP_SERVER_DOMAIN}/dashboardUserProfile/workingExperience`,\n      //   {\n      //     enteredJobType: enteredJobType,\n      //     // companyName: enteredCompName,\n      //     // location: enteredLocation,\n      //     // position: enteredPosition,\n      //     // industry: enteredIndustry,\n      //   },\n      //   {\n      //     headers: {\n      //       accessToken: localStorage.getItem(\"accessToken\"),\n      //     },\n      //   }\n      // ).then((response) => {\n      //   const newWorkExpData = response.data[1];\n      //   if (response.data[0].error) {\n      //     return toast.error(\n      //       <Fragment>\n      //         <BiMinusCircle /> <span>{response.data[0].error}</span>\n      //       </Fragment>\n      //     );\n      //   } else {\n      //     return [\n      //       toast.success(\n      //         <Fragment>\n      //           <BiMessageCheck /> <span>{response.data[0].success}</span>\n      //         </Fragment>\n      //       ),\n      //       setWorkingExperience([\n      //         {\n      //           // id: newWorkExpData.insertId,\n      //           // comp_name_user: enteredCompName,\n      //           // cur_position: enteredPosition,\n      //           // // industry: enteredIndustry,\n      //         },\n      //         ...workingExperience,\n      //       ]),\n      //     ];\n      //   }\n      // });\n    }\n\n    resetJobTypeInput();\n    resetCompNameInput();\n    resetlocationInput(); // resetPositionInput();\n    // resetIndustryInput();\n  };\n\n  const jobTypeClasses = jobTypeInputHasError ? \"form-select form-select-sm is-invalid\" : \"form-select form-select-sm\";\n  const compNameClasses = compNameInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const locationClasses = locationInputHasError ? \"form-select form-select-sm is-invalid\" : \"form-select form-select-sm\"; //DELETE\n\n  const deleteWorkExp = workID => {\n    Axios.delete(`${process.env.REACT_APP_SERVER_DOMAIN}/dashboardUserProfile/workingExperience/` + workID, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        return toast.error( /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(BiMinusCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: response.data.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this));\n      } else {\n        return [toast.success( /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(BiMessageCheck, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: response.data.success\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this)), setWorkingExperience(workingExperience.filter(workingExperienceDetails => {\n          /* eslint-disable-next-line */\n          return workingExperienceDetails.id != workID;\n        }))];\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"mx-auto border rounded p-2 my-2\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      sm: 12,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          sm: 10,\n          className: \"text-start\",\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            content: \"Work Experience\",\n            design: \"h5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2,\n          sm: 2,\n          className: \"text-end align-self-center\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            role: \"button\",\n            className: \"my-auto\",\n            children: /*#__PURE__*/_jsxDEV(BiPlus, {\n              className: \"icon\",\n              type: \"button\",\n              \"data-bs-toggle\": \"modal\",\n              \"data-bs-target\": \"#addWorkExp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal fade\",\n          id: \"addWorkExp\",\n          \"data-bs-backdrop\": \"static\",\n          \"data-bs-keyboard\": \"false\",\n          tabIndex: \"-1\",\n          \"aria-labelledby\": \"staticBackdropLabel\",\n          \"aria-hidden\": \"true\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-dialog modal-dialog-scrollable\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \" modal-header\",\n                children: [/*#__PURE__*/_jsxDEV(Heading, {\n                  content: \"Add Work Experience\",\n                  design: \"h4 my-auto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  id: \"closeButton\",\n                  className: \"btn-close\",\n                  \"data-bs-dismiss\": \"modal\",\n                  \"aria-label\": \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: workExpFormSubmissionHandler,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"modal-body\",\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    sm: 12,\n                    className: \"form-group mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"jobType\",\n                      className: \"required\",\n                      children: \"Job Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      placeholder: \"What's your job type?\",\n                      className: jobTypeClasses,\n                      onChange: jobTypeChangeHandler,\n                      onBlur: jobTypeBlurHandler,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Please Choose One\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 265,\n                        columnNumber: 25\n                      }, this), jobType.map(enteredJobType => {\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: enteredJobType,\n                          children: enteredJobType\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 268,\n                          columnNumber: 29\n                        }, this);\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 23\n                    }, this), jobTypeInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: \"Please choose your Education Level.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: 12,\n                    className: \"form-group mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"compName\",\n                      className: \"required\",\n                      children: \"Company Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: \"What's your company name?\",\n                      className: compNameClasses,\n                      onChange: compNameChangeHandler,\n                      onBlur: compNameBlurHandler,\n                      value: enteredCompName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 23\n                    }, this), compNameInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: \"Please enter your company name.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: 12,\n                    className: \"form-group mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"location\",\n                      className: \"required\",\n                      children: \"Location\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      placeholder: \"Where your company located?\",\n                      className: locationClasses,\n                      onChange: locationChangeHandler,\n                      onBlur: locationBlurHandler,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Please Choose One\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 308,\n                        columnNumber: 25\n                      }, this), stateList.map(stateList => {\n                        const enteredLocation = stateList.child_name;\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: enteredLocation,\n                          children: enteredLocation\n                        }, enteredLocation, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 312,\n                          columnNumber: 29\n                        }, this);\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 302,\n                      columnNumber: 23\n                    }, this), locationInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: \"Please choose your company's location.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"modal-footer\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-secondary\",\n                    \"data-bs-dismiss\": \"modal\",\n                    children: \"Close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn btn-primary\",\n                    \"data-bs-dismiss\": \"modal\",\n                    disabled: !workExpFormIsValid,\n                    children: \"Save Changes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      sm: 12,\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: workingExperience.map(workingExperienceDetails => {\n          const workID = workingExperienceDetails.id;\n          const jobType = workingExperienceDetails.employ_status;\n          const currentPosition = workingExperienceDetails.cur_position;\n          const compName = workingExperienceDetails.comp_name_user;\n          const industry = workingExperienceDetails.industry;\n          const experience = workingExperienceDetails.work_exp;\n          const startDate = new Date(workingExperienceDetails.start_date);\n          const endDate = new Date(workingExperienceDetails.end_date);\n          const startYear = startDate.toLocaleDateString(\"en-GB\", {\n            month: \"short\",\n            year: \"numeric\"\n          }).replace(/ /g, \" \");\n          const endYear = endDate.toLocaleDateString(\"en-GB\", {\n            month: \"short\",\n            year: \"numeric\"\n          }).replace(/ /g, \" \");\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  lg: 10,\n                  sm: 10,\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-start m-0 fw-bold fs-6 text-capitalize\",\n                    children: currentPosition\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  lg: 2,\n                  sm: 2,\n                  className: \"text-end\",\n                  children: [/*#__PURE__*/_jsxDEV(BiPencil, {\n                    className: \"icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(BiTrash, {\n                    className: \"icon\",\n                    type: \"button\",\n                    \"data-bs-toggle\": \"modal\",\n                    \"data-bs-target\": `#createWorkExpModal${workID}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"modal fade\",\n                  id: `createWorkExpModal${workID}`,\n                  \"data-bs-backdrop\": \"static\",\n                  \"data-bs-keyboard\": \"false\",\n                  tabIndex: \"-1\",\n                  \"aria-labelledby\": \"staticBackdropLabel\",\n                  \"aria-hidden\": \"true\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"modal-dialog modal-dialog-scrollable\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"modal-content\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \" modal-header\",\n                        children: [/*#__PURE__*/_jsxDEV(Heading, {\n                          content: \"Delete Work Experience\",\n                          design: \"h4 my-auto\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 409,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          type: \"button\",\n                          id: \"closeButton\",\n                          className: \"btn-close\",\n                          \"data-bs-dismiss\": \"modal\",\n                          \"aria-label\": \"Close\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 413,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 408,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"modal-body\",\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Are you sure want to delete \", currentPosition, \"?\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 422,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 421,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"modal-footer\",\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          type: \"button\",\n                          className: \"btn btn-secondary\",\n                          \"data-bs-dismiss\": \"modal\",\n                          children: \"Close\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 427,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          type: \"button\",\n                          className: \"btn btn-primary\",\n                          onClick: () => deleteWorkExp(workID),\n                          \"data-bs-dismiss\": \"modal\",\n                          children: \"Save Changes\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 434,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 426,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 407,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"m-0 text-start fs-7 text-capitalize\",\n                  children: [/*#__PURE__*/_jsxDEV(BiBriefcase, {\n                    className: \"icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 23\n                  }, this), jobType]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"m-0 text-start fs-7 text-capitalize\",\n                  children: [/*#__PURE__*/_jsxDEV(BiBuilding, {\n                    className: \"icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 454,\n                    columnNumber: 23\n                  }, this), \" \", compName, \" (\", industry, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"m-0 text-start fs-7\",\n                  children: [/*#__PURE__*/_jsxDEV(BiCalendar, {\n                    className: \"icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 458,\n                    columnNumber: 23\n                  }, this), \" \", startYear, \" - \", endYear]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"px-auto px-md-1 px-lg-4 fs-7 text-justify\",\n                  children: experience\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 19\n              }, this)]\n            }, workID, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WorkExperience, \"s8sV5S35xPgoEPYOmQw/lKYlnGE=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = WorkExperience;\nexport default WorkExperience;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkExperience\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Dashboard/User/Profile/WorkExperience.js"],"names":["React","useState","useEffect","Fragment","Axios","useInput","BiPlus","BiMinusCircle","BiPencil","BiTrash","BiMessageCheck","BiBriefcase","BiBuilding","BiCalendar","Col","Row","Form","Heading","toast","isNotEmpty","value","trim","WorkExperience","workingExperience","setWorkingExperience","jobType","setJobType","stateList","setStateList","get","process","env","REACT_APP_SERVER_DOMAIN","headers","accessToken","localStorage","getItem","then","response","data","error","enteredJobType","isValid","enteredJobTypeIsValid","hasError","jobTypeInputHasError","valueChangeHandler","jobTypeChangeHandler","inputBlurHandler","jobTypeBlurHandler","reset","resetJobTypeInput","enteredCompName","enteredCompNameIsValid","compNameInputHasError","compNameChangeHandler","compNameBlurHandler","resetCompNameInput","enteredLocation","enteredLocationIsValid","locationInputHasError","locationChangeHandler","locationBlurHandler","resetlocationInput","workExpFormIsValid","workExpFormSubmissionHandler","event","preventDefault","alert","jobTypeClasses","compNameClasses","locationClasses","deleteWorkExp","workID","delete","success","filter","workingExperienceDetails","id","map","child_name","employ_status","currentPosition","cur_position","compName","comp_name_user","industry","experience","work_exp","startDate","Date","start_date","endDate","end_date","startYear","toLocaleDateString","month","year","replace","endYear"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport Axios from \"axios\";\nimport useInput from \"../../../../Helpers/use-input\";\nimport {\n  BiPlus,\n  BiMinusCircle,\n  BiPencil,\n  BiTrash,\n  BiMessageCheck,\n  BiBriefcase,\n  BiBuilding,\n  BiCalendar,\n} from \"react-icons/bi\";\n\nimport { Col, Row, Form } from \"react-bootstrap\";\nimport Heading from \"../../../Heading\";\nimport { toast } from \"react-toastify\";\n\nconst isNotEmpty = (value) => value.trim() !== \"\";\n\nfunction WorkExperience() {\n  const [workingExperience, setWorkingExperience] = useState([]);\n  const [jobType, setJobType] = useState([\n    \"Full Time\", \"Internship\", \"Contract\", \"Part Time\"\n  ]);\n  const [stateList, setStateList] = useState([]);\n\n\n  useEffect(() => {\n    Axios.get(\n      `${process.env.REACT_APP_SERVER_DOMAIN}/dashboardUserProfile/workingExperience/`,\n      {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n      }\n    ).then((response) => {\n      if (response.data.error) {\n        return toast.error(\n          <Fragment>\n            <BiMinusCircle /> <span>{response.data.error}</span>\n          </Fragment>\n        );\n      } else {\n        setWorkingExperience(response.data);\n      }\n    });\n  }, []);\n\n    //State List\n    useEffect(() => {\n      Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/stateLocation`).then(\n        (response) => {\n          setStateList(response.data);\n        }\n      );\n    });\n\n    //Job Type Input\n    const {\n      value: enteredJobType,\n      isValid: enteredJobTypeIsValid,\n      hasError: jobTypeInputHasError,\n      valueChangeHandler: jobTypeChangeHandler,\n      inputBlurHandler: jobTypeBlurHandler,\n      reset: resetJobTypeInput,\n    } = useInput(isNotEmpty);\n\n      //Company Name Input\n  const {\n    value: enteredCompName,\n    isValid: enteredCompNameIsValid,\n    hasError: compNameInputHasError,\n    valueChangeHandler: compNameChangeHandler,\n    inputBlurHandler: compNameBlurHandler,\n    reset: resetCompNameInput,\n  } = useInput(isNotEmpty);\n\n    //Location Input\n    const {\n      value: enteredLocation,\n      isValid: enteredLocationIsValid,\n      hasError: locationInputHasError,\n      valueChangeHandler: locationChangeHandler,\n      inputBlurHandler: locationBlurHandler,\n      reset: resetlocationInput,\n    } = useInput(isNotEmpty);\n\n    let workExpFormIsValid = false;\n\n    if (\n      enteredJobTypeIsValid &&\n      enteredCompNameIsValid &&\n      enteredLocationIsValid \n      // enteredPositionIsValid \n      // enteredIndustryIsValid\n    ) {\n      workExpFormIsValid = true;\n    }\n\n    const workExpFormSubmissionHandler = (event) => {\n      event.preventDefault();\n  \n      if (\n        !enteredJobTypeIsValid &&\n        !enteredCompNameIsValid &&\n        !enteredLocationIsValid\n        // !enteredPositionIsValid \n        // !enteredIndustryIsValid\n      ) {\n        return;\n      } else {\n        alert(enteredLocation)\n        // Axios.post(\n        //   `${process.env.REACT_APP_SERVER_DOMAIN}/dashboardUserProfile/workingExperience`,\n        //   {\n        //     enteredJobType: enteredJobType,\n        //     // companyName: enteredCompName,\n        //     // location: enteredLocation,\n        //     // position: enteredPosition,\n        //     // industry: enteredIndustry,\n        //   },\n        //   {\n        //     headers: {\n        //       accessToken: localStorage.getItem(\"accessToken\"),\n        //     },\n        //   }\n        // ).then((response) => {\n        //   const newWorkExpData = response.data[1];\n  \n        //   if (response.data[0].error) {\n        //     return toast.error(\n        //       <Fragment>\n        //         <BiMinusCircle /> <span>{response.data[0].error}</span>\n        //       </Fragment>\n        //     );\n        //   } else {\n        //     return [\n        //       toast.success(\n        //         <Fragment>\n        //           <BiMessageCheck /> <span>{response.data[0].success}</span>\n        //         </Fragment>\n        //       ),\n        //       setWorkingExperience([\n        //         {\n        //           // id: newWorkExpData.insertId,\n        //           // comp_name_user: enteredCompName,\n        //           // cur_position: enteredPosition,\n        //           // // industry: enteredIndustry,\n        //         },\n        //         ...workingExperience,\n        //       ]),\n        //     ];\n        //   }\n        // });\n      }\n      resetJobTypeInput();\n      resetCompNameInput();\n      resetlocationInput();\n      // resetPositionInput();\n      // resetIndustryInput();\n    };\n\n    const jobTypeClasses = jobTypeInputHasError\n    ? \"form-select form-select-sm is-invalid\"\n    : \"form-select form-select-sm\";\n\n    const compNameClasses = compNameInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n    const locationClasses = locationInputHasError\n    ? \"form-select form-select-sm is-invalid\"\n    : \"form-select form-select-sm\";\n\n\n    //DELETE\n\n    const deleteWorkExp = (workID) => {\n      Axios.delete(\n        `${process.env.REACT_APP_SERVER_DOMAIN}/dashboardUserProfile/workingExperience/` +\n          workID,\n        {\n          headers: {\n            accessToken: localStorage.getItem(\"accessToken\"),\n          },\n        }\n      ).then((response) => {\n        if (response.data.error) {\n          return toast.error(\n            <Fragment>\n              <BiMinusCircle /> <span>{response.data.error}</span>\n            </Fragment>\n          );\n        } else {\n          return [\n            toast.success(\n              <Fragment>\n                <BiMessageCheck /> <span>{response.data.success}</span>\n              </Fragment>\n            ),\n            setWorkingExperience(\n              workingExperience.filter((workingExperienceDetails) => {\n                /* eslint-disable-next-line */\n                return workingExperienceDetails.id != workID;\n              })\n            ),\n          ];\n        }\n      });\n    };\n\n  return (\n    <Row className=\"mx-auto border rounded p-2 my-2\">\n      <Col sm={12}>\n        <Row>\n          <Col xs={10} sm={10} className=\"text-start\">\n            <Heading content=\"Work Experience\" design=\"h5\" />\n          </Col>\n          <Col xs={2} sm={2} className=\"text-end align-self-center\">\n            <p role=\"button\" className=\"my-auto\">\n              <BiPlus\n                className=\"icon\"\n                type=\"button\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#addWorkExp\"\n              />\n            </p>\n          </Col>\n          <div\n            className=\"modal fade\"\n            id=\"addWorkExp\"\n            data-bs-backdrop=\"static\"\n            data-bs-keyboard=\"false\"\n            tabIndex=\"-1\"\n            aria-labelledby=\"staticBackdropLabel\"\n            aria-hidden=\"true\"\n          >\n            <div className=\"modal-dialog modal-dialog-scrollable\">\n              <div className=\"modal-content\">\n                <div className=\" modal-header\">\n                  <Heading content=\"Add Work Experience\" design=\"h4 my-auto\" />\n                  <button\n                    type=\"button\"\n                    id=\"closeButton\"\n                    className=\"btn-close\"\n                    data-bs-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                  ></button>\n                </div>\n                <Form onSubmit={workExpFormSubmissionHandler}>\n                <div className=\"modal-body\">\n                \n               \n                <Col sm={12} className=\"form-group mb-2\">\n                      <label htmlFor=\"jobType\" className=\"required\">\n                        Job Type\n                      </label>\n                      <select\n                        placeholder=\"What's your job type?\"\n                        className={jobTypeClasses}\n                        onChange={jobTypeChangeHandler}\n                        onBlur={jobTypeBlurHandler}\n                      >\n                        <option value=\"\">Please Choose One</option>\n                        {jobType.map((enteredJobType) => {\n                          return (\n                            <option value={enteredJobType}>{enteredJobType}</option>\n                          )\n                        })}\n                      </select>\n                      {jobTypeInputHasError && (\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please choose your Education Level.\n                        </Form.Control.Feedback>\n                      )}\n                    </Col>\n\n                    <Col sm={12} className=\"form-group mb-2\">\n                      <label htmlFor=\"compName\" className=\"required\">\n                        Company Name\n                      </label>\n                      <input\n                        type=\"text\"\n                        placeholder=\"What's your company name?\"\n                        className={compNameClasses}\n                        onChange={compNameChangeHandler}\n                        onBlur={compNameBlurHandler}\n                        value={enteredCompName}\n                      />\n                      {compNameInputHasError && (\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please enter your company name.\n                        </Form.Control.Feedback>\n                      )}\n                    </Col>\n\n                    <Col sm={12} className=\"form-group mb-2\">\n                      <label htmlFor=\"location\" className=\"required\">\n                        Location\n                      </label>\n                      <select\n                        placeholder=\"Where your company located?\"\n                        className={locationClasses}\n                        onChange={locationChangeHandler}\n                        onBlur={locationBlurHandler}\n                      >\n                        <option>Please Choose One</option>\n                        {stateList.map((stateList) => {\n                          const enteredLocation = stateList.child_name;\n                          return (\n                            <option\n                              key={enteredLocation}\n                              value={enteredLocation}\n                            >\n                              {enteredLocation}\n                            </option>\n                          );\n                        })}\n                      </select>\n                      {locationInputHasError && (\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please choose your company's location.\n                        </Form.Control.Feedback>\n                      )}\n                    </Col>\n                  \n                </div>\n                <div className=\"modal-footer\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-secondary\"\n                    data-bs-dismiss=\"modal\"\n                  >\n                    Close\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary\"\n                    data-bs-dismiss=\"modal\"\n                    disabled={!workExpFormIsValid}\n                  >\n                    Save Changes\n                  </button>\n                  \n                </div>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </Row>\n      </Col>\n      <Col sm={12}>\n        <Col>\n        {workingExperience.map((workingExperienceDetails) => {\n            const workID = workingExperienceDetails.id;\n            const jobType = workingExperienceDetails.employ_status;\n            const currentPosition = workingExperienceDetails.cur_position;\n            const compName = workingExperienceDetails.comp_name_user;\n            const industry = workingExperienceDetails.industry;\n            const experience = workingExperienceDetails.work_exp;\n            const startDate = new Date(workingExperienceDetails.start_date);\n            const endDate = new Date(workingExperienceDetails.end_date);\n            const startYear = startDate\n              .toLocaleDateString(\"en-GB\", {\n                month: \"short\",\n                year: \"numeric\",\n              })\n              .replace(/ /g, \" \");\n\n            const endYear = endDate\n              .toLocaleDateString(\"en-GB\", {\n                month: \"short\",\n                year: \"numeric\",\n              })\n              .replace(/ /g, \" \");\n\n            return (\n              <>\n                <div key={workID}>\n                  <Row>\n                    <Col lg={10} sm={10}>\n                      <p className=\"text-start m-0 fw-bold fs-6 text-capitalize\">\n                        {currentPosition}\n                      </p>\n                    </Col>\n                    <Col lg={2} sm={2} className=\"text-end\">\n                      <BiPencil className=\"icon\" />\n                      <BiTrash\n                        className=\"icon\"\n                        type=\"button\"\n                        data-bs-toggle=\"modal\"\n                        data-bs-target={`#createWorkExpModal${workID}`}\n                      />\n                    </Col>\n\n                    <div\n                      className=\"modal fade\"\n                      id={`createWorkExpModal${workID}`}\n                      data-bs-backdrop=\"static\"\n                      data-bs-keyboard=\"false\"\n                      tabIndex=\"-1\"\n                      aria-labelledby=\"staticBackdropLabel\"\n                      aria-hidden=\"true\"\n                    >\n                      <div className=\"modal-dialog modal-dialog-scrollable\">\n                        <div className=\"modal-content\">\n                          <div className=\" modal-header\">\n                            <Heading\n                              content=\"Delete Work Experience\"\n                              design=\"h4 my-auto\"\n                            />\n                            <button\n                              type=\"button\"\n                              id=\"closeButton\"\n                              className=\"btn-close\"\n                              data-bs-dismiss=\"modal\"\n                              aria-label=\"Close\"\n                            ></button>\n                          </div>\n                          <div className=\"modal-body\">\n                            <p>\n                              Are you sure want to delete {currentPosition}?\n                            </p>\n                          </div>\n                          <div className=\"modal-footer\">\n                            <button\n                              type=\"button\"\n                              className=\"btn btn-secondary\"\n                              data-bs-dismiss=\"modal\"\n                            >\n                              Close\n                            </button>\n                            <button\n                              type=\"button\"\n                              className=\"btn btn-primary\"\n                              onClick={() => deleteWorkExp(workID)}\n                              data-bs-dismiss=\"modal\"\n                            >\n                              Save Changes\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </Row>\n\n                  <Row>\n                    <p className=\"m-0 text-start fs-7 text-capitalize\">\n                      <BiBriefcase className=\"icon\" />\n                      {jobType}\n                    </p>\n                    <p className=\"m-0 text-start fs-7 text-capitalize\">\n                      <BiBuilding className=\"icon\" /> {compName} ({industry})\n                    </p>\n\n                    <p className=\"m-0 text-start fs-7\">\n                      <BiCalendar className=\"icon\" /> {startYear} - {endYear}\n                    </p>\n                    <ul className=\"px-auto px-md-1 px-lg-4 fs-7 text-justify\">\n                      {experience}\n                    </ul>\n                  </Row>\n                </div>\n              </>\n            );\n          })}\n        </Col>\n      </Col>\n    </Row>\n  );\n}\n\nexport default WorkExperience;\n"]},"metadata":{},"sourceType":"module"}