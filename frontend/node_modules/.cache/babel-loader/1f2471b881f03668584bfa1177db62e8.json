{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Interview/Employer.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState, useContext } from \"react\";\nimport { AuthContext } from \"../../Helpers/AuthContext\";\nimport useInput from \"../../Helpers/use-input\";\nimport Axios from \"axios\";\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\nimport { BiTime, BiMinusCircle, BiMessageCheck } from \"react-icons/bi\";\nimport { toast } from \"react-toastify\";\nimport Reschedule from \"./User/Reschedule\";\nimport Ads from \"../Ads\";\nimport Profile from \"../Profile\";\nimport Name from \"../Name\";\nimport Heading from \"../Heading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== \"\";\n\nfunction Employer() {\n  _s();\n\n  const {\n    authState,\n    setAuthState\n  } = useContext(AuthContext);\n  const [interviewList, setInterviewList] = useState([]);\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/employerInterview/list`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      setInterviewList(response.data);\n      console.log(response.data);\n    });\n  }, []);\n  const {\n    value: enteredProposeTimeDate,\n    isValid: enteredProposeTimeDateIsValid,\n    hasError: proposeTimeDateInputHasError,\n    valueChangeHandler: proposeTimeDateChangeHandler,\n    inputBlurHandler: proposeTimeDateBlurHandler,\n    reset: resetProposeTimeDateInput\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredRemark,\n    isValid: enteredRemarkIsValid,\n    hasError: remarkInputHasError,\n    valueChangeHandler: remarkChangeHandler,\n    inputBlurHandler: remarkBlurHandler,\n    reset: resetRemarkInput\n  } = useInput(isNotEmpty);\n  let requestRescheduleFormIsValid = false;\n\n  if (enteredProposeTimeDateIsValid && enteredRemarkIsValid) {\n    requestRescheduleFormIsValid = true;\n  }\n\n  const requestRescheduleFormSubmissionHandler = event => {\n    event.preventDefault();\n    const candidateID = event.target[0].value;\n    const interviewID = event.target[1].value;\n    const grabID = event.target[2].value;\n    const interviewTime = event.target[3].value;\n\n    if (!enteredProposeTimeDate && !enteredRemark) {\n      return;\n    } else {\n      Axios.post(`${process.env.REACT_APP_SERVER_DOMAIN}/employerinterview/scheduleInterview`, {\n        timeDate: enteredProposeTimeDate,\n        intialInterview: interviewTime,\n        remarks: enteredRemark,\n        candidateID: candidateID,\n        interviewID: interviewID,\n        grabID: grabID\n      }, {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        if (response.data.error) {\n          return toast.error( /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(BiMinusCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: response.data.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this));\n        } else {\n          return toast.success( /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(BiMessageCheck, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: response.data.success\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this));\n        }\n      });\n    }\n\n    resetProposeTimeDateInput();\n    resetRemarkInput();\n  };\n\n  const proposeTimeDateClasses = proposeTimeDateInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const remarkClasses = remarkInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authState,\n      setAuthState\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mx-auto p-1 p-lg-5\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: 10,\n          md: 10,\n          sm: 12,\n          children: interviewList.map((interviewDetails, key) => {\n            const interviewID = interviewDetails.interviewID;\n            const candidateID = interviewDetails.candidate_id;\n            const grabID = interviewDetails.oppo_id;\n            const jobTitle = interviewDetails.job_title;\n            const interviewerName = interviewDetails.interviewerName;\n            const interviewRemarks = interviewDetails.interviewRemarks;\n            const interviewLink = interviewDetails.interviewVenueOrVideo;\n            const interviewingTime = new Date(interviewDetails.interviewTime);\n            const interviewTimeConvert = interviewingTime.toLocaleDateString(\"en-GB\", {\n              day: \"numeric\",\n              month: \"short\",\n              year: \"numeric\",\n              hour: \"2-digit\",\n              minute: \"2-digit\",\n              hour12: true\n            }).replace(/ /g, \" \");\n            const interviewInitial = interviewingTime.toISOString().replace(\".000Z\", \"\");\n            return /*#__PURE__*/_jsxDEV(Row, {\n              className: \"mx-auto my-3 p-3 border-bottom\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                sm: 2,\n                className: \"d-none d-md-none d-lg-block\",\n                children: /*#__PURE__*/_jsxDEV(Profile, {\n                  id: candidateID,\n                  design: \"rounded-circle\",\n                  width: \"100\",\n                  height: \"100\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                xs: 12,\n                sm: 8,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"m-0 fw-bold\",\n                    children: jobTitle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"m-0\",\n                    children: /*#__PURE__*/_jsxDEV(Name, {\n                      id: candidateID\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"m-0\",\n                    children: [\"Interviewer Name: \", interviewerName]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"m-0\",\n                    children: [/*#__PURE__*/_jsxDEV(BiTime, {\n                      className: \"icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 25\n                    }, this), interviewTimeConvert]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: interviewLink,\n                    target: \"_blank\",\n                    rel: \"noreferrer\",\n                    className: \"m-0 text-decoration-none\",\n                    children: interviewLink\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Remarks: \", interviewRemarks]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Reschedule, {\n                  interviewID: interviewID,\n                  interviewerName: interviewerName,\n                  interviewLink: interviewLink\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 2,\n                className: \"text-center mx-auto\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"warning\" // onClick={() => setRescheduleModal(true)}\n                  ,\n                  \"data-bs-toggle\": \"modal\",\n                  \"data-bs-target\": `#col-${interviewID}`,\n                  children: \"Re-Schedule\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modal fade\",\n                id: `col-${interviewID}`,\n                \"data-bs-backdrop\": \"static\",\n                \"data-bs-keyboard\": \"false\",\n                tabIndex: \"-1\",\n                \"aria-labelledby\": \"staticBackdropLabel\",\n                \"aria-hidden\": \"true\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"modal-dialog modal-dialog-scrollable\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"modal-content\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \" modal-header\",\n                      children: [/*#__PURE__*/_jsxDEV(Heading, {\n                        content: \"Request Interview Re-Schedule\",\n                        design: \"h5\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 197,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        id: \"closeButton\",\n                        className: \"btn-close\",\n                        \"data-bs-dismiss\": \"modal\",\n                        \"aria-label\": \"Close\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Form, {\n                      onSubmit: requestRescheduleFormSubmissionHandler,\n                      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"hidden\",\n                        name: \"employerID\",\n                        value: candidateID\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 210,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"hidden\",\n                        name: \"interviewID\",\n                        value: interviewID\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 215,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"hidden\",\n                        name: \"grabID\",\n                        value: grabID\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"modal-body\",\n                        children: [/*#__PURE__*/_jsxDEV(Col, {\n                          sm: 12,\n                          className: \"form-group mb-3\",\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            htmlFor: \"intialTimeAndDate\",\n                            className: \"required\",\n                            children: \"Initial Time and Date\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 227,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                            plaintext: \"true\",\n                            readOnly: true,\n                            defaultValue: interviewInitial,\n                            className: \"form-control-plaintext form-control-sm\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 233,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 226,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Col, {\n                          sm: 12,\n                          className: \"form-group mb-3\",\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            htmlFor: \"proposedTimeDate\",\n                            className: \"required\",\n                            children: \"Proposed Time and Date\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 242,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"datetime-local\",\n                            placeholder: \"Enter your Proposed Time and Date\",\n                            autoComplete: \"off\",\n                            className: proposeTimeDateClasses,\n                            onChange: proposeTimeDateChangeHandler,\n                            onBlur: proposeTimeDateBlurHandler,\n                            value: enteredProposeTimeDate\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 248,\n                            columnNumber: 31\n                          }, this), proposeTimeDateInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                            type: \"invalid\",\n                            children: \"Please fill in the proposed Time and Date.\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 259,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 241,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Col, {\n                          sm: 12,\n                          className: \"form-group mb-2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            htmlFor: \"inputremarks\",\n                            className: \"required\",\n                            children: \"Remarks\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 266,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                            as: \"textarea\",\n                            placeholder: \"Your reason for rescheduling\",\n                            className: remarkClasses,\n                            onChange: remarkChangeHandler,\n                            onBlur: remarkBlurHandler,\n                            value: enteredRemark\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 272,\n                            columnNumber: 31\n                          }, this), remarkInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                            type: \"invalid\",\n                            children: \"Tell us your reason for reschedling the interview.\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 281,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 265,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 225,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"modal-footer\",\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"warning\",\n                          type: \"submit\",\n                          disabled: !requestRescheduleFormIsValid,\n                          children: \"Re-Schedule\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 289,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 288,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 2,\n          md: 2,\n          sm: 12,\n          className: \"px-1 py-3 my-1 mx-auto\",\n          children: /*#__PURE__*/_jsxDEV(Ads, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Employer, \"Ps5+yK0bQiksE6fuWTR1Zon35o4=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = Employer;\nexport default Employer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employer\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Interview/Employer.js"],"names":["React","Fragment","useEffect","useState","useContext","AuthContext","useInput","Axios","Row","Col","Button","Form","BiTime","BiMinusCircle","BiMessageCheck","toast","Reschedule","Ads","Profile","Name","Heading","isNotEmpty","value","trim","Employer","authState","setAuthState","interviewList","setInterviewList","get","process","env","REACT_APP_SERVER_DOMAIN","headers","accessToken","localStorage","getItem","then","response","data","console","log","enteredProposeTimeDate","isValid","enteredProposeTimeDateIsValid","hasError","proposeTimeDateInputHasError","valueChangeHandler","proposeTimeDateChangeHandler","inputBlurHandler","proposeTimeDateBlurHandler","reset","resetProposeTimeDateInput","enteredRemark","enteredRemarkIsValid","remarkInputHasError","remarkChangeHandler","remarkBlurHandler","resetRemarkInput","requestRescheduleFormIsValid","requestRescheduleFormSubmissionHandler","event","preventDefault","candidateID","target","interviewID","grabID","interviewTime","post","timeDate","intialInterview","remarks","error","success","proposeTimeDateClasses","remarkClasses","map","interviewDetails","key","candidate_id","oppo_id","jobTitle","job_title","interviewerName","interviewRemarks","interviewLink","interviewVenueOrVideo","interviewingTime","Date","interviewTimeConvert","toLocaleDateString","day","month","year","hour","minute","hour12","replace","interviewInitial","toISOString"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState, useContext } from \"react\";\nimport { AuthContext } from \"../../Helpers/AuthContext\";\nimport useInput from \"../../Helpers/use-input\";\nimport Axios from \"axios\";\n\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\nimport { BiTime, BiMinusCircle, BiMessageCheck } from \"react-icons/bi\";\nimport { toast } from \"react-toastify\";\n\nimport Reschedule from \"./User/Reschedule\";\nimport Ads from \"../Ads\";\nimport Profile from \"../Profile\";\nimport Name from \"../Name\";\nimport Heading from \"../Heading\";\n\nconst isNotEmpty = (value) => value.trim() !== \"\";\n\n\nfunction Employer() {\n  const { authState, setAuthState } = useContext(AuthContext);\n  const [interviewList, setInterviewList] = useState([]);\n\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/employerInterview/list`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\"),\n      },\n    }).then((response) => {\n      setInterviewList(response.data);\n      console.log(response.data);\n    });\n  }, []);\n\n  const {\n    value: enteredProposeTimeDate,\n    isValid: enteredProposeTimeDateIsValid,\n    hasError: proposeTimeDateInputHasError,\n    valueChangeHandler: proposeTimeDateChangeHandler,\n    inputBlurHandler: proposeTimeDateBlurHandler,\n    reset: resetProposeTimeDateInput,\n  } = useInput(isNotEmpty);\n\n  const {\n    value: enteredRemark,\n    isValid: enteredRemarkIsValid,\n    hasError: remarkInputHasError,\n    valueChangeHandler: remarkChangeHandler,\n    inputBlurHandler: remarkBlurHandler,\n    reset: resetRemarkInput,\n  } = useInput(isNotEmpty);\n\n  let requestRescheduleFormIsValid = false;\n\n  if (enteredProposeTimeDateIsValid && enteredRemarkIsValid) {\n    requestRescheduleFormIsValid = true;\n  }\n\n  const requestRescheduleFormSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    const candidateID = event.target[0].value;\n    const interviewID = event.target[1].value;\n    const grabID = event.target[2].value;\n    const interviewTime = event.target[3].value;\n\n    if (!enteredProposeTimeDate && !enteredRemark) {\n      return;\n    } else {\n      Axios.post(\n        `${process.env.REACT_APP_SERVER_DOMAIN}/employerinterview/scheduleInterview`,\n        {\n          timeDate: enteredProposeTimeDate,\n          intialInterview: interviewTime,\n          remarks: enteredRemark,\n          candidateID: candidateID,\n          interviewID: interviewID,\n          grabID: grabID,\n        },\n        {\n          headers: {\n            accessToken: localStorage.getItem(\"accessToken\"),\n          },\n        }\n      ).then((response) => {\n        if (response.data.error) {\n          return toast.error(\n            <Fragment>\n              <BiMinusCircle /> <span>{response.data.error}</span>\n            </Fragment>\n          );\n        } else {\n          return toast.success(\n            <Fragment>\n              <BiMessageCheck /> <span>{response.data.success}</span>\n            </Fragment>\n          );\n        }\n      });\n    }\n    resetProposeTimeDateInput();\n    resetRemarkInput();\n  };\n\n  const proposeTimeDateClasses = proposeTimeDateInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const remarkClasses = remarkInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  return (\n    <AuthContext.Provider value={{ authState, setAuthState }}>\n      <div>\n        <Row className=\"mx-auto p-1 p-lg-5\">\n          <Col lg={10} md={10} sm={12}>\n          {interviewList.map((interviewDetails, key) => {\n              const interviewID = interviewDetails.interviewID;\n              const candidateID = interviewDetails.candidate_id;\n              const grabID = interviewDetails.oppo_id;\n              const jobTitle = interviewDetails.job_title;\n              const interviewerName = interviewDetails.interviewerName;\n              const interviewRemarks = interviewDetails.interviewRemarks;\n              const interviewLink = interviewDetails.interviewVenueOrVideo;\n              const interviewingTime = new Date(interviewDetails.interviewTime);\n              const interviewTimeConvert = interviewingTime\n                .toLocaleDateString(\"en-GB\", {\n                  day: \"numeric\",\n                  month: \"short\",\n                  year: \"numeric\",\n                  hour: \"2-digit\",\n                  minute: \"2-digit\",\n                  hour12: true,\n                })\n                .replace(/ /g, \" \");\n\n              const interviewInitial = interviewingTime\n                .toISOString()\n                .replace(\".000Z\", \"\");\n\n              return (\n                <Row className=\"mx-auto my-3 p-3 border-bottom\">\n                <Col sm={2} className=\"d-none d-md-none d-lg-block\">\n                    <Profile\n                      id={candidateID}\n                      design=\"rounded-circle\"\n                      width=\"100\"\n                      height=\"100\"\n                    />\n                  </Col>\n                  <Col xs={12} sm={8}>\n                    <div>\n                      <p className=\"m-0 fw-bold\">{jobTitle}</p>\n                      <p className=\"m-0\">\n                        <Name id={candidateID} />\n                      </p>\n                      <p className=\"m-0\">Interviewer Name: {interviewerName}</p>\n                      <p className=\"m-0\">\n                        <BiTime className=\"icon\" />\n                        {interviewTimeConvert}\n                      </p>\n                      <a\n                        href={interviewLink}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        className=\"m-0 text-decoration-none\"\n                      >\n                        {interviewLink}\n                      </a>\n                      <p>Remarks: {interviewRemarks}</p>\n                    </div>\n                    <Reschedule interviewID={interviewID} interviewerName={interviewerName} interviewLink={interviewLink}/>\n                  </Col>\n                  <Col sm={2} className=\"text-center mx-auto\">\n                    <Button\n                      variant=\"warning\"\n                      // onClick={() => setRescheduleModal(true)}\n                      data-bs-toggle=\"modal\"\n                      data-bs-target={`#col-${interviewID}`}\n                    >\n                      Re-Schedule\n                    </Button>\n                  </Col>\n\n                  <div\n                    className=\"modal fade\"\n                    id={`col-${interviewID}`}\n                    data-bs-backdrop=\"static\"\n                    data-bs-keyboard=\"false\"\n                    tabIndex=\"-1\"\n                    aria-labelledby=\"staticBackdropLabel\"\n                    aria-hidden=\"true\"\n                  >\n                    <div className=\"modal-dialog modal-dialog-scrollable\">\n                      <div className=\"modal-content\">\n                        <div className=\" modal-header\">\n                          <Heading\n                            content=\"Request Interview Re-Schedule\"\n                            design=\"h5\"\n                          />\n                          <button\n                            type=\"button\"\n                            id=\"closeButton\"\n                            className=\"btn-close\"\n                            data-bs-dismiss=\"modal\"\n                            aria-label=\"Close\"\n                          ></button>\n                        </div>\n                        <Form onSubmit={requestRescheduleFormSubmissionHandler}>\n                          <Form.Control\n                            type=\"hidden\"\n                            name=\"employerID\"\n                            value={candidateID}\n                          />\n                          <Form.Control\n                            type=\"hidden\"\n                            name=\"interviewID\"\n                            value={interviewID}\n                          />\n                          <Form.Control\n                            type=\"hidden\"\n                            name=\"grabID\"\n                            value={grabID}\n                          />\n                          <div className=\"modal-body\">\n                            <Col sm={12} className=\"form-group mb-3\">\n                              <label\n                                htmlFor=\"intialTimeAndDate\"\n                                className=\"required\"\n                              >\n                                Initial Time and Date\n                              </label>\n                              <input\n                                plaintext=\"true\"\n                                readOnly\n                                defaultValue={interviewInitial}\n                                className=\"form-control-plaintext form-control-sm\"\n                              />\n                            </Col>\n\n                            <Col sm={12} className=\"form-group mb-3\">\n                              <label\n                                htmlFor=\"proposedTimeDate\"\n                                className=\"required\"\n                              >\n                                Proposed Time and Date\n                              </label>\n                              <input\n                                type=\"datetime-local\"\n                                placeholder=\"Enter your Proposed Time and Date\"\n                                autoComplete=\"off\"\n                                className={proposeTimeDateClasses}\n                                onChange={proposeTimeDateChangeHandler}\n                                onBlur={proposeTimeDateBlurHandler}\n                                value={enteredProposeTimeDate}\n                              />\n\n                              {proposeTimeDateInputHasError && (\n                                <Form.Control.Feedback type=\"invalid\">\n                                  Please fill in the proposed Time and Date.\n                                </Form.Control.Feedback>\n                              )}\n                            </Col>\n\n                            <Col sm={12} className=\"form-group mb-2\">\n                              <label\n                                htmlFor=\"inputremarks\"\n                                className=\"required\"\n                              >\n                                Remarks\n                              </label>\n                              <Form.Control\n                                as=\"textarea\"\n                                placeholder=\"Your reason for rescheduling\"\n                                className={remarkClasses}\n                                onChange={remarkChangeHandler}\n                                onBlur={remarkBlurHandler}\n                                value={enteredRemark}\n                              />\n                              {remarkInputHasError && (\n                                <Form.Control.Feedback type=\"invalid\">\n                                  Tell us your reason for reschedling the\n                                  interview.\n                                </Form.Control.Feedback>\n                              )}\n                            </Col>\n                          </div>\n                          <div className=\"modal-footer\">\n                            <Button\n                              variant=\"warning\"\n                              type=\"submit\"\n                              disabled={!requestRescheduleFormIsValid}\n                            >\n                              Re-Schedule\n                            </Button>\n                          </div>\n                        </Form>\n                      </div>\n                    </div>\n                  </div>\n                </Row>\n          );\n            })}\n          </Col>\n          <Col lg={2} md={2} sm={12} className=\"px-1 py-3 my-1 mx-auto\">\n            <Ads />\n          </Col>\n        </Row>\n      </div>\n    </AuthContext.Provider>\n  );\n}\n\nexport default Employer;\n"]},"metadata":{},"sourceType":"module"}