{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/BasicInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState, useContext } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { useHistory } from \"react-router-dom\";\nimport Axios from \"axios\"; //SESSION and INPUT\n\nimport { AuthContext } from \"../Helpers/AuthContext\";\nimport useInput from \"../Helpers/use-input\";\nimport { Container, Row, Col, InputGroup, Form } from \"react-bootstrap\";\nimport { BiMessageCheck, BiMinusCircle } from \"react-icons/bi\";\nimport DatePicker from \"react-datepicker\";\nimport { Typeahead } from \"react-bootstrap-typeahead\"; //Toast\n// import { toast } from \"react-toastify\";\n//Components\n\nimport Heading from \"../Components/Heading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== \"\";\n\nfunction BasicInfo() {\n  _s();\n\n  let history = useHistory();\n  const {\n    authState\n  } = useContext(AuthContext);\n  const [universityList, setUniversityList] = useState([]);\n  const [eduList, setEduList] = useState([]);\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/university`).then(response => {\n      const uni = response.data;\n      var rows = [];\n\n      for (var i = 0; i < uni.length; i++) {\n        rows.push(response.data[i].university_name);\n      }\n\n      setUniversityList(rows);\n    });\n  }, []); //Education Level\n\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/eduLevel`).then(response => {\n      setEduList(response.data);\n    });\n  }, []);\n  const [currentStatus, setCurrentStatus] = useState(0); // 0: no show, 1: show yes, 2: show no.\n\n  const jobStatus = currentStatus => {\n    setCurrentStatus(currentStatus);\n  }; //GENDER Input Check\n\n\n  const [genderInput, setGenderInput] = useState(\"\"); //DOB Input Check\n\n  const {\n    value: enteredDob,\n    isValid: enteredDobIsValid,\n    hasError: dobInputHasError,\n    valueChangeHandler: dobChangeHandler,\n    inputBlurHandler: dobBlurHandler,\n    reset: resetDobInput\n  } = useInput(isNotEmpty); //About Input Check\n\n  const {\n    value: enteredAbout,\n    isValid: enteredAboutIsValid,\n    hasError: aboutInputHasError,\n    valueChangeHandler: aboutChangeHandler,\n    inputBlurHandler: aboutBlurHandler,\n    reset: resetAboutInput\n  } = useInput(isNotEmpty); //School Input Check\n\n  const [school, setSchool] = useState(\"\"); //Highest Education Level Input Check\n\n  const {\n    value: enteredHighLevel,\n    isValid: enteredHighLevelIsValid,\n    hasError: highLevelInputHasError,\n    valueChangeHandler: highLevelChangeHandler,\n    inputBlurHandler: highLevelBlurHandler,\n    reset: resetHighLevelInput\n  } = useInput(isNotEmpty); //Start Year Input Check\n\n  const [startDate, setStartDate] = useState(new Date()); //End Year Input Check\n\n  const [endDate, setEndDate] = useState(new Date()); //Current Status Level Input Check\n\n  const {\n    value: enteredCurrentStatus,\n    isValid: enteredCurrentStatusIsValid,\n    hasError: currentStatusInputHasError,\n    valueChangeHandler: currentStatusChangeHandler,\n    inputBlurHandler: currentStatusBlurHandler,\n    reset: resetCurrentStatusInput\n  } = useInput(isNotEmpty);\n  let userBasicInfoFormIsValid = false; //Company Name Input Check\n\n  const [companyName, setCompanyName] = useState(\"\"); //Current Position Input Check\n\n  const [currentPosition, setCurrentPosition] = useState(\"\");\n  const [skill, setSkill] = useState([]);\n\n  if (genderInput !== \"\" && enteredDobIsValid && enteredAboutIsValid && school !== \"\" && enteredHighLevelIsValid && enteredCurrentStatusIsValid) {\n    userBasicInfoFormIsValid = true;\n  }\n\n  const userBasicInfoFormSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (genderInput === \"\" && !enteredDobIsValid && !enteredAboutIsValid && school === \"\" && enteredHighLevelIsValid && enteredCurrentStatusIsValid) {\n      return;\n    } else {\n      Axios.post(`${process.env.REACT_APP_SERVER_DOMAIN}/basicinfo/user`, {\n        gender: genderInput,\n        dob: enteredDob,\n        about: enteredAbout,\n        // school: school,\n        // eduLevel: enteredHighLevel,\n        // startDate: startDate,\n        // endDate: endDate,\n        // currentStatus: enteredCurrentStatus,\n        // companyName: companyName,\n        // currentPosition: currentPosition,\n        // skill: skill,\n        id: authState.id\n      }, {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        if (response.data.error) {\n          console.log(response.data.error);\n        } else {\n          alert(response.data);\n        }\n      });\n    }\n\n    setGenderInput(\"\");\n    resetDobInput();\n    resetAboutInput();\n    setSchool(\"\");\n    resetHighLevelInput();\n    resetCurrentStatusInput();\n  };\n\n  const dobClasses = dobInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const aboutClasses = aboutInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const highLevelClasses = highLevelInputHasError ? \"form-select form-select-sm is-invalid\" : \"form-select form-select-sm\";\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HelmetProvider, {\n      children: /*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \" Basic Info | Zom - IN \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"basicInfo\",\n      className: \"basicInfo\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"my-5\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            sm: 6,\n            xs: 12,\n            className: \"mx-auto\",\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              content: \"Basic Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: userBasicInfoFormSubmissionHandler,\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                sm: 12,\n                className: \"form-group mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"inputgender\",\n                  className: \"required\",\n                  children: \"You are\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      className: \"btn-check\",\n                      name: \"gender\",\n                      required: true,\n                      id: \"male\",\n                      autoComplete: \"off\",\n                      onChange: e => setGenderInput(e.target.value),\n                      value: [genderInput === \"Male\" || \"Male\"]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"btn btn-outline-success\",\n                      htmlFor: \"male\",\n                      children: \"Male\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ms-2 \",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      className: \"btn-check\",\n                      name: \"gender\",\n                      id: \"female\",\n                      autoComplete: \"off\",\n                      onChange: e => setGenderInput(e.target.value),\n                      value: [genderInput === \"Female\" || \"Female\"]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"btn btn-outline-info\",\n                      htmlFor: \"female\",\n                      children: \"Female\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 12,\n                className: \"form-group mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"inputdob\",\n                  className: \"required\",\n                  children: \"Date of Birth\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  id: \"inputdob\",\n                  placeholder: \"Your Birthday\",\n                  className: dobClasses,\n                  onChange: dobChangeHandler,\n                  onBlur: dobBlurHandler,\n                  value: enteredDob\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 21\n                }, this), dobInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: \"Please select your birthdate.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 12,\n                className: \"form-group mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"inputabout\",\n                  className: \"required\",\n                  children: \"About\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  placeholder: \"Tell us about you\",\n                  className: aboutClasses,\n                  onChange: aboutChangeHandler,\n                  onBlur: aboutBlurHandler,\n                  value: enteredAbout\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 21\n                }, this), aboutInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: \"Tell us about you.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                className: \"my-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Heading, {\n                content: \"Education\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 12,\n                className: \"form-group mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"inputSchool\",\n                  className: \"required\",\n                  children: \"School\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typeahead, {\n                  inputProps: {\n                    required: true\n                  },\n                  id: \"valid-styles-example\",\n                  size: \"small\",\n                  placeholder: \"Choose a School\",\n                  options: universityList,\n                  onChange: value => {\n                    setSchool(value);\n                  },\n                  onInputChange: value => {\n                    setSchool(value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 12,\n                className: \"form-group mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"eduLevel\",\n                  className: \"required\",\n                  children: \"Highest Education Level\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  defaultValue: \"DEFAULT\",\n                  \"aria-label\": \"Default select example\",\n                  className: highLevelClasses,\n                  onChange: highLevelChangeHandler,\n                  onBlur: highLevelBlurHandler,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Please Choose One\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 23\n                  }, this), eduList.map((eduList, key) => {\n                    const enteredHighLevel = eduList.child_name;\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: enteredHighLevel,\n                      children: enteredHighLevel\n                    }, enteredHighLevel, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 326,\n                      columnNumber: 27\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 21\n                }, this), highLevelInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: \"Please choose your highest education Level.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 12,\n                className: \"form-group mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"eduYear\",\n                  className: \"required\",\n                  children: \"Year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    sm: 4,\n                    xs: 6,\n                    children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                      required: true,\n                      selected: startDate,\n                      onChange: date => setStartDate(date),\n                      showYearPicker: true,\n                      dateFormat: \"yyyy\",\n                      yearItemNumber: 10,\n                      placeholderText: \"Year Start\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 349,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                      selected: endDate,\n                      onChange: date => setEndDate(date),\n                      showYearPicker: true,\n                      dateFormat: \"yyyy\",\n                      yearItemNumber: 10,\n                      placeholderText: \"Year End\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 360,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                className: \"my-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Heading, {\n                content: \"Working Experience\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 12,\n                className: \"form-group mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"currentStatus\",\n                  className: \"required\",\n                  children: \"Current Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      className: \"btn-check\",\n                      name: \"status\",\n                      id: \"employedCS\",\n                      autoComplete: \"off\",\n                      onChange: currentStatusChangeHandler,\n                      onBlur: currentStatusBlurHandler,\n                      value: [enteredCurrentStatus === \"employee\" || \"employee\"],\n                      checked: currentStatus === 2,\n                      onClick: e => jobStatus(2)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 382,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"btn btn-outline-success\",\n                      htmlFor: \"employedCS\",\n                      children: \"Employed\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 396,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ms-2 \",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      className: \"btn-check\",\n                      name: \"status\",\n                      id: \"unemployedCS\",\n                      autoComplete: \"off\",\n                      onChange: currentStatusChangeHandler,\n                      onBlur: currentStatusBlurHandler,\n                      value: [enteredCurrentStatus === \"unemployed\" || \"unemployed\"],\n                      checked: currentStatus === 1,\n                      onClick: e => jobStatus(1)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 405,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"btn btn-outline-info\",\n                      htmlFor: \"unemployedCS\",\n                      children: \"Unemployed\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 420,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ms-2 \",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      className: \"btn-check\",\n                      name: \"status\",\n                      id: \"internCS\",\n                      autoComplete: \"off\",\n                      onChange: currentStatusChangeHandler,\n                      onBlur: currentStatusBlurHandler,\n                      value: [enteredCurrentStatus === \"intern\" || \"intern\"],\n                      checked: currentStatus === 3,\n                      onClick: e => jobStatus(3)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 429,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"btn btn-outline-warning\",\n                      htmlFor: \"internCS\",\n                      children: \"Intern\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 443,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this), currentStatus > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"companyName\",\n                    className: \"required\",\n                    children: \"Company Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    id: \"companyName\",\n                    placeholder: \"Company Name\",\n                    value: companyName,\n                    onChange: e => {\n                      setCompanyName(e.target.value);\n                      console.log(companyName);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"currentPos\",\n                    className: \"required\",\n                    children: \"Current Position\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 473,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    size: \"sm\",\n                    type: \"text\",\n                    className: \"form-control\",\n                    id: \"currentPos\",\n                    placeholder: \"Current Position\",\n                    value: currentPosition,\n                    onChange: e => {\n                      setCurrentPosition(e.target.value);\n                      console.log(companyName);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 476,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                className: \"my-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Heading, {\n                content: \"Skills & Experience\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 12,\n                className: \"form-group mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"inputskillexp\",\n                  children: \"Skills & Experience\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typeahead, {\n                  options: [],\n                  onChange: value => {\n                    setSkill(value);\n                    console.log(value);\n                  },\n                  onInputChange: value => {\n                    setSkill(value);\n                    console.log(value);\n                  },\n                  newSelectionPrefix: \"Add a new skill: \",\n                  allowNew: true,\n                  id: \"public-methods-example\",\n                  multiple: true,\n                  placeholder: \"Add a new skill:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                className: \"text-end my-3\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \" btn btn-primary\",\n                  disabled: !userBasicInfoFormIsValid,\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BasicInfo, \"zR5o5I0kj2clqUhlaVS0knUSNMs=\", false, function () {\n  return [useHistory, useInput, useInput, useInput, useInput];\n});\n\n_c = BasicInfo;\nexport default BasicInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicInfo\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/BasicInfo.jsx"],"names":["React","Fragment","useEffect","useState","useContext","Helmet","HelmetProvider","useHistory","Axios","AuthContext","useInput","Container","Row","Col","InputGroup","Form","BiMessageCheck","BiMinusCircle","DatePicker","Typeahead","Heading","isNotEmpty","value","trim","BasicInfo","history","authState","universityList","setUniversityList","eduList","setEduList","get","process","env","REACT_APP_SERVER_DOMAIN","then","response","uni","data","rows","i","length","push","university_name","currentStatus","setCurrentStatus","jobStatus","genderInput","setGenderInput","enteredDob","isValid","enteredDobIsValid","hasError","dobInputHasError","valueChangeHandler","dobChangeHandler","inputBlurHandler","dobBlurHandler","reset","resetDobInput","enteredAbout","enteredAboutIsValid","aboutInputHasError","aboutChangeHandler","aboutBlurHandler","resetAboutInput","school","setSchool","enteredHighLevel","enteredHighLevelIsValid","highLevelInputHasError","highLevelChangeHandler","highLevelBlurHandler","resetHighLevelInput","startDate","setStartDate","Date","endDate","setEndDate","enteredCurrentStatus","enteredCurrentStatusIsValid","currentStatusInputHasError","currentStatusChangeHandler","currentStatusBlurHandler","resetCurrentStatusInput","userBasicInfoFormIsValid","companyName","setCompanyName","currentPosition","setCurrentPosition","skill","setSkill","userBasicInfoFormSubmissionHandler","event","preventDefault","post","gender","dob","about","id","headers","accessToken","localStorage","getItem","error","console","log","alert","dobClasses","aboutClasses","highLevelClasses","e","target","required","map","key","child_name","date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,EAA+CC,UAA/C,QAAiE,OAAjE;AACA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,oBAAvC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,UAA9B,EAA0CC,IAA1C,QAAsD,iBAAtD;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,gBAA9C;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,SAAT,QAA0B,2BAA1B,C,CAEA;AACA;AAEA;;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAAN,OAAiB,EAA/C;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,MAAIC,OAAO,GAAGlB,UAAU,EAAxB;AACA,QAAM;AAAEmB,IAAAA;AAAF,MAAgBtB,UAAU,CAACK,WAAD,CAAhC;AAGA,QAAM,CAACkB,cAAD,EAAiBC,iBAAjB,IAAsCzB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAAC0B,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAACuB,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,uBAAwB,kBAAjD,EAAoEC,IAApE,CAA0EC,QAAD,IAAc;AACrF,YAAMC,GAAG,GAAGD,QAAQ,CAACE,IAArB;AACA,UAAIC,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACI,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnCD,QAAAA,IAAI,CAACG,IAAL,CAAUN,QAAQ,CAACE,IAAT,CAAcE,CAAd,EAAiBG,eAA3B;AACD;;AACDf,MAAAA,iBAAiB,CAACW,IAAD,CAAjB;AACD,KAPD;AAQD,GATQ,EASN,EATM,CAAT,CARmB,CAmBnB;;AACArC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAACuB,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,uBAAwB,gBAAjD,EAAkEC,IAAlE,CAAwEC,QAAD,IAAc;AACnFN,MAAAA,UAAU,CAACM,QAAQ,CAACE,IAAV,CAAV;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoC1C,QAAQ,CAAC,CAAD,CAAlD,CA1BmB,CA0BoC;;AACvD,QAAM2C,SAAS,GAAIF,aAAD,IAAmB;AACnCC,IAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACD,GAFD,CA3BmB,CA+BnB;;;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgC7C,QAAQ,CAAC,EAAD,CAA9C,CAhCmB,CAkCnB;;AACA,QAAM;AACJmB,IAAAA,KAAK,EAAE2B,UADH;AAEJC,IAAAA,OAAO,EAAEC,iBAFL;AAGJC,IAAAA,QAAQ,EAAEC,gBAHN;AAIJC,IAAAA,kBAAkB,EAAEC,gBAJhB;AAKJC,IAAAA,gBAAgB,EAAEC,cALd;AAMJC,IAAAA,KAAK,EAAEC;AANH,MAOFjD,QAAQ,CAACW,UAAD,CAPZ,CAnCmB,CA4CnB;;AACA,QAAM;AACJC,IAAAA,KAAK,EAAEsC,YADH;AAEJV,IAAAA,OAAO,EAAEW,mBAFL;AAGJT,IAAAA,QAAQ,EAAEU,kBAHN;AAIJR,IAAAA,kBAAkB,EAAES,kBAJhB;AAKJP,IAAAA,gBAAgB,EAAEQ,gBALd;AAMJN,IAAAA,KAAK,EAAEO;AANH,MAOFvD,QAAQ,CAACW,UAAD,CAPZ,CA7CmB,CAsDnB;;AACA,QAAM,CAAC6C,MAAD,EAASC,SAAT,IAAsBhE,QAAQ,CAAC,EAAD,CAApC,CAvDmB,CAyDnB;;AACA,QAAM;AACJmB,IAAAA,KAAK,EAAE8C,gBADH;AAEJlB,IAAAA,OAAO,EAAEmB,uBAFL;AAGJjB,IAAAA,QAAQ,EAAEkB,sBAHN;AAIJhB,IAAAA,kBAAkB,EAAEiB,sBAJhB;AAKJf,IAAAA,gBAAgB,EAAEgB,oBALd;AAMJd,IAAAA,KAAK,EAAEe;AANH,MAOF/D,QAAQ,CAACW,UAAD,CAPZ,CA1DmB,CAmEnB;;AACA,QAAM,CAACqD,SAAD,EAAYC,YAAZ,IAA4BxE,QAAQ,CAAC,IAAIyE,IAAJ,EAAD,CAA1C,CApEmB,CAsEnB;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB3E,QAAQ,CAAC,IAAIyE,IAAJ,EAAD,CAAtC,CAvEmB,CAyEnB;;AACA,QAAM;AACJtD,IAAAA,KAAK,EAAEyD,oBADH;AAEJ7B,IAAAA,OAAO,EAAE8B,2BAFL;AAGJ5B,IAAAA,QAAQ,EAAE6B,0BAHN;AAIJ3B,IAAAA,kBAAkB,EAAE4B,0BAJhB;AAKJ1B,IAAAA,gBAAgB,EAAE2B,wBALd;AAMJzB,IAAAA,KAAK,EAAE0B;AANH,MAOF1E,QAAQ,CAACW,UAAD,CAPZ;AAQA,MAAIgE,wBAAwB,GAAG,KAA/B,CAlFmB,CAoFnB;;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCpF,QAAQ,CAAC,EAAD,CAA9C,CArFmB,CAuFnB;;AACA,QAAM,CAACqF,eAAD,EAAkBC,kBAAlB,IAAwCtF,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAM,CAACuF,KAAD,EAAQC,QAAR,IAAoBxF,QAAQ,CAAC,EAAD,CAAlC;;AAEA,MACE4C,WAAW,KAAK,EAAhB,IACAI,iBADA,IAEAU,mBAFA,IAGAK,MAAM,KAAK,EAHX,IAIAG,uBAJA,IAKAW,2BANF,EAOE;AACAK,IAAAA,wBAAwB,GAAG,IAA3B;AACD;;AACD,QAAMO,kCAAkC,GAAIC,KAAD,IAAW;AACpDA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QACE/C,WAAW,KAAK,EAAhB,IACA,CAACI,iBADD,IAEA,CAACU,mBAFD,IAGAK,MAAM,KAAK,EAHX,IAIAG,uBAJA,IAKAW,2BANF,EAOE;AACA;AACD,KATD,MASO;AACLxE,MAAAA,KAAK,CAACuF,IAAN,CACG,GAAE/D,OAAO,CAACC,GAAR,CAAYC,uBAAwB,iBADzC,EAEE;AACA8D,QAAAA,MAAM,EAAEjD,WADR;AAEAkD,QAAAA,GAAG,EAAEhD,UAFL;AAGAiD,QAAAA,KAAK,EAAEtC,YAHP;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAuC,QAAAA,EAAE,EAAEzE,SAAS,CAACyE;AAZd,OAFF,EAgBA;AACEC,QAAAA,OAAO,EAAE;AACPC,UAAAA,WAAW,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AADN;AADX,OAhBA,EAsBCpE,IAtBD,CAsBQC,QAAD,IAAc;AACnB,YAAGA,QAAQ,CAACE,IAAT,CAAckE,KAAjB,EAAwB;AACtBC,UAAAA,OAAO,CAACC,GAAR,CAAYtE,QAAQ,CAACE,IAAT,CAAckE,KAA1B;AACD,SAFD,MAEO;AACLG,UAAAA,KAAK,CAACvE,QAAQ,CAACE,IAAV,CAAL;AACD;AACF,OA5BD;AA8BD;;AACDU,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAW,IAAAA,aAAa;AACbM,IAAAA,eAAe;AACfE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAM,IAAAA,mBAAmB;AACnBW,IAAAA,uBAAuB;AACxB,GAlDD;;AAsDA,QAAMwB,UAAU,GAAGvD,gBAAgB,GAC/B,yCAD+B,GAE/B,8BAFJ;AAIA,QAAMwD,YAAY,GAAG/C,kBAAkB,GACnC,yCADmC,GAEnC,8BAFJ;AAIA,QAAMgD,gBAAgB,GAAGxC,sBAAsB,GAC3C,uCAD2C,GAE3C,4BAFJ;AAIA,sBACE,QAAC,QAAD;AAAA,4BAEI,QAAC,cAAD;AAAA,6BACE,QAAC,MAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AAAK,MAAA,EAAE,EAAC,WAAR;AAAoB,MAAA,SAAS,EAAC,WAA9B;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,MAArB;AAAA,+BACE,QAAC,GAAD;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAY,YAAA,EAAE,EAAE,EAAhB;AAAoB,YAAA,SAAS,EAAC,SAA9B;AAAA,oCAEE,QAAC,OAAD;AAAS,cAAA,OAAO,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,IAAD;AAAM,cAAA,QAAQ,EAAEsB,kCAAhB;AAAA,sCACE,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,EAAT;AAAa,gBAAA,SAAS,EAAC,iBAAvB;AAAA,wCACE;AAAO,kBAAA,OAAO,EAAC,aAAf;AAA6B,kBAAA,SAAS,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,QAAC,UAAD;AAAA,0CACE;AAAA,4CACE;AACE,sBAAA,IAAI,EAAC,OADP;AAEE,sBAAA,SAAS,EAAC,WAFZ;AAGE,sBAAA,IAAI,EAAC,QAHP;AAIE,sBAAA,QAAQ,MAJV;AAKE,sBAAA,EAAE,EAAC,MALL;AAME,sBAAA,YAAY,EAAC,KANf;AAOE,sBAAA,QAAQ,EAAGmB,CAAD,IAAO/D,cAAc,CAAC+D,CAAC,CAACC,MAAF,CAAS1F,KAAV,CAPjC;AAQE,sBAAA,KAAK,EAAE,CAACyB,WAAW,KAAK,MAAhB,IAA0B,MAA3B;AART;AAAA;AAAA;AAAA;AAAA,4BADF,eAWE;AACE,sBAAA,SAAS,EAAC,yBADZ;AAEE,sBAAA,OAAO,EAAC,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAXF;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAoBE;AAAK,oBAAA,SAAS,EAAC,OAAf;AAAA,4CACE;AACE,sBAAA,IAAI,EAAC,OADP;AAEE,sBAAA,SAAS,EAAC,WAFZ;AAGE,sBAAA,IAAI,EAAC,QAHP;AAIE,sBAAA,EAAE,EAAC,QAJL;AAKE,sBAAA,YAAY,EAAC,KALf;AAME,sBAAA,QAAQ,EAAGgE,CAAD,IAAO/D,cAAc,CAAC+D,CAAC,CAACC,MAAF,CAAS1F,KAAV,CANjC;AAOE,sBAAA,KAAK,EAAE,CAACyB,WAAW,KAAK,QAAhB,IAA4B,QAA7B;AAPT;AAAA;AAAA;AAAA;AAAA,4BADF,eAUE;AACE,sBAAA,SAAS,EAAC,sBADZ;AAEE,sBAAA,OAAO,EAAC,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAVF;AAAA;AAAA;AAAA;AAAA;AAAA,0BApBF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eA4CE,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,EAAT;AAAa,gBAAA,SAAS,EAAC,iBAAvB;AAAA,wCACE;AAAO,kBAAA,OAAO,EAAC,UAAf;AAA0B,kBAAA,SAAS,EAAC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE;AACE,kBAAA,IAAI,EAAC,MADP;AAEE,kBAAA,EAAE,EAAC,UAFL;AAGE,kBAAA,WAAW,EAAC,eAHd;AAIE,kBAAA,SAAS,EAAE6D,UAJb;AAKE,kBAAA,QAAQ,EAAErD,gBALZ;AAME,kBAAA,MAAM,EAAEE,cANV;AAOE,kBAAA,KAAK,EAAER;AAPT;AAAA;AAAA;AAAA;AAAA,wBAJF,EAaGI,gBAAgB,iBACf,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,kBAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBA5CF,eAgEE,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,EAAT;AAAa,gBAAA,SAAS,EAAC,iBAAvB;AAAA,wCACE;AAAO,kBAAA,OAAO,EAAC,YAAf;AAA4B,kBAAA,SAAS,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,QAAC,IAAD,CAAM,OAAN;AACE,kBAAA,EAAE,EAAC,UADL;AAEE,kBAAA,WAAW,EAAC,mBAFd;AAGE,kBAAA,SAAS,EAAEwD,YAHb;AAIE,kBAAA,QAAQ,EAAE9C,kBAJZ;AAKE,kBAAA,MAAM,EAAEC,gBALV;AAME,kBAAA,KAAK,EAAEJ;AANT;AAAA;AAAA;AAAA;AAAA,wBAJF,EAYGE,kBAAkB,iBACjB,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,kBAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhEF,eAmFE;AAAI,gBAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,sBAnFF,eAoFE,QAAC,OAAD;AAAS,gBAAA,OAAO,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,sBApFF,eAsFE,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,EAAT;AAAa,gBAAA,SAAS,EAAC,iBAAvB;AAAA,wCACE;AAAO,kBAAA,OAAO,EAAC,aAAf;AAA6B,kBAAA,SAAS,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAKE,QAAC,SAAD;AACE,kBAAA,UAAU,EAAE;AAAEmD,oBAAAA,QAAQ,EAAE;AAAZ,mBADd;AAEE,kBAAA,EAAE,EAAC,sBAFL;AAGE,kBAAA,IAAI,EAAC,OAHP;AAIE,kBAAA,WAAW,EAAC,iBAJd;AAKE,kBAAA,OAAO,EAAEtF,cALX;AAME,kBAAA,QAAQ,EAAGL,KAAD,IAAW;AACnB6C,oBAAAA,SAAS,CAAC7C,KAAD,CAAT;AACD,mBARH;AASE,kBAAA,aAAa,EAAGA,KAAD,IAAW;AACxB6C,oBAAAA,SAAS,CAAC7C,KAAD,CAAT;AACD;AAXH;AAAA;AAAA;AAAA;AAAA,wBALF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAtFF,eA0GE,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,EAAT;AAAa,gBAAA,SAAS,EAAC,iBAAvB;AAAA,wCACE;AAAO,kBAAA,OAAO,EAAC,UAAf;AAA0B,kBAAA,SAAS,EAAC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE;AACE,kBAAA,YAAY,EAAE,SADhB;AAEE,gCAAW,wBAFb;AAGE,kBAAA,SAAS,EAAEwF,gBAHb;AAIE,kBAAA,QAAQ,EAAEvC,sBAJZ;AAKE,kBAAA,MAAM,EAAEC,oBALV;AAAA,0CAOE;AAAQ,oBAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPF,EAQG3C,OAAO,CAACqF,GAAR,CAAY,CAACrF,OAAD,EAAUsF,GAAV,KAAkB;AAC7B,0BAAM/C,gBAAgB,GAAGvC,OAAO,CAACuF,UAAjC;AACA,wCACE;AAEE,sBAAA,KAAK,EAAEhD,gBAFT;AAAA,gCAIGA;AAJH,uBACOA,gBADP;AAAA;AAAA;AAAA;AAAA,4BADF;AAQD,mBAVA,CARH;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,EAyBGE,sBAAsB,iBACrB,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,kBAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBA1GF,eA0IE,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,EAAT;AAAa,gBAAA,SAAS,EAAC,iBAAvB;AAAA,wCACE;AAAO,kBAAA,OAAO,EAAC,SAAf;AAAyB,kBAAA,SAAS,EAAC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,QAAC,UAAD;AAAY,kBAAA,SAAS,EAAC,MAAtB;AAAA,0CACE,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE,CAAT;AAAY,oBAAA,EAAE,EAAE,CAAhB;AAAA,2CACE,QAAC,UAAD;AACE,sBAAA,QAAQ,MADV;AAEE,sBAAA,QAAQ,EAAEI,SAFZ;AAGE,sBAAA,QAAQ,EAAG2C,IAAD,IAAU1C,YAAY,CAAC0C,IAAD,CAHlC;AAIE,sBAAA,cAAc,MAJhB;AAKE,sBAAA,UAAU,EAAC,MALb;AAME,sBAAA,cAAc,EAAE,EANlB;AAOE,sBAAA,eAAe,EAAC;AAPlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF,eAYE,QAAC,GAAD;AAAA,2CACE,QAAC,UAAD;AACE,sBAAA,QAAQ,EAAExC,OADZ;AAEE,sBAAA,QAAQ,EAAGwC,IAAD,IAAUvC,UAAU,CAACuC,IAAD,CAFhC;AAGE,sBAAA,cAAc,MAHhB;AAIE,sBAAA,UAAU,EAAC,MAJb;AAKE,sBAAA,cAAc,EAAE,EALlB;AAME,sBAAA,eAAe,EAAC;AANlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAZF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,sBA1IF,eAuKE;AAAI,gBAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,sBAvKF,eAyKE,QAAC,OAAD;AAAS,gBAAA,OAAO,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,sBAzKF,eA0KE,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,EAAT;AAAa,gBAAA,SAAS,EAAC,iBAAvB;AAAA,wCACE;AAAO,kBAAA,OAAO,EAAC,eAAf;AAA+B,kBAAA,SAAS,EAAC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAKE,QAAC,UAAD;AAAY,kBAAA,SAAS,EAAC,MAAtB;AAAA,0CACE;AAAA,4CACE;AACE,sBAAA,IAAI,EAAC,OADP;AAEE,sBAAA,SAAS,EAAC,WAFZ;AAGE,sBAAA,IAAI,EAAC,QAHP;AAIE,sBAAA,EAAE,EAAC,YAJL;AAKE,sBAAA,YAAY,EAAC,KALf;AAME,sBAAA,QAAQ,EAAEnC,0BANZ;AAOE,sBAAA,MAAM,EAAEC,wBAPV;AAQE,sBAAA,KAAK,EAAE,CACLJ,oBAAoB,KAAK,UAAzB,IAAuC,UADlC,CART;AAWE,sBAAA,OAAO,EAAEnC,aAAa,KAAK,CAX7B;AAYE,sBAAA,OAAO,EAAGmE,CAAD,IAAOjE,SAAS,CAAC,CAAD;AAZ3B;AAAA;AAAA;AAAA;AAAA,4BADF,eAeE;AACE,sBAAA,SAAS,EAAC,yBADZ;AAEE,sBAAA,OAAO,EAAC,YAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAfF;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAwBE;AAAK,oBAAA,SAAS,EAAC,OAAf;AAAA,4CACE;AACE,sBAAA,IAAI,EAAC,OADP;AAEE,sBAAA,SAAS,EAAC,WAFZ;AAGE,sBAAA,IAAI,EAAC,QAHP;AAIE,sBAAA,EAAE,EAAC,cAJL;AAKE,sBAAA,YAAY,EAAC,KALf;AAME,sBAAA,QAAQ,EAAEoC,0BANZ;AAOE,sBAAA,MAAM,EAAEC,wBAPV;AAQE,sBAAA,KAAK,EAAE,CACLJ,oBAAoB,KAAK,YAAzB,IACE,YAFG,CART;AAYE,sBAAA,OAAO,EAAEnC,aAAa,KAAK,CAZ7B;AAaE,sBAAA,OAAO,EAAGmE,CAAD,IAAOjE,SAAS,CAAC,CAAD;AAb3B;AAAA;AAAA;AAAA;AAAA,4BADF,eAgBE;AACE,sBAAA,SAAS,EAAC,sBADZ;AAEE,sBAAA,OAAO,EAAC,cAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAxBF,eAgDE;AAAK,oBAAA,SAAS,EAAC,OAAf;AAAA,4CACE;AACE,sBAAA,IAAI,EAAC,OADP;AAEE,sBAAA,SAAS,EAAC,WAFZ;AAGE,sBAAA,IAAI,EAAC,QAHP;AAIE,sBAAA,EAAE,EAAC,UAJL;AAKE,sBAAA,YAAY,EAAC,KALf;AAME,sBAAA,QAAQ,EAAEoC,0BANZ;AAOE,sBAAA,MAAM,EAAEC,wBAPV;AAQE,sBAAA,KAAK,EAAE,CACLJ,oBAAoB,KAAK,QAAzB,IAAqC,QADhC,CART;AAWE,sBAAA,OAAO,EAAEnC,aAAa,KAAK,CAX7B;AAYE,sBAAA,OAAO,EAAGmE,CAAD,IAAOjE,SAAS,CAAC,CAAD;AAZ3B;AAAA;AAAA;AAAA;AAAA,4BADF,eAeE;AACE,sBAAA,SAAS,EAAC,yBADZ;AAEE,sBAAA,OAAO,EAAC,UAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAfF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAhDF;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF;AAAA;AAAA;AAAA;AAAA;AAAA,sBA1KF,EAwPGF,aAAa,GAAG,CAAhB,iBACC;AAAA,wCACE,QAAC,GAAD;AAAK,kBAAA,EAAE,EAAE,EAAT;AAAa,kBAAA,SAAS,EAAC,iBAAvB;AAAA,0CACE;AAAO,oBAAA,OAAO,EAAC,aAAf;AAA6B,oBAAA,SAAS,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AACE,oBAAA,IAAI,EAAC,MADP;AAEE,oBAAA,SAAS,EAAC,cAFZ;AAGE,oBAAA,EAAE,EAAC,aAHL;AAIE,oBAAA,WAAW,EAAC,cAJd;AAKE,oBAAA,KAAK,EAAE0C,WALT;AAME,oBAAA,QAAQ,EAAGyB,CAAD,IAAO;AACfxB,sBAAAA,cAAc,CAACwB,CAAC,CAACC,MAAF,CAAS1F,KAAV,CAAd;AACAmF,sBAAAA,OAAO,CAACC,GAAR,CAAYpB,WAAZ;AACD;AATH;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAkBE,QAAC,GAAD;AAAK,kBAAA,EAAE,EAAE,EAAT;AAAa,kBAAA,SAAS,EAAC,iBAAvB;AAAA,0CACE;AAAO,oBAAA,OAAO,EAAC,YAAf;AAA4B,oBAAA,SAAS,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AACE,oBAAA,IAAI,EAAC,IADP;AAEE,oBAAA,IAAI,EAAC,MAFP;AAGE,oBAAA,SAAS,EAAC,cAHZ;AAIE,oBAAA,EAAE,EAAC,YAJL;AAKE,oBAAA,WAAW,EAAC,kBALd;AAME,oBAAA,KAAK,EAAEE,eANT;AAOE,oBAAA,QAAQ,EAAGuB,CAAD,IAAO;AACftB,sBAAAA,kBAAkB,CAACsB,CAAC,CAACC,MAAF,CAAS1F,KAAV,CAAlB;AACAmF,sBAAAA,OAAO,CAACC,GAAR,CAAYpB,WAAZ;AACD;AAVH;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAzPJ,eA+RE;AAAI,gBAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,sBA/RF,eAgSE,QAAC,OAAD;AAAS,gBAAA,OAAO,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,sBAhSF,eAiSE,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,EAAT;AAAa,gBAAA,SAAS,EAAC,iBAAvB;AAAA,wCACE;AAAO,kBAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,SAAD;AACE,kBAAA,OAAO,EAAE,EADX;AAEE,kBAAA,QAAQ,EAAGhE,KAAD,IAAW;AACnBqE,oBAAAA,QAAQ,CAACrE,KAAD,CAAR;AACAmF,oBAAAA,OAAO,CAACC,GAAR,CAAYpF,KAAZ;AACD,mBALH;AAME,kBAAA,aAAa,EAAGA,KAAD,IAAW;AACxBqE,oBAAAA,QAAQ,CAACrE,KAAD,CAAR;AACAmF,oBAAAA,OAAO,CAACC,GAAR,CAAYpF,KAAZ;AACD,mBATH;AAUE,kBAAA,kBAAkB,EAAC,mBAVrB;AAWE,kBAAA,QAAQ,MAXV;AAYE,kBAAA,EAAE,EAAC,wBAZL;AAaE,kBAAA,QAAQ,MAbV;AAcE,kBAAA,WAAW,EAAC;AAdd;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjSF,eAqTE,QAAC,GAAD;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,uCACE;AACE,kBAAA,IAAI,EAAC,QADP;AAEE,kBAAA,SAAS,EAAC,kBAFZ;AAGE,kBAAA,QAAQ,EAAE,CAAC+D,wBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBArTF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoVD;;GA5fQ7D,S;UACOjB,U,EAyCVG,Q,EAUAA,Q,EAaAA,Q,EAgBAA,Q;;;KAjFGc,S;AA8fT,eAAeA,SAAf","sourcesContent":["import React, { Fragment, useEffect, useState, useContext } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { useHistory } from \"react-router-dom\";\nimport Axios from \"axios\";\n\n//SESSION and INPUT\nimport { AuthContext } from \"../Helpers/AuthContext\";\nimport useInput from \"../Helpers/use-input\";\n\nimport { Container, Row, Col, InputGroup, Form } from \"react-bootstrap\";\nimport { BiMessageCheck, BiMinusCircle } from \"react-icons/bi\";\nimport DatePicker from \"react-datepicker\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\n//Toast\n// import { toast } from \"react-toastify\";\n\n//Components\nimport Heading from \"../Components/Heading\";\n\nconst isNotEmpty = (value) => value.trim() !== \"\";\n\nfunction BasicInfo() {\n  let history = useHistory();\n  const { authState } = useContext(AuthContext);\n\n\n  const [universityList, setUniversityList] = useState([]);\n  const [eduList, setEduList] = useState([]);\n\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/university`).then((response) => {\n      const uni = response.data;\n      var rows = [];\n      for (var i = 0; i < uni.length; i++) {\n        rows.push(response.data[i].university_name);\n      }\n      setUniversityList(rows);\n    });\n  }, []);\n\n  //Education Level\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/eduLevel`).then((response) => {\n      setEduList(response.data);\n    });\n  }, []);\n\n  const [currentStatus, setCurrentStatus] = useState(0); // 0: no show, 1: show yes, 2: show no.\n  const jobStatus = (currentStatus) => {\n    setCurrentStatus(currentStatus);\n  };\n\n  //GENDER Input Check\n  const [genderInput, setGenderInput] = useState(\"\");\n\n  //DOB Input Check\n  const {\n    value: enteredDob,\n    isValid: enteredDobIsValid,\n    hasError: dobInputHasError,\n    valueChangeHandler: dobChangeHandler,\n    inputBlurHandler: dobBlurHandler,\n    reset: resetDobInput,\n  } = useInput(isNotEmpty);\n\n  //About Input Check\n  const {\n    value: enteredAbout,\n    isValid: enteredAboutIsValid,\n    hasError: aboutInputHasError,\n    valueChangeHandler: aboutChangeHandler,\n    inputBlurHandler: aboutBlurHandler,\n    reset: resetAboutInput,\n  } = useInput(isNotEmpty);\n\n  //School Input Check\n  const [school, setSchool] = useState(\"\");\n\n  //Highest Education Level Input Check\n  const {\n    value: enteredHighLevel,\n    isValid: enteredHighLevelIsValid,\n    hasError: highLevelInputHasError,\n    valueChangeHandler: highLevelChangeHandler,\n    inputBlurHandler: highLevelBlurHandler,\n    reset: resetHighLevelInput,\n  } = useInput(isNotEmpty);\n\n  //Start Year Input Check\n  const [startDate, setStartDate] = useState(new Date());\n\n  //End Year Input Check\n  const [endDate, setEndDate] = useState(new Date());\n\n  //Current Status Level Input Check\n  const {\n    value: enteredCurrentStatus,\n    isValid: enteredCurrentStatusIsValid,\n    hasError: currentStatusInputHasError,\n    valueChangeHandler: currentStatusChangeHandler,\n    inputBlurHandler: currentStatusBlurHandler,\n    reset: resetCurrentStatusInput,\n  } = useInput(isNotEmpty);\n  let userBasicInfoFormIsValid = false;\n\n  //Company Name Input Check\n  const [companyName, setCompanyName] = useState(\"\");\n\n  //Current Position Input Check\n  const [currentPosition, setCurrentPosition] = useState(\"\");\n\n  const [skill, setSkill] = useState([]);\n\n  if (\n    genderInput !== \"\" &&\n    enteredDobIsValid &&\n    enteredAboutIsValid &&\n    school !== \"\" &&\n    enteredHighLevelIsValid &&\n    enteredCurrentStatusIsValid\n  ) {\n    userBasicInfoFormIsValid = true;\n  }\n  const userBasicInfoFormSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (\n      genderInput === \"\" &&\n      !enteredDobIsValid &&\n      !enteredAboutIsValid &&\n      school === \"\" &&\n      enteredHighLevelIsValid &&\n      enteredCurrentStatusIsValid\n    ) {\n      return;\n    } else {\n      Axios.post(\n        `${process.env.REACT_APP_SERVER_DOMAIN}/basicinfo/user`, \n        {\n        gender: genderInput,\n        dob: enteredDob,\n        about: enteredAbout,\n        // school: school,\n        // eduLevel: enteredHighLevel,\n        // startDate: startDate,\n        // endDate: endDate,\n        // currentStatus: enteredCurrentStatus,\n        // companyName: companyName,\n        // currentPosition: currentPosition,\n        // skill: skill,\n        id: authState.id\n      },\n      {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n      }\n      )\n      .then ((response) => {\n        if(response.data.error) {\n          console.log(response.data.error);\n        } else {\n          alert(response.data);\n        }\n      });\n\n    }\n    setGenderInput(\"\");\n    resetDobInput();\n    resetAboutInput();\n    setSchool(\"\");\n    resetHighLevelInput();\n    resetCurrentStatusInput();\n  };\n\n\n\n  const dobClasses = dobInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const aboutClasses = aboutInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const highLevelClasses = highLevelInputHasError\n    ? \"form-select form-select-sm is-invalid\"\n    : \"form-select form-select-sm\";\n\n  return (\n    <Fragment>\n      {/* <AuthContext.Provider value={{ authState, setAuthState }}> */}\n        <HelmetProvider>\n          <Helmet>\n            <title> Basic Info | Zom - IN </title>\n          </Helmet>\n        </HelmetProvider>\n        <div id=\"basicInfo\" className=\"basicInfo\">\n          <Container className=\"my-5\">\n            <Row>\n              <Col sm={6} xs={12} className=\"mx-auto\">\n                {/* <h1>{authState.id}</h1> */}\n                <Heading content=\"Basic Info\" />\n                <Form onSubmit={userBasicInfoFormSubmissionHandler}>\n                  <Col sm={12} className=\"form-group mb-3\">\n                    <label htmlFor=\"inputgender\" className=\"required\">\n                      You are\n                    </label>\n                    <InputGroup>\n                      <div>\n                        <input\n                          type=\"radio\"\n                          className=\"btn-check\"\n                          name=\"gender\"\n                          required\n                          id=\"male\"\n                          autoComplete=\"off\"\n                          onChange={(e) => setGenderInput(e.target.value)}\n                          value={[genderInput === \"Male\" || \"Male\"]}\n                        />\n                        <label\n                          className=\"btn btn-outline-success\"\n                          htmlFor=\"male\"\n                        >\n                          Male\n                        </label>\n                      </div>\n\n                      <div className=\"ms-2 \">\n                        <input\n                          type=\"radio\"\n                          className=\"btn-check\"\n                          name=\"gender\"\n                          id=\"female\"\n                          autoComplete=\"off\"\n                          onChange={(e) => setGenderInput(e.target.value)}\n                          value={[genderInput === \"Female\" || \"Female\"]}\n                        />\n                        <label\n                          className=\"btn btn-outline-info\"\n                          htmlFor=\"female\"\n                        >\n                          Female\n                        </label>\n                      </div>\n                    </InputGroup>\n                  </Col>\n                  <Col sm={12} className=\"form-group mb-3\">\n                    <label htmlFor=\"inputdob\" className=\"required\">\n                      Date of Birth\n                    </label>\n                    <input\n                      type=\"date\"\n                      id=\"inputdob\"\n                      placeholder=\"Your Birthday\"\n                      className={dobClasses}\n                      onChange={dobChangeHandler}\n                      onBlur={dobBlurHandler}\n                      value={enteredDob}\n                    />\n                    {dobInputHasError && (\n                      <Form.Control.Feedback type=\"invalid\">\n                        Please select your birthdate.\n                      </Form.Control.Feedback>\n                    )}\n                  </Col>\n\n                  <Col sm={12} className=\"form-group mb-2\">\n                    <label htmlFor=\"inputabout\" className=\"required\">\n                      About\n                    </label>\n                    <Form.Control\n                      as=\"textarea\"\n                      placeholder=\"Tell us about you\"\n                      className={aboutClasses}\n                      onChange={aboutChangeHandler}\n                      onBlur={aboutBlurHandler}\n                      value={enteredAbout}\n                    />\n                    {aboutInputHasError && (\n                      <Form.Control.Feedback type=\"invalid\">\n                        Tell us about you.\n                      </Form.Control.Feedback>\n                    )}\n                  </Col>\n\n                  <hr className=\"my-4\" />\n                  <Heading content=\"Education\" />\n\n                  <Col sm={12} className=\"form-group mb-2\">\n                    <label htmlFor=\"inputSchool\" className=\"required\">\n                      School\n                    </label>\n\n                    <Typeahead\n                      inputProps={{ required: true }}\n                      id=\"valid-styles-example\"\n                      size=\"small\"\n                      placeholder=\"Choose a School\"\n                      options={universityList}\n                      onChange={(value) => {\n                        setSchool(value);\n                      }}\n                      onInputChange={(value) => {\n                        setSchool(value);\n                      }}\n                    />\n                  </Col>\n\n                  <Col sm={12} className=\"form-group mb-2\">\n                    <label htmlFor=\"eduLevel\" className=\"required\">\n                      Highest Education Level\n                    </label>\n                    <select\n                      defaultValue={\"DEFAULT\"}\n                      aria-label=\"Default select example\"\n                      className={highLevelClasses}\n                      onChange={highLevelChangeHandler}\n                      onBlur={highLevelBlurHandler}\n                    >\n                      <option value=\"\">Please Choose One</option>\n                      {eduList.map((eduList, key) => {\n                        const enteredHighLevel = eduList.child_name;\n                        return (\n                          <option\n                            key={enteredHighLevel}\n                            value={enteredHighLevel}\n                          >\n                            {enteredHighLevel}\n                          </option>\n                        );\n                      })}\n                    </select>\n\n                    {highLevelInputHasError && (\n                      <Form.Control.Feedback type=\"invalid\">\n                        Please choose your highest education Level.\n                      </Form.Control.Feedback>\n                    )}\n                  </Col>\n\n                  <Col sm={12} className=\"form-group mb-2\">\n                    <label htmlFor=\"eduYear\" className=\"required\">\n                      Year\n                    </label>\n                    <InputGroup className=\"mb-3\">\n                      <Col sm={4} xs={6}>\n                        <DatePicker\n                          required\n                          selected={startDate}\n                          onChange={(date) => setStartDate(date)}\n                          showYearPicker\n                          dateFormat=\"yyyy\"\n                          yearItemNumber={10}\n                          placeholderText=\"Year Start\"\n                        />\n                      </Col>\n                      <Col>\n                        <DatePicker\n                          selected={endDate}\n                          onChange={(date) => setEndDate(date)}\n                          showYearPicker\n                          dateFormat=\"yyyy\"\n                          yearItemNumber={10}\n                          placeholderText=\"Year End\"\n                        />\n                      </Col>\n                    </InputGroup>\n                  </Col>\n\n                  <hr className=\"my-4\" />\n\n                  <Heading content=\"Working Experience\" />\n                  <Col sm={12} className=\"form-group mb-2\">\n                    <label htmlFor=\"currentStatus\" className=\"required\">\n                      Current Status\n                    </label>\n\n                    <InputGroup className=\"mb-3\">\n                      <div>\n                        <input\n                          type=\"radio\"\n                          className=\"btn-check\"\n                          name=\"status\"\n                          id=\"employedCS\"\n                          autoComplete=\"off\"\n                          onChange={currentStatusChangeHandler}\n                          onBlur={currentStatusBlurHandler}\n                          value={[\n                            enteredCurrentStatus === \"employee\" || \"employee\",\n                          ]}\n                          checked={currentStatus === 2}\n                          onClick={(e) => jobStatus(2)}\n                        />\n                        <label\n                          className=\"btn btn-outline-success\"\n                          htmlFor=\"employedCS\"\n                        >\n                          Employed\n                        </label>\n                      </div>\n\n                      <div className=\"ms-2 \">\n                        <input\n                          type=\"radio\"\n                          className=\"btn-check\"\n                          name=\"status\"\n                          id=\"unemployedCS\"\n                          autoComplete=\"off\"\n                          onChange={currentStatusChangeHandler}\n                          onBlur={currentStatusBlurHandler}\n                          value={[\n                            enteredCurrentStatus === \"unemployed\" ||\n                              \"unemployed\",\n                          ]}\n                          checked={currentStatus === 1}\n                          onClick={(e) => jobStatus(1)}\n                        />\n                        <label\n                          className=\"btn btn-outline-info\"\n                          htmlFor=\"unemployedCS\"\n                        >\n                          Unemployed\n                        </label>\n                      </div>\n\n                      <div className=\"ms-2 \">\n                        <input\n                          type=\"radio\"\n                          className=\"btn-check\"\n                          name=\"status\"\n                          id=\"internCS\"\n                          autoComplete=\"off\"\n                          onChange={currentStatusChangeHandler}\n                          onBlur={currentStatusBlurHandler}\n                          value={[\n                            enteredCurrentStatus === \"intern\" || \"intern\",\n                          ]}\n                          checked={currentStatus === 3}\n                          onClick={(e) => jobStatus(3)}\n                        />\n                        <label\n                          className=\"btn btn-outline-warning\"\n                          htmlFor=\"internCS\"\n                        >\n                          Intern\n                        </label>\n                      </div>\n                    </InputGroup>\n                  </Col>\n\n                  {currentStatus > 1 && (\n                    <div>\n                      <Col sm={12} className=\"form-group mb-2\">\n                        <label htmlFor=\"companyName\" className=\"required\">\n                          Company Name\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"companyName\"\n                          placeholder=\"Company Name\"\n                          value={companyName}\n                          onChange={(e) => {\n                            setCompanyName(e.target.value);\n                            console.log(companyName);\n                          }}\n                        />\n                      </Col>\n\n                      <Col sm={12} className=\"form-group mb-2\">\n                        <label htmlFor=\"currentPos\" className=\"required\">\n                          Current Position\n                        </label>\n                        <input\n                          size=\"sm\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"currentPos\"\n                          placeholder=\"Current Position\"\n                          value={currentPosition}\n                          onChange={(e) => {\n                            setCurrentPosition(e.target.value);\n                            console.log(companyName);\n                          }}\n                        />\n                      </Col>\n                    </div>\n                  )}\n\n                  <hr className=\"my-4\" />\n                  <Heading content=\"Skills & Experience\" />\n                  <Col sm={12} className=\"form-group mb-2\">\n                    <label htmlFor=\"inputskillexp\">Skills & Experience</label>\n                    <Typeahead\n                      options={[]}\n                      onChange={(value) => {\n                        setSkill(value);\n                        console.log(value);\n                      }}\n                      onInputChange={(value) => {\n                        setSkill(value);\n                        console.log(value);\n                      }}\n                      newSelectionPrefix=\"Add a new skill: \"\n                      allowNew\n                      id=\"public-methods-example\"\n                      multiple\n                      placeholder=\"Add a new skill:\"\n                    />\n                  </Col>\n\n                  <Col className=\"text-end my-3\">\n                    <button\n                      type=\"submit\"\n                      className=\" btn btn-primary\"\n                      disabled={!userBasicInfoFormIsValid}\n                    >\n                      Submit\n                    </button>\n                  </Col>\n                </Form>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      {/* </AuthContext.Provider> */}\n    </Fragment>\n  );\n}\n\nexport default BasicInfo;\n"]},"metadata":{},"sourceType":"module"}