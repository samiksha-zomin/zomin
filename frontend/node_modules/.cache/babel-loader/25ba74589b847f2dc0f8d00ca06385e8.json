{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/TestChild.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TestChild(props) {\n  const valueA = \"saaaa\";\n  const valueB = \"sss\";\n  const toggleEditing = props.updateParent;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is Child\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      // onClick={props.updateParent}\n      value: (valueA, valueB),\n      onClick: this.toggleEditing.bind(this, valueA, valueB),\n      children: \"Update Parent Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_c = TestChild;\nexport default TestChild;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestChild\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Components/TestChild.js"],"names":["React","TestChild","props","valueA","valueB","toggleEditing","updateParent","bind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAEtB,QAAMC,MAAM,GAAE,OAAd;AACA,QAAMC,MAAM,GAAG,KAAf;AAEA,QAAMC,aAAa,GAAGH,KAAK,CAACI,YAA5B;AACA,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AACI;AACA,MAAA,KAAK,GAAEH,MAAM,EAAEC,MAAV,CAFT;AAGI,MAAA,OAAO,EAAE,KAAKC,aAAL,CAAmBE,IAAnB,CAAwB,IAAxB,EAA8BJ,MAA9B,EAAsCC,MAAtC,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA,kBADJ;AAaH;;KAnBQH,S;AAqBT,eAAeA,SAAf","sourcesContent":["import React from 'react'\n\nfunction TestChild(props) {\n\n    const valueA =\"saaaa\";\n    const valueB = \"sss\";\n\n    const toggleEditing = props.updateParent;\n    return (\n        <>  \n        <hr></hr>\n        <h1>This is Child</h1>\n        <button\n            // onClick={props.updateParent}\n            value={valueA, valueB } \n            onClick={this.toggleEditing.bind(this, valueA, valueB)}\n        >\n            Update Parent Component\n        </button>\n    </>\n    )\n}\n\nexport default TestChild\n"]},"metadata":{},"sourceType":"module"}