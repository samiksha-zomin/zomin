{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/SignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Axios from \"axios\";\nimport useInput from \"../Hooks/use-input\"; //import Components\n\nimport Heading from \"../Components/Heading\";\nimport { Row, Col, Form, Button } from \"react-bootstrap\"; //Toast\n// import { toast } from \"react-toastify\";\n//Custom Style\n\nimport \"../Styles/signup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== \"\";\n\nconst isNotEmail = (value //eslint-disable-next-line\n) => /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value);\n\nconst isNotPassword = value => value.match(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,30}$/);\n\nconst isNotPhone = value => value.match(/^\\d{12}$/);\n\nfunction SignUp() {\n  _s();\n\n  //Toggle Sign up and Log In form\n  const [userIsRegistered, setLogin] = useState(false);\n\n  function toggleLogin() {\n    setLogin(!userIsRegistered);\n  } //LOGIN\n  // Email Input Check\n\n\n  const {\n    value: enteredLogEmail,\n    isValid: enteredLogEmailIsValid,\n    hasError: logEmailInputHasError,\n    valueChangeHandler: logEmailChangeHandler,\n    inputBlurHandler: logEmailBlurHandler,\n    reset: resetLogEmailInput\n  } = useInput(isNotEmail); // Password Input Check\n\n  const {\n    value: enteredLogPassword,\n    isValid: enteredLogPasswordIsValid,\n    hasError: logPasswordInputHasError,\n    valueChangeHandler: logPasswordChangeHandler,\n    inputBlurHandler: logPasswordBlurHandler,\n    reset: resetLogPasswordInput\n  } = useInput(isNotPassword);\n  let loginFormIsValid = false;\n\n  if (enteredLogEmailIsValid && enteredLogPasswordIsValid) {\n    loginFormIsValid = true;\n  }\n  /* eslint-disable-next-line */\n\n\n  const logInFormSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredLogEmailIsValid && !enteredLogPasswordIsValid) {\n      return;\n    } else {\n      Axios.post(\"http://localhost:3001/auth/login\", {\n        email: enteredLogEmail,\n        password: enteredLogPassword\n      }).then(response => {\n        alert(response.data);\n      });\n    }\n\n    console.log(\"submitting\");\n    resetLogEmailInput();\n    resetLogPasswordInput();\n  };\n\n  const logEmailClasses = logEmailInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const logPasswordClasses = logPasswordInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\"; //SIGN UP\n  // Full Name Check\n\n  const {\n    value: enteredSignUpFullName,\n    isValid: enteredSignUpFullNameIsValid,\n    hasError: signUpFullNameInputHasError,\n    valueChangeHandler: signUpFullNameChangeHandler,\n    inputBlurHandler: signUpFullNameBlurHandler,\n    reset: resetSignUpFullNameInput\n  } = useInput(isNotEmpty); // Email Input Check\n\n  const {\n    value: enteredSignUpEmail,\n    isValid: enteredSignUpEmailIsValid,\n    hasError: signUpEmailInputHasError,\n    valueChangeHandler: signUpEmailChangeHandler,\n    inputBlurHandler: signUpEmailBlurHandler,\n    reset: resetSignUpEmailInput\n  } = useInput(isNotEmail);\n  let signUpFormIsValid = false;\n\n  if (enteredSignUpFullName && enteredSignUpEmail) {\n    signUpFormIsValid = true;\n  }\n  /* eslint-disable-next-line */\n\n\n  const signUpFormSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredSignUpFullNameIsValid && enteredSignUpEmailIsValid) {\n      return;\n    } else {\n      Axios.post(\"http://localhost:3001/auth/signup\", {\n        fullName: enteredSignUpFullName\n      }).then(response => {\n        alert(response.data);\n      });\n    }\n\n    console.log(\"submitting\");\n    resetSignUpFullNameInput();\n  };\n\n  const signUpFullNameClasses = signUpFullNameInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const signUpEmailClasses = signUpEmailInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HelmetProvider, {\n      children: /*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \" Sign Up & Log In | Zom - IN \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"signUp\",\n      className: \"signUp\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 11,\n        md: 9,\n        className: \"mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            md: 6,\n            children: userIsRegistered ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(Heading, {\n                  content: \"Log In Now!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: logInFormSubmissionHandler,\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    id: \"inputLogEmail\",\n                    placeholder: \"Email Address\",\n                    className: logEmailClasses,\n                    onChange: logEmailChangeHandler,\n                    onBlur: logEmailBlurHandler,\n                    value: enteredLogEmail\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 23\n                  }, this), logEmailInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please enter a valid Email Address.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    id: \"inputLogPassword\",\n                    placeholder: \"Password\",\n                    className: logPasswordClasses,\n                    onChange: logPasswordChangeHandler,\n                    onBlur: logPasswordBlurHandler,\n                    value: enteredLogPassword\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 23\n                  }, this), logPasswordInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Must contain more than 8 characters which contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3 text-center mx-auto\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \" btn btn-primary\",\n                    disabled: !loginFormIsValid,\n                    children: \"Log In\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  className: \"text-start\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"link\",\n                    children: userIsRegistered ? \"Forget Password?\" : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \" text-end\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"link\",\n                    onClick: toggleLogin,\n                    children: [userIsRegistered ? \"Don't have an account?\" : \"Already have an account?\", \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(Heading, {\n                  content: \"Sign Up Now!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: signUpFormSubmissionHandler,\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"inputSignUpFullName\",\n                    placeholder: \"Full Name\",\n                    className: signUpFullNameClasses,\n                    onChange: signUpFullNameChangeHandler,\n                    onBlur: signUpFullNameBlurHandler,\n                    value: enteredSignUpFullName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 23\n                  }, this), signUpFullNameInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please enter your Full Name.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    id: \"inputSignUpEmail\",\n                    placeholder: \"Email Address\",\n                    className: signUpEmailClasses,\n                    onChange: signUpEmailChangeHandler,\n                    onBlur: signUpEmailBlurHandler,\n                    value: enteredSignUpEmail\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 23\n                  }, this), signUpEmailInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please enter a valid Email Address.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    id: \"inputSignUpEmail\",\n                    placeholder: \"Email Address\",\n                    className: signUpEmailClasses,\n                    onChange: signUpEmailChangeHandler,\n                    onBlur: signUpEmailBlurHandler,\n                    value: enteredSignUpEmail\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 23\n                  }, this), signUpEmailInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please enter a valid Email Address.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            md: 6,\n            className: \"divider\",\n            children: \"fvd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUp, \"+hFNizYXPNYCxG52TtE4ofARXqI=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/SignUp.jsx"],"names":["React","Fragment","useState","Helmet","HelmetProvider","Axios","useInput","Heading","Row","Col","Form","Button","isNotEmpty","value","trim","isNotEmail","test","isNotPassword","match","isNotPhone","SignUp","userIsRegistered","setLogin","toggleLogin","enteredLogEmail","isValid","enteredLogEmailIsValid","hasError","logEmailInputHasError","valueChangeHandler","logEmailChangeHandler","inputBlurHandler","logEmailBlurHandler","reset","resetLogEmailInput","enteredLogPassword","enteredLogPasswordIsValid","logPasswordInputHasError","logPasswordChangeHandler","logPasswordBlurHandler","resetLogPasswordInput","loginFormIsValid","logInFormSubmissionHandler","event","preventDefault","post","email","password","then","response","alert","data","console","log","logEmailClasses","logPasswordClasses","enteredSignUpFullName","enteredSignUpFullNameIsValid","signUpFullNameInputHasError","signUpFullNameChangeHandler","signUpFullNameBlurHandler","resetSignUpFullNameInput","enteredSignUpEmail","enteredSignUpEmailIsValid","signUpEmailInputHasError","signUpEmailChangeHandler","signUpEmailBlurHandler","resetSignUpEmailInput","signUpFormIsValid","signUpFormSubmissionHandler","fullName","signUpFullNameClasses","signUpEmailClasses"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\r\nimport Axios from \"axios\";\r\nimport useInput from \"../Hooks/use-input\";\r\n\r\n//import Components\r\nimport Heading from \"../Components/Heading\";\r\n\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\r\n\r\n//Toast\r\n// import { toast } from \"react-toastify\";\r\n\r\n//Custom Style\r\nimport \"../Styles/signup.css\";\r\n\r\nconst isNotEmpty = (value) => value.trim() !== \"\";\r\nconst isNotEmail = (\r\n  value //eslint-disable-next-line\r\n) => /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value);\r\n\r\nconst isNotPassword = (value) =>\r\n  value.match(\r\n    /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,30}$/\r\n  );\r\n\r\n  const isNotPhone = (value) =>\r\n  value.match(\r\n    /^\\d{12}$/\r\n  );\r\n\r\n  \r\n\r\nfunction SignUp() {\r\n  //Toggle Sign up and Log In form\r\n  const [userIsRegistered, setLogin] = useState(false);\r\n\r\n  function toggleLogin() {\r\n    setLogin(!userIsRegistered);\r\n  }\r\n\r\n  //LOGIN\r\n  // Email Input Check\r\n  const {\r\n    value: enteredLogEmail,\r\n    isValid: enteredLogEmailIsValid,\r\n    hasError: logEmailInputHasError,\r\n    valueChangeHandler: logEmailChangeHandler,\r\n    inputBlurHandler: logEmailBlurHandler,\r\n    reset: resetLogEmailInput,\r\n  } = useInput(isNotEmail);\r\n\r\n  // Password Input Check\r\n  const {\r\n    value: enteredLogPassword,\r\n    isValid: enteredLogPasswordIsValid,\r\n    hasError: logPasswordInputHasError,\r\n    valueChangeHandler: logPasswordChangeHandler,\r\n    inputBlurHandler: logPasswordBlurHandler,\r\n    reset: resetLogPasswordInput,\r\n  } = useInput(isNotPassword);\r\n\r\n  let loginFormIsValid = false;\r\n\r\n  if (enteredLogEmailIsValid && enteredLogPasswordIsValid) {\r\n    loginFormIsValid = true;\r\n  }\r\n  /* eslint-disable-next-line */\r\n  const logInFormSubmissionHandler = (event) => {\r\n    event.preventDefault();\r\n    if (!enteredLogEmailIsValid && !enteredLogPasswordIsValid) {\r\n      return;\r\n    } else {\r\n      Axios.post(\"http://localhost:3001/auth/login\", {\r\n        email: enteredLogEmail,\r\n        password: enteredLogPassword,\r\n      }).then((response) => {\r\n        alert(response.data);\r\n      });\r\n    }\r\n    console.log(\"submitting\");\r\n    resetLogEmailInput();\r\n    resetLogPasswordInput();\r\n  };\r\n\r\n  const logEmailClasses = logEmailInputHasError\r\n    ? \"form-control form-control-sm is-invalid\"\r\n    : \"form-control form-control-sm\";\r\n\r\n  const logPasswordClasses = logPasswordInputHasError\r\n    ? \"form-control form-control-sm is-invalid\"\r\n    : \"form-control form-control-sm\";\r\n\r\n\r\n\r\n\r\n\r\n  //SIGN UP\r\n  // Full Name Check\r\n  const {\r\n    value: enteredSignUpFullName,\r\n    isValid: enteredSignUpFullNameIsValid,\r\n    hasError: signUpFullNameInputHasError,\r\n    valueChangeHandler: signUpFullNameChangeHandler,\r\n    inputBlurHandler: signUpFullNameBlurHandler,\r\n    reset: resetSignUpFullNameInput,\r\n  } = useInput(isNotEmpty);\r\n\r\n   // Email Input Check\r\n   const {\r\n    value: enteredSignUpEmail,\r\n    isValid: enteredSignUpEmailIsValid,\r\n    hasError: signUpEmailInputHasError,\r\n    valueChangeHandler: signUpEmailChangeHandler,\r\n    inputBlurHandler: signUpEmailBlurHandler,\r\n    reset: resetSignUpEmailInput,\r\n  } = useInput(isNotEmail);\r\n\r\n  let signUpFormIsValid = false;\r\n\r\n  if (enteredSignUpFullName && enteredSignUpEmail) {\r\n    signUpFormIsValid = true;\r\n  }\r\n  /* eslint-disable-next-line */\r\n  const signUpFormSubmissionHandler = (event) => {\r\n    event.preventDefault();\r\n    if (!enteredSignUpFullNameIsValid && enteredSignUpEmailIsValid) {\r\n      return;\r\n    } else {\r\n      Axios.post(\"http://localhost:3001/auth/signup\", {\r\n        fullName: enteredSignUpFullName,\r\n      }).then((response) => {\r\n        alert(response.data);\r\n      });\r\n    }\r\n    console.log(\"submitting\");\r\n    resetSignUpFullNameInput();\r\n  };\r\n\r\n  const signUpFullNameClasses = signUpFullNameInputHasError\r\n    ? \"form-control form-control-sm is-invalid\"\r\n    : \"form-control form-control-sm\";\r\n\r\n    const signUpEmailClasses = signUpEmailInputHasError\r\n    ? \"form-control form-control-sm is-invalid\"\r\n    : \"form-control form-control-sm\";\r\n\r\n  return (\r\n    <Fragment>\r\n      <HelmetProvider>\r\n        <Helmet>\r\n          <title> Sign Up & Log In | Zom - IN </title>\r\n        </Helmet>\r\n      </HelmetProvider>\r\n      <div id=\"signUp\" className=\"signUp\">\r\n        <Col sm={11} md={9} className=\"mx-auto\">\r\n          <Row>\r\n            <Col sm={12} md={6}>\r\n              {userIsRegistered ? (\r\n                <>\r\n                  <div className=\"text-center\">\r\n                    <Heading content=\"Log In Now!\" />\r\n                  </div>\r\n                  <Form onSubmit={logInFormSubmissionHandler}>\r\n                    <Col sm={12} className=\"mb-3\">\r\n                      <input\r\n                        type=\"email\"\r\n                        id=\"inputLogEmail\"\r\n                        placeholder=\"Email Address\"\r\n                        className={logEmailClasses}\r\n                        onChange={logEmailChangeHandler}\r\n                        onBlur={logEmailBlurHandler}\r\n                        value={enteredLogEmail}\r\n                      />\r\n                      {logEmailInputHasError && (\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                          Please enter a valid Email Address.\r\n                        </Form.Control.Feedback>\r\n                      )}\r\n                    </Col>\r\n\r\n                    <Col sm={12} className=\"mb-3\">\r\n                      <input\r\n                        type=\"password\"\r\n                        id=\"inputLogPassword\"\r\n                        placeholder=\"Password\"\r\n                        className={logPasswordClasses}\r\n                        onChange={logPasswordChangeHandler}\r\n                        onBlur={logPasswordBlurHandler}\r\n                        value={enteredLogPassword}\r\n                      />\r\n                      {logPasswordInputHasError && (\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                          Must contain more than 8 characters which contain at\r\n                          least one lowercase letter, one uppercase letter, one\r\n                          numeric digit, and one special character.\r\n                        </Form.Control.Feedback>\r\n                      )}\r\n                    </Col>\r\n\r\n                    <Col sm={12} className=\"mb-3 text-center mx-auto\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\" btn btn-primary\"\r\n                        disabled={!loginFormIsValid}\r\n                      >\r\n                        Log In\r\n                      </button>\r\n                    </Col>\r\n                  </Form>\r\n                  <Row>\r\n                    <Col className=\"text-start\">\r\n                      <Button variant=\"link\">\r\n                        {userIsRegistered ? \"Forget Password?\" : null}\r\n                      </Button>\r\n                    </Col>\r\n                    <Col className=\" text-end\">\r\n                      <Button variant=\"link\" onClick={toggleLogin}>\r\n                        {userIsRegistered\r\n                          ? \"Don't have an account?\"\r\n                          : \"Already have an account?\"}{\" \"}\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div className=\"text-center\">\r\n                    <Heading content=\"Sign Up Now!\" />\r\n                  </div>\r\n                  <Form onSubmit={signUpFormSubmissionHandler}>\r\n                    <Col sm={12} className=\"mb-3\">\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"inputSignUpFullName\"\r\n                        placeholder=\"Full Name\"\r\n                        className={signUpFullNameClasses}\r\n                        onChange={signUpFullNameChangeHandler}\r\n                        onBlur={signUpFullNameBlurHandler}\r\n                        value={enteredSignUpFullName}\r\n                      />\r\n                      {signUpFullNameInputHasError && (\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                          Please enter your Full Name.\r\n                        </Form.Control.Feedback>\r\n                      )}\r\n                    </Col>\r\n\r\n                    <Col sm={12} className=\"mb-3\">\r\n                      <input\r\n                        type=\"email\"\r\n                        id=\"inputSignUpEmail\"\r\n                        placeholder=\"Email Address\"\r\n                        className={signUpEmailClasses}\r\n                        onChange={signUpEmailChangeHandler}\r\n                        onBlur={signUpEmailBlurHandler}\r\n                        value={enteredSignUpEmail}\r\n                      />\r\n                      {signUpEmailInputHasError && (\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                          Please enter a valid Email Address.\r\n                        </Form.Control.Feedback>\r\n                      )}\r\n                    </Col>\r\n                    <Col sm={12} className=\"mb-3\">\r\n                      <input\r\n                        type=\"email\"\r\n                        id=\"inputSignUpEmail\"\r\n                        placeholder=\"Email Address\"\r\n                        className={signUpEmailClasses}\r\n                        onChange={signUpEmailChangeHandler}\r\n                        onBlur={signUpEmailBlurHandler}\r\n                        value={enteredSignUpEmail}\r\n                      />\r\n                      {signUpEmailInputHasError && (\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                          Please enter a valid Email Address.\r\n                        </Form.Control.Feedback>\r\n                      )}\r\n                    </Col>\r\n                  </Form>\r\n                </>\r\n              )}\r\n            </Col>\r\n            <Col sm={12} md={6} className=\"divider\">\r\n              fvd\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}