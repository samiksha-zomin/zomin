{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/BasicInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { useHistory } from \"react-router-dom\";\nimport Axios from \"axios\"; //SESSION and INPUT\n\nimport { AuthContext } from \"../Helpers/AuthContext\";\nimport useInput from \"../Helpers/use-input\";\nimport { Container, Row, Col, InputGroup, Form } from \"react-bootstrap\";\nimport { Typeahead } from \"react-bootstrap-typeahead\"; //Components\n\nimport Heading from \"../Components/Heading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== \"\";\n\nfunction BasicInfo() {\n  _s();\n\n  let history = useHistory();\n  const [authState, setAuthState] = useState({\n    id: \"\",\n    admin: \"\",\n    company: \"\",\n    status: false,\n    attempt: \"\"\n  });\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/auth/authenticate\", {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        setAuthState({ ...authState,\n          status: false\n        });\n        history.push(\"/\");\n      } else {\n        setAuthState({\n          id: response.data.id,\n          admin: response.data.admin,\n          company: response.data.company,\n          attempt: response.data.attempt,\n          status: true\n        });\n      }\n    });\n  }, []); //GENDER Input Check\n\n  const [genderInput, setGenderInput] = useState(\"\"); //DOB Input Check\n\n  const {\n    value: enteredDob,\n    isValid: enteredDobIsValid,\n    hasError: dobInputHasError,\n    valueChangeHandler: dobChangeHandler,\n    inputBlurHandler: dobBlurHandler,\n    reset: resetDobInput\n  } = useInput(isNotEmpty); //About Input Check\n\n  const {\n    value: enteredAbout,\n    isValid: enteredAboutIsValid,\n    hasError: aboutInputHasError,\n    valueChangeHandler: aboutChangeHandler,\n    inputBlurHandler: aboutBlurHandler,\n    reset: resetAboutInput\n  } = useInput(isNotEmpty);\n  let userBasicInfoFormIsValid = false;\n\n  if (genderInput !== \"\" && enteredDobIsValid && enteredAboutIsValid) {\n    userBasicInfoFormIsValid = true;\n  }\n\n  const userBasicInfoFormSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (genderInput === \"\" && !enteredDobIsValid && !enteredAboutIsValid) {\n      return;\n    } else {\n      alert(enteredDob);\n    }\n\n    setGenderInput(\"\");\n    resetDobInput();\n    resetAboutInput();\n  };\n\n  const dobClasses = dobInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const aboutClasses = aboutInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        authState,\n        setAuthState\n      },\n      children: [/*#__PURE__*/_jsxDEV(HelmetProvider, {\n        children: /*#__PURE__*/_jsxDEV(Helmet, {\n          children: /*#__PURE__*/_jsxDEV(\"title\", {\n            children: \" Basic Info | Zom - IN \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"basicInfo\",\n        className: \"basicInfo\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          className: \"my-5\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: 6,\n              xs: 12,\n              className: \"mx-auto\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: authState.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Heading, {\n                content: \"Basic Info\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: userBasicInfoFormSubmissionHandler,\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"inputgender\",\n                    className: \"required\",\n                    children: \"You are\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"radio\",\n                        className: \"btn-check\",\n                        name: \"gender\",\n                        required: true,\n                        id: \"male\",\n                        autoComplete: \"off\",\n                        onChange: e => setGenderInput(e.target.value),\n                        value: [genderInput === \"Male\" || \"Male\"]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 121,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"btn btn-outline-success\",\n                        htmlFor: \"male\",\n                        children: \"Male\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 131,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"ms-2 \",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"radio\",\n                        className: \"btn-check\",\n                        name: \"gender\",\n                        id: \"female\",\n                        autoComplete: \"off\",\n                        onChange: e => setGenderInput(e.target.value),\n                        value: [genderInput === \"Female\" || \"Female\"]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 140,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"btn btn-outline-info\",\n                        htmlFor: \"female\",\n                        children: \"Female\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 149,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"inputdob\",\n                    className: \"required\",\n                    children: \"Date of Birth\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"date\",\n                    id: \"inputdob\",\n                    placeholder: \"Your Birthday\",\n                    className: dobClasses,\n                    onChange: dobChangeHandler,\n                    onBlur: dobBlurHandler,\n                    value: enteredDob\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 21\n                  }, this), dobInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please select your birthdate.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"inputabout\",\n                    className: \"required\",\n                    children: \"About\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    placeholder: \"Tell us about you\",\n                    className: aboutClasses,\n                    onChange: aboutChangeHandler,\n                    onBlur: aboutBlurHandler,\n                    value: enteredAbout\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 21\n                  }, this), aboutInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Tell us about you.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                  className: \"my-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Heading, {\n                  content: \"Education\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"form-group mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"inputSchool\",\n                    className: \"required\",\n                    children: \"School\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Typeahead, {\n                      allowNew: true,\n                      caseSensitive: true,\n                      ignoreDiacritics: false,\n                      className: \"is-valid labelkey-example\",\n                      id: \"valid-styles-example\",\n                      isValid: true,\n                      labelKey: option => `${option.university_name}`,\n                      options: universityList\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"valid\",\n                      children: \"Feedback\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"text-end my-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \" btn btn-primary\",\n                    disabled: !userBasicInfoFormIsValid,\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BasicInfo, \"xB05EiHUtrAmZnMNBlMu6U0OVLA=\", false, function () {\n  return [useHistory, useInput, useInput];\n});\n\n_c = BasicInfo;\nexport default BasicInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicInfo\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/BasicInfo.jsx"],"names":["React","Fragment","useEffect","useState","Helmet","HelmetProvider","useHistory","Axios","AuthContext","useInput","Container","Row","Col","InputGroup","Form","Typeahead","Heading","isNotEmpty","value","trim","BasicInfo","history","authState","setAuthState","id","admin","company","status","attempt","get","headers","accessToken","localStorage","getItem","then","response","data","error","push","genderInput","setGenderInput","enteredDob","isValid","enteredDobIsValid","hasError","dobInputHasError","valueChangeHandler","dobChangeHandler","inputBlurHandler","dobBlurHandler","reset","resetDobInput","enteredAbout","enteredAboutIsValid","aboutInputHasError","aboutChangeHandler","aboutBlurHandler","resetAboutInput","userBasicInfoFormIsValid","userBasicInfoFormSubmissionHandler","event","preventDefault","alert","dobClasses","aboutClasses","e","target","option","university_name","universityList"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { useHistory } from \"react-router-dom\";\nimport Axios from \"axios\";\n\n//SESSION and INPUT\nimport { AuthContext } from \"../Helpers/AuthContext\";\nimport useInput from \"../Helpers/use-input\";\n\nimport { Container, Row, Col, InputGroup, Form } from \"react-bootstrap\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\n\n//Components\nimport Heading from \"../Components/Heading\";\n\nconst isNotEmpty = (value) => value.trim() !== \"\";\n\nfunction BasicInfo() {\n  let history = useHistory();\n\n  const [authState, setAuthState] = useState({\n    id: \"\",\n    admin: \"\",\n    company: \"\",\n    status: false,\n    attempt: \"\",\n  });\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/auth/authenticate\", {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\"),\n      },\n    }).then((response) => {\n      if (response.data.error) {\n        setAuthState({ ...authState, status: false });\n        history.push(\"/\");\n      } else {\n        setAuthState({\n          id: response.data.id,\n          admin: response.data.admin,\n          company: response.data.company,\n          attempt: response.data.attempt,\n          status: true,\n        });\n      }\n    });\n  }, []);\n\n  //GENDER Input Check\n  const [genderInput, setGenderInput] = useState(\"\");\n\n  //DOB Input Check\n  const {\n    value: enteredDob,\n    isValid: enteredDobIsValid,\n    hasError: dobInputHasError,\n    valueChangeHandler: dobChangeHandler,\n    inputBlurHandler: dobBlurHandler,\n    reset: resetDobInput,\n  } = useInput(isNotEmpty);\n\n  //About Input Check\n  const {\n    value: enteredAbout,\n    isValid: enteredAboutIsValid,\n    hasError: aboutInputHasError,\n    valueChangeHandler: aboutChangeHandler,\n    inputBlurHandler: aboutBlurHandler,\n    reset: resetAboutInput,\n  } = useInput(isNotEmpty);\n\n  let userBasicInfoFormIsValid = false;\n\n  if (genderInput !== \"\" && enteredDobIsValid && enteredAboutIsValid) {\n    userBasicInfoFormIsValid = true;\n  }\n  const userBasicInfoFormSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (genderInput === \"\" && !enteredDobIsValid && !enteredAboutIsValid) {\n      return;\n    } else {\n      alert(enteredDob);\n    }\n    setGenderInput(\"\");\n    resetDobInput();\n    resetAboutInput();\n  };\n\n  const dobClasses = dobInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const aboutClasses = aboutInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  return (\n    <Fragment>\n      <AuthContext.Provider value={{ authState, setAuthState }}>\n        <HelmetProvider>\n          <Helmet>\n            <title> Basic Info | Zom - IN </title>\n          </Helmet>\n        </HelmetProvider>\n        <div id=\"basicInfo\" className=\"basicInfo\">\n          <Container className=\"my-5\">\n            <Row>\n              <Col sm={6} xs={12} className=\"mx-auto\">\n                <h1>{authState.id}</h1>\n                <Heading content=\"Basic Info\" />\n                <Form onSubmit={userBasicInfoFormSubmissionHandler}>\n                  <Col sm={12} className=\"form-group mb-3\">\n                    <label htmlFor=\"inputgender\" className=\"required\">\n                      You are\n                    </label>\n                    <InputGroup>\n                      <div>\n                        <input\n                          type=\"radio\"\n                          className=\"btn-check\"\n                          name=\"gender\"\n                          required\n                          id=\"male\"\n                          autoComplete=\"off\"\n                          onChange={(e) => setGenderInput(e.target.value)}\n                          value={[genderInput === \"Male\" || \"Male\"]}\n                        />\n                        <label\n                          className=\"btn btn-outline-success\"\n                          htmlFor=\"male\"\n                        >\n                          Male\n                        </label>\n                      </div>\n\n                      <div className=\"ms-2 \">\n                        <input\n                          type=\"radio\"\n                          className=\"btn-check\"\n                          name=\"gender\"\n                          id=\"female\"\n                          autoComplete=\"off\"\n                          onChange={(e) => setGenderInput(e.target.value)}\n                          value={[genderInput === \"Female\" || \"Female\"]}\n                        />\n                        <label\n                          className=\"btn btn-outline-info\"\n                          htmlFor=\"female\"\n                        >\n                          Female\n                        </label>\n                      </div>\n                    </InputGroup>\n                  </Col>\n                  <Col sm={12} className=\"form-group mb-3\">\n                    <label htmlFor=\"inputdob\" className=\"required\">\n                      Date of Birth\n                    </label>\n                    <input\n                      type=\"date\"\n                      id=\"inputdob\"\n                      placeholder=\"Your Birthday\"\n                      className={dobClasses}\n                      onChange={dobChangeHandler}\n                      onBlur={dobBlurHandler}\n                      value={enteredDob}\n                    />\n                    {dobInputHasError && (\n                      <Form.Control.Feedback type=\"invalid\">\n                        Please select your birthdate.\n                      </Form.Control.Feedback>\n                    )}\n                  </Col>\n\n                  <Col sm={12} className=\"form-group mb-2\">\n                    <label htmlFor=\"inputabout\" className=\"required\">\n                      About\n                    </label>\n                    <Form.Control\n                      as=\"textarea\"\n                      placeholder=\"Tell us about you\"\n                      className={aboutClasses}\n                      onChange={aboutChangeHandler}\n                      onBlur={aboutBlurHandler}\n                      value={enteredAbout}\n                    />\n                    {aboutInputHasError && (\n                      <Form.Control.Feedback type=\"invalid\">\n                        Tell us about you.\n                      </Form.Control.Feedback>\n                    )}\n                  </Col>\n\n                  <hr className=\"my-4\" />\n                  <Heading content=\"Education\" />\n\n                  <Col sm={12} className=\"form-group mb-2\">\n                    <label htmlFor=\"inputSchool\" className=\"required\">\n                      School\n                    </label>\n\n                    <Form.Group>\n                      <Typeahead\n                        allowNew={true}\n                        caseSensitive\n                        ignoreDiacritics={false}\n                        className=\"is-valid labelkey-example\"\n                        id=\"valid-styles-example\"\n                        isValid\n                        labelKey={(option) => `${option.university_name}`}\n                        options={universityList}\n                      />\n                      <Form.Control.Feedback type=\"valid\">\n                        Feedback\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n\n                  <Col className=\"text-end my-3\">\n                    <button\n                      type=\"submit\"\n                      className=\" btn btn-primary\"\n                      disabled={!userBasicInfoFormIsValid}\n                    >\n                      Submit\n                    </button>\n                  </Col>\n                </Form>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </AuthContext.Provider>\n    </Fragment>\n  );\n}\n\nexport default BasicInfo;\n"]},"metadata":{},"sourceType":"module"}