{"ast":null,"code":"var _jsxFileName = \"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/SignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Axios from 'axios';\nimport useInput from \"../Hooks/use-input\"; //import Components\n\nimport Heading from \"../Components/Heading\";\nimport { Row, Col, Form } from \"react-bootstrap\"; //Toast\n// import { toast } from \"react-toastify\";\n//Custom Style\n\nimport \"../Styles/signup.css\"; // const isNotEmpty = (value) => value.trim() !== \"\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst isNotEmail = value => /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value);\n\nconst isNotPassword = value => value.match(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,30}$/);\n\nfunction SignUp() {\n  _s();\n\n  //LOGIN\n  //LOGIN EMAIL\n  // Email Input Check\n  const {\n    value: enteredLogEmail,\n    isValid: enteredLogEmailIsValid,\n    hasError: logEmailInputHasError,\n    valueChangeHandler: logEmailChangeHandler,\n    inputBlurHandler: logEmailBlurHandler,\n    reset: resetLogEmailInput\n  } = useInput(isNotEmail); // Password Input Check\n\n  const {\n    value: enteredLogPassword,\n    isValid: enteredLogPasswordIsValid,\n    hasError: logPasswordInputHasError,\n    valueChangeHandler: logPasswordChangeHandler,\n    inputBlurHandler: logPasswordBlurHandler,\n    reset: resetLogPasswordInput\n  } = useInput(isNotPassword);\n  let loginFormIsValid = false;\n\n  if (enteredLogEmailIsValid && enteredLogPasswordIsValid) {\n    loginFormIsValid = true;\n  }\n\n  ;\n\n  const logInFormSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredLogEmailIsValid && !enteredLogPasswordIsValid) {\n      return;\n    } else {\n      Axios.post(\"http://localhost:3001/auth/login\", {\n        email: enteredLogEmail,\n        password: enteredLogPassword\n      }).then(response => {\n        alert(response.data);\n      });\n    }\n\n    console.log(\"submitting\");\n    resetLogEmailInput();\n    resetLogPasswordInput();\n  };\n\n  const logEmailClasses = logEmailInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  const logPasswordClasses = logPasswordInputHasError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm\";\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HelmetProvider, {\n      children: /*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \" Sign Up & Log In | Zom - IN \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"signUp\",\n      className: \"signUp\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 11,\n        md: 9,\n        className: \"mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(Heading, {\n                  content: \"Log In Now!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: logInFormSubmissionHandler,\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    id: \"inputLogEmail\",\n                    placeholder: \"Email Address\",\n                    className: logEmailClasses,\n                    onChange: logEmailChangeHandler,\n                    onBlur: logEmailBlurHandler,\n                    value: enteredLogEmail\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 21\n                  }, this), logEmailInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please enter a valid Email Address.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    id: \"inputLogPassword\",\n                    placeholder: \"Password\",\n                    className: logPasswordClasses,\n                    onChange: logPasswordChangeHandler,\n                    onBlur: logPasswordBlurHandler,\n                    value: enteredLogPassword\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 21\n                  }, this), logPasswordInputHasError && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Must contain more than 8 characters which contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  className: \"mb-3 text-center mx-auto\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \" btn btn-primary\",\n                    disabled: !loginFormIsValid,\n                    children: \"Log In\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            md: 6,\n            className: \"divider\",\n            children: \"fvd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUp, \"kemUx72L6QTnNcD0EY5YZn+dNCA=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/SignUp.jsx"],"names":["React","Fragment","Helmet","HelmetProvider","Axios","useInput","Heading","Row","Col","Form","isNotEmail","value","test","isNotPassword","match","SignUp","enteredLogEmail","isValid","enteredLogEmailIsValid","hasError","logEmailInputHasError","valueChangeHandler","logEmailChangeHandler","inputBlurHandler","logEmailBlurHandler","reset","resetLogEmailInput","enteredLogPassword","enteredLogPasswordIsValid","logPasswordInputHasError","logPasswordChangeHandler","logPasswordBlurHandler","resetLogPasswordInput","loginFormIsValid","logInFormSubmissionHandler","event","preventDefault","post","email","password","then","response","alert","data","console","log","logEmailClasses","logPasswordClasses"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\r\nimport Axios from 'axios';\r\nimport useInput from \"../Hooks/use-input\";\r\n\r\n//import Components\r\nimport Heading from \"../Components/Heading\";\r\n\r\nimport { Row, Col, Form } from \"react-bootstrap\";\r\n\r\n//Toast\r\n// import { toast } from \"react-toastify\";\r\n\r\n//Custom Style\r\nimport \"../Styles/signup.css\";\r\n\r\n// const isNotEmpty = (value) => value.trim() !== \"\";\r\nconst isNotEmail = (value) =>/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value);\r\n\r\nconst isNotPassword = (value) =>\r\n  value.match(\r\n    /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,30}$/\r\n  );\r\n\r\nfunction SignUp() {\r\n  //LOGIN\r\n  //LOGIN EMAIL\r\n  // Email Input Check\r\n  const {\r\n    value: enteredLogEmail,\r\n    isValid: enteredLogEmailIsValid,\r\n    hasError: logEmailInputHasError,\r\n    valueChangeHandler: logEmailChangeHandler,\r\n    inputBlurHandler: logEmailBlurHandler,\r\n    reset: resetLogEmailInput,\r\n  } = useInput(isNotEmail);\r\n\r\n  // Password Input Check\r\n  const {\r\n    value: enteredLogPassword,\r\n    isValid: enteredLogPasswordIsValid,\r\n    hasError: logPasswordInputHasError,\r\n    valueChangeHandler: logPasswordChangeHandler,\r\n    inputBlurHandler: logPasswordBlurHandler,\r\n    reset: resetLogPasswordInput,\r\n  } = useInput(isNotPassword);\r\n\r\n  let loginFormIsValid = false;\r\n\r\n  if (enteredLogEmailIsValid && enteredLogPasswordIsValid) {\r\n    loginFormIsValid = true;\r\n  };\r\n\r\n  const logInFormSubmissionHandler = (event) => {\r\n    event.preventDefault();\r\n    if (!enteredLogEmailIsValid && !enteredLogPasswordIsValid) {\r\n      return;\r\n    } else {\r\n      Axios.post(\"http://localhost:3001/auth/login\", {\r\n          email: enteredLogEmail,\r\n          password:enteredLogPassword\r\n      })\r\n      .then((response) => {\r\n          alert(response.data);\r\n      });\r\n    }\r\n    console.log(\"submitting\");\r\n    resetLogEmailInput();\r\n    resetLogPasswordInput();\r\n  };\r\n\r\n  const logEmailClasses = logEmailInputHasError\r\n    ? \"form-control form-control-sm is-invalid\"\r\n    : \"form-control form-control-sm\";\r\n\r\n  const logPasswordClasses = logPasswordInputHasError\r\n    ? \"form-control form-control-sm is-invalid\"\r\n    : \"form-control form-control-sm\";\r\n\r\n  return (\r\n    <Fragment>\r\n      <HelmetProvider>\r\n        <Helmet>\r\n          <title> Sign Up & Log In | Zom - IN </title>\r\n        </Helmet>\r\n      </HelmetProvider>\r\n      <div id=\"signUp\" className=\"signUp\">\r\n        <Col sm={11} md={9} className=\"mx-auto\">\r\n          <Row>\r\n            <Col sm={12} md={6}>\r\n              <>\r\n                <div className=\"text-center\">\r\n                  <Heading content=\"Log In Now!\" />\r\n                </div>\r\n                <Form onSubmit={logInFormSubmissionHandler}>\r\n                  <Col sm={12} className=\"mb-3\">\r\n                    <input\r\n                      type=\"email\"\r\n                      id=\"inputLogEmail\"\r\n                      placeholder=\"Email Address\"\r\n                      className={logEmailClasses}\r\n                      onChange={logEmailChangeHandler}\r\n                      onBlur={logEmailBlurHandler}\r\n                      value={enteredLogEmail}\r\n                    />\r\n                    {logEmailInputHasError && (\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        Please enter a valid Email Address.\r\n                      </Form.Control.Feedback>\r\n                    )}\r\n                  </Col>\r\n\r\n                  <Col sm={12} className=\"mb-3\">\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"inputLogPassword\"\r\n                      placeholder=\"Password\"\r\n                      className={logPasswordClasses}\r\n                      onChange={logPasswordChangeHandler}\r\n                      onBlur={logPasswordBlurHandler}\r\n                      value={enteredLogPassword}\r\n                    />\r\n                    {logPasswordInputHasError && (\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        Must contain more than 8 characters which contain at\r\n                        least one lowercase letter, one uppercase letter, one\r\n                        numeric digit, and one special character.\r\n                      </Form.Control.Feedback>\r\n                    )}\r\n                  </Col>\r\n\r\n                  <Col sm={12} className=\"mb-3 text-center mx-auto\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\" btn btn-primary\"\r\n                      disabled={!loginFormIsValid}\r\n                    >\r\n                      Log In\r\n                    </button>\r\n                  </Col>\r\n                </Form>\r\n              </>\r\n            </Col>\r\n            <Col sm={12} md={6} className=\"divider\">\r\n              fvd\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}