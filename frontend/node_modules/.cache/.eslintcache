[{"/Users/samikshazomin/Desktop/zomin/frontend/src/index.js":"1","/Users/samikshazomin/Desktop/zomin/frontend/src/reportWebVitals.js":"2","/Users/samikshazomin/Desktop/zomin/frontend/src/App.js":"3","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/LogoEmployer.js":"4","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile.js":"5","/Users/samikshazomin/Desktop/zomin/frontend/src/Config/routes.js":"6","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Logo.js":"7","/Users/samikshazomin/Desktop/zomin/frontend/src/Helpers/AuthContext.js":"8","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/NotFound.jsx":"9","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Index.jsx":"10","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/SignUp.jsx":"11","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Employer.jsx":"12","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Verify.jsx":"13","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/SignUpEmployer.jsx":"14","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/BasicInfo.jsx":"15","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Partner.jsx":"16","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Profile.jsx":"17","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/PartnerLanding.jsx":"18","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Opportunity.jsx":"19","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/OpportunityLanding.jsx":"20","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Dashboard.jsx":"21","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Interview.jsx":"22","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Resume.jsx":"23","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Faq.jsx":"24","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ForgetPassword.jsx":"25","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ResetPassword.jsx":"26","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ResetPasswordToken.jsx":"27","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/AboutUs.jsx":"28","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Contact.jsx":"29","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Settings.jsx":"30","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/TermOfUse.jsx":"31","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/PrivacyPolicy.jsx":"32","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/SpiceIN.jsx":"33","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/TermOfBusiness.jsx":"34","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/SpiceINLanding.jsx":"35","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ZomAdminUser.jsx":"36","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Application.jsx":"37","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ZomAdminPartnerApplication.jsx":"38","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ZomAdminStudent.jsx":"39","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ZomDashboard.jsx":"40","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ZomAdminEmployer.jsx":"41","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ZomAdminPartner.jsx":"42","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ZomAdminPartnerSavedApplication.jsx":"43","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ZomAdminJobApplication.jsx":"44","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ZomAdminSpiceIN.jsx":"45","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ZomAdminJobVacancy.jsx":"46","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/ImgError404.js":"47","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Heading.js":"48","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Footer.js":"49","/Users/samikshazomin/Desktop/zomin/frontend/src/Helpers/use-input.js":"50","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Ads.js":"51","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/ScrollToTop.js":"52","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/BasicInfo/Employer.js":"53","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Partner/LandingInfo.js":"54","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Name.js":"55","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Application/Employer.js":"56","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Application/User.js":"57","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/SpiceIN/CardSpiceIn.js":"58","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Settings/Password.js":"59","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Settings/SubMenu.js":"60","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/AboutUs/ActivityEvent.js":"61","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/AboutUs/Team.js":"62","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/AboutUs/ZomINBg.js":"63","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/AboutUs/AboutZomIN.js":"64","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Email.js":"65","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Contact.js":"66","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Partner/LandingSidebar.js":"67","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Interview/Employer.js":"68","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Interview/User.js":"69","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Dashboard/Employer.js":"70","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Dashboard/User.js":"71","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/LandingJD.js":"72","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/ApplyJob.js":"73","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/OpportunityShortCard.js":"74","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/LandingCompany.js":"75","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/LandingTop.js":"76","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/OpportunityLongCard.js":"77","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/Employer.js":"78","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Partner/LandingAchievement.js":"79","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Partner/LandingOverview.js":"80","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Partner/LandingAbout.js":"81","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Partner/LandingTop.js":"82","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/User.js":"83","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/Employer.js":"84","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/BasicInfo/User.js":"85","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Partner/CardPartner.js":"86","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Home/Home.js":"87","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Index/Main.js":"88","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/AboutUs/Events.js":"89","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Interview/User/Reschedule.js":"90","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/Internship.js":"91","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/Contract.js":"92","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/PartTime.js":"93","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/FullTime.js":"94","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/Employer/About.js":"95","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Home/Suggestion.js":"96","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Home/Profile.js":"97","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Home/Posts.js":"98","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Home/TopBanner.js":"99","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Home/Like.js":"100","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Home/Report.js":"101","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Home/Comment.js":"102","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Home/PostOwnerProfile.js":"103","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Home/MiddleBanner.js":"104","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/Employer/ChangeProfile.js":"105","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/User/Reference.js":"106","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/User/RealLifeExperience.js":"107","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/User/Language.js":"108","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/User/Portfolio.js":"109","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/User/Achievement.js":"110","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/User/Skills.js":"111","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/User/About.js":"112","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/User/WorkExperience.js":"113","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/User/ChangeProfile.js":"114","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/User/Education.js":"115"},{"size":579,"mtime":1637169544608,"results":"116","hashOfConfig":"117"},{"size":362,"mtime":499162500000,"results":"118","hashOfConfig":"117"},{"size":9381,"mtime":1648447708557,"results":"119","hashOfConfig":"117"},{"size":267,"mtime":1638167650437,"results":"120","hashOfConfig":"117"},{"size":1607,"mtime":1648394246173,"results":"121","hashOfConfig":"117"},{"size":5019,"mtime":1648447633689,"results":"122","hashOfConfig":"117"},{"size":253,"mtime":1628654018000,"results":"123","hashOfConfig":"117"},{"size":85,"mtime":1634195382109,"results":"124","hashOfConfig":"117"},{"size":822,"mtime":1628734044000,"results":"125","hashOfConfig":"117"},{"size":790,"mtime":1637734834586,"results":"126","hashOfConfig":"117"},{"size":17367,"mtime":1641826660474,"results":"127","hashOfConfig":"117"},{"size":7305,"mtime":1641670622110,"results":"128","hashOfConfig":"117"},{"size":2085,"mtime":1638257594692,"results":"129","hashOfConfig":"117"},{"size":18995,"mtime":1638236676599,"results":"130","hashOfConfig":"117"},{"size":1369,"mtime":1639360166421,"results":"131","hashOfConfig":"117"},{"size":7379,"mtime":1644174078302,"results":"132","hashOfConfig":"117"},{"size":1120,"mtime":1644907132997,"results":"133","hashOfConfig":"117"},{"size":5923,"mtime":1649403747560,"results":"134","hashOfConfig":"117"},{"size":17617,"mtime":1642063305788,"results":"135","hashOfConfig":"117"},{"size":6600,"mtime":1642352038339,"results":"136","hashOfConfig":"117"},{"size":1133,"mtime":1644907184219,"results":"137","hashOfConfig":"117"},{"size":1133,"mtime":1644907267652,"results":"138","hashOfConfig":"117"},{"size":15716,"mtime":1641826817204,"results":"139","hashOfConfig":"117"},{"size":6669,"mtime":1638771147977,"results":"140","hashOfConfig":"117"},{"size":3740,"mtime":1651121512968,"results":"141","hashOfConfig":"117"},{"size":416,"mtime":1638205976077,"results":"142","hashOfConfig":"117"},{"size":2183,"mtime":1638258362335,"results":"143","hashOfConfig":"117"},{"size":2446,"mtime":1644174146374,"results":"144","hashOfConfig":"117"},{"size":8561,"mtime":1638782968869,"results":"145","hashOfConfig":"117"},{"size":2207,"mtime":1644174268253,"results":"146","hashOfConfig":"117"},{"size":30165,"mtime":1636480999089,"results":"147","hashOfConfig":"117"},{"size":12686,"mtime":1636476589222,"results":"148","hashOfConfig":"117"},{"size":4066,"mtime":1648526501495,"results":"149","hashOfConfig":"117"},{"size":9199,"mtime":1638287187872,"results":"150","hashOfConfig":"117"},{"size":2819,"mtime":1649175648690,"results":"151","hashOfConfig":"117"},{"size":8697,"mtime":1644079817545,"results":"152","hashOfConfig":"117"},{"size":1151,"mtime":1644907265452,"results":"153","hashOfConfig":"117"},{"size":8531,"mtime":1644165257325,"results":"154","hashOfConfig":"117"},{"size":8914,"mtime":1644080708445,"results":"155","hashOfConfig":"117"},{"size":57922,"mtime":1643083401221,"results":"156","hashOfConfig":"117"},{"size":8966,"mtime":1644084462376,"results":"157","hashOfConfig":"117"},{"size":9989,"mtime":1644092866880,"results":"158","hashOfConfig":"117"},{"size":8567,"mtime":1644166177374,"results":"159","hashOfConfig":"117"},{"size":8944,"mtime":1644173895959,"results":"160","hashOfConfig":"117"},{"size":9743,"mtime":1648460822939,"results":"161","hashOfConfig":"117"},{"size":10897,"mtime":1644172883691,"results":"162","hashOfConfig":"117"},{"size":589,"mtime":1628677390000,"results":"163","hashOfConfig":"117"},{"size":181,"mtime":1636473698387,"results":"164","hashOfConfig":"117"},{"size":4168,"mtime":1638771143806,"results":"165","hashOfConfig":"117"},{"size":759,"mtime":1633671545294,"results":"166","hashOfConfig":"117"},{"size":213,"mtime":1644174106950,"results":"167","hashOfConfig":"117"},{"size":1046,"mtime":1629184054000,"results":"168","hashOfConfig":"117"},{"size":16348,"mtime":1641668027340,"results":"169","hashOfConfig":"117"},{"size":1597,"mtime":1649173589927,"results":"170","hashOfConfig":"117"},{"size":484,"mtime":1641778365428,"results":"171","hashOfConfig":"117"},{"size":12923,"mtime":1647803582850,"results":"172","hashOfConfig":"117"},{"size":17026,"mtime":1647795108078,"results":"173","hashOfConfig":"117"},{"size":1012,"mtime":1648461224385,"results":"174","hashOfConfig":"117"},{"size":8562,"mtime":1641178927884,"results":"175","hashOfConfig":"117"},{"size":590,"mtime":1639030968426,"results":"176","hashOfConfig":"117"},{"size":1112,"mtime":1638041860582,"results":"177","hashOfConfig":"117"},{"size":2158,"mtime":1637774459595,"results":"178","hashOfConfig":"117"},{"size":2057,"mtime":1637774454173,"results":"179","hashOfConfig":"117"},{"size":788,"mtime":1637776247274,"results":"180","hashOfConfig":"117"},{"size":470,"mtime":1641778344713,"results":"181","hashOfConfig":"117"},{"size":490,"mtime":1641778373493,"results":"182","hashOfConfig":"117"},{"size":215,"mtime":1651049283935,"results":"183","hashOfConfig":"117"},{"size":12047,"mtime":1647802999632,"results":"184","hashOfConfig":"117"},{"size":12075,"mtime":1647539027631,"results":"185","hashOfConfig":"117"},{"size":3343,"mtime":1646758603093,"results":"186","hashOfConfig":"117"},{"size":4950,"mtime":1645608153330,"results":"187","hashOfConfig":"117"},{"size":1680,"mtime":1635233540360,"results":"188","hashOfConfig":"117"},{"size":2643,"mtime":1641667009034,"results":"189","hashOfConfig":"117"},{"size":9589,"mtime":1641060485264,"results":"190","hashOfConfig":"117"},{"size":3145,"mtime":1635233540360,"results":"191","hashOfConfig":"117"},{"size":10956,"mtime":1638202064814,"results":"192","hashOfConfig":"117"},{"size":13030,"mtime":1642142123881,"results":"193","hashOfConfig":"117"},{"size":15100,"mtime":1642619052277,"results":"194","hashOfConfig":"117"},{"size":272,"mtime":1630028966000,"results":"195","hashOfConfig":"117"},{"size":433,"mtime":1635233540360,"results":"196","hashOfConfig":"117"},{"size":395,"mtime":1649173835945,"results":"197","hashOfConfig":"117"},{"size":1260,"mtime":1631179804000,"results":"198","hashOfConfig":"117"},{"size":4284,"mtime":1645664634754,"results":"199","hashOfConfig":"117"},{"size":3594,"mtime":1647804679447,"results":"200","hashOfConfig":"117"},{"size":22732,"mtime":1645911878816,"results":"201","hashOfConfig":"117"},{"size":1337,"mtime":1631695396000,"results":"202","hashOfConfig":"117"},{"size":1389,"mtime":1644174200796,"results":"203","hashOfConfig":"117"},{"size":10185,"mtime":1649741043876,"results":"204","hashOfConfig":"117"},{"size":819,"mtime":1637776243565,"results":"205","hashOfConfig":"117"},{"size":2568,"mtime":1646163037686,"results":"206","hashOfConfig":"117"},{"size":6013,"mtime":1642150554654,"results":"207","hashOfConfig":"117"},{"size":8880,"mtime":1642150614406,"results":"208","hashOfConfig":"117"},{"size":5998,"mtime":1642150661785,"results":"209","hashOfConfig":"117"},{"size":12802,"mtime":1642666273939,"results":"210","hashOfConfig":"117"},{"size":2798,"mtime":1647804650681,"results":"211","hashOfConfig":"117"},{"size":150,"mtime":1644454844148,"results":"212","hashOfConfig":"117"},{"size":4308,"mtime":1641882994544,"results":"213","hashOfConfig":"117"},{"size":22708,"mtime":1649301740452,"results":"214","hashOfConfig":"117"},{"size":281,"mtime":1637080296418,"results":"215","hashOfConfig":"117"},{"size":3573,"mtime":1638041711119,"results":"216","hashOfConfig":"117"},{"size":5227,"mtime":1637083231683,"results":"217","hashOfConfig":"117"},{"size":7866,"mtime":1644481521069,"results":"218","hashOfConfig":"117"},{"size":1987,"mtime":1638171864688,"results":"219","hashOfConfig":"117"},{"size":964,"mtime":1637081381479,"results":"220","hashOfConfig":"117"},{"size":581,"mtime":1645665523774,"results":"221","hashOfConfig":"117"},{"size":14681,"mtime":1644907932950,"results":"222","hashOfConfig":"117"},{"size":13198,"mtime":1644907916142,"results":"223","hashOfConfig":"117"},{"size":9447,"mtime":1644905643397,"results":"224","hashOfConfig":"117"},{"size":14096,"mtime":1644907902604,"results":"225","hashOfConfig":"117"},{"size":13152,"mtime":1644907850076,"results":"226","hashOfConfig":"117"},{"size":9087,"mtime":1644905534667,"results":"227","hashOfConfig":"117"},{"size":13831,"mtime":1646758062338,"results":"228","hashOfConfig":"117"},{"size":20732,"mtime":1644907949036,"results":"229","hashOfConfig":"117"},{"size":582,"mtime":1644977748946,"results":"230","hashOfConfig":"117"},{"size":16851,"mtime":1644907865704,"results":"231","hashOfConfig":"117"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},"u2n185",{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"234"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"234"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"234"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"234"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"234"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"234"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"234"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"234"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"234"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"234"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"234"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"234"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"234"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"234"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"234"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"234"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"234"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},"/Users/samikshazomin/Desktop/zomin/frontend/src/index.js",[],["480","481"],"/Users/samikshazomin/Desktop/zomin/frontend/src/reportWebVitals.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/App.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/LogoEmployer.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Config/routes.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Logo.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Helpers/AuthContext.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/NotFound.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Index.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/SignUp.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Employer.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Verify.jsx",["482"],"import React, { Fragment, useEffect } from 'react';\r\nimport { useParams , } from 'react-router-dom';\r\n\r\nimport Axios from 'axios';\r\nimport { BiError, BiMessageCheck, BiMinusCircle } from \"react-icons/bi\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//Toast\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction Verify() {\r\n    const navigate = useNavigate();\r\n    const { token } = useParams();\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            Axios.post(`${process.env.REACT_APP_SERVER_DOMAIN}/verify/token`, {\r\n                token: token\r\n            })\r\n                .then((response) => {\r\n                    if (response.data.success) {\r\n                        return toast.success(\r\n                            <Fragment>\r\n                                <BiMessageCheck />\r\n                                <span>{response.data.success}</span>\r\n                            </Fragment>\r\n    \r\n                        );\r\n                    } else if (response.data.warn) {\r\n                        return toast.warn(\r\n                            <Fragment>\r\n                                <BiError />\r\n                                <span>{response.data.warn}</span>\r\n                            </Fragment>);\r\n                    }  else {\r\n                        return toast.error(\r\n                            <Fragment>\r\n                                <BiMinusCircle />\r\n                                <span>{response.data.error}</span>\r\n                            </Fragment>);\r\n                    }\r\n                }).then(\r\n                    navigate(\"/signup\")\r\n                );\r\n        }\r\n        else {\r\n            return toast.error(\r\n                <Fragment>\r\n                    <BiMinusCircle />\r\n                    <span>System is Error. Please Try Again!</span>\r\n                </Fragment>);\r\n        }\r\n    \r\n    \r\n    \r\n        if (token === null) {\r\n            navigate(\"/\");\r\n        }\r\n      }, []);\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n           \r\n        </Fragment>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Verify;","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/SignUpEmployer.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/BasicInfo.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Partner.jsx",["483","484"],"import React, { useEffect, useState } from 'react';\r\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\r\nimport Axios from 'axios';\r\n\r\nimport { Container, Row, Col, Image } from 'react-bootstrap';\r\n\r\n//Componenents\r\nimport Heading from '../Components/Heading';\r\nimport Footer from '../Components/Footer';\r\nimport ScrollToTop from '../Components/ScrollToTop';\r\nimport CardPartner from '../Components/Partner/CardPartner';\r\n\r\nimport Ads from '../Components/Ads'\r\n\r\n//Custom Style\r\nimport '../Styles/partner.css';\r\n\r\n//ICOn\r\nimport { BiSearchAlt } from \"react-icons/bi\";\r\n\r\n\r\nfunction Partner() {\r\n\r\n    const [partnerList, setPartnerList] = useState([]);\r\n    const [industryList, setIndustryList] = useState([]);\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [searchIndustryTerm, setSearchIndustryTerm] = useState(\"\");\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/partner/list`)\r\n            .then((response) => {\r\n                setPartnerList(response.data);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/industry`)\r\n            .then((response) => {\r\n                setIndustryList(response.data);\r\n\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <HelmetProvider>\r\n                <Helmet>\r\n                    <title>Partners | Zom-IN</title>\r\n                </Helmet>\r\n            </HelmetProvider>\r\n\r\n            <Container fluid className=\" h-100 searchbox\">\r\n                <Row className=\"py-3 px-5\">\r\n                    <div className=\"input-group \">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Keywords (Company Name, Industry, ...)\"\r\n                            aria-label=\"Keywords\"\r\n                            aria-describedby=\"button-addon2\"\r\n                            onChange={(event) => {\r\n                                setSearchTerm(event.target.value);\r\n                            }}\r\n                        />\r\n                        <button\r\n                            className=\"btn btn-outline-primary\"\r\n                            type=\"button\"\r\n                            id=\"button-addon2\" >\r\n                            < BiSearchAlt /> Search\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap align-items-center  align-content-center  filterbox\">\r\n                        <div>\r\n                            <select defaultValue={'DEFAULT'}\r\n                                className=\"form-select form-select-sm\"\r\n                                aria-label=\"Default select example\"\r\n                                onChange={(event) => {\r\n                                    setSearchIndustryTerm(event.target.value);\r\n                                }} >\r\n                                <option value=\"\"> Industry </option>\r\n\r\n                                {industryList.map((industryList, key) => {\r\n                                    const childName = industryList.child_name;\r\n                                    return (\r\n                                        <option value={childName} > {childName} </option>\r\n                                    );\r\n                                })}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    {/* <Col xs={12} md={4} lg={5}>\r\n\r\n                            <select className=\"form-select form-select-md\" aria-label=\"Default select example\">\r\n                                <option value=\"DEFAULT\">Select Industry</option>\r\n\r\n                                {industryList.map((industryDetails) => {\r\n                                    const industry = industryDetails.child_name;\r\n\r\n                                    return (\r\n                                        <option value={industry} key={industryDetails.child_id}>{industry}</option>\r\n                                    );\r\n                                \r\n                            })}\r\n                            </select>\r\n\r\n                        </Col> */}\r\n                </Row>\r\n            </Container>\r\n            <Container>\r\n                <Row>\r\n                    <Col sm={10}>\r\n                        <Row xs={1} sm={1} md={3} lg={4} className=\"g-1\">\r\n\r\n                            {partnerList\r\n\r\n                                .filter(partnerDetails => {\r\n                                    if (searchTerm === \"\") {\r\n                                        return partnerDetails\r\n                                    } else if (partnerDetails.company_name.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                                        return partnerDetails\r\n                                    } else if (partnerDetails.industry.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                                        return partnerDetails\r\n                                    }\r\n                                    return false;\r\n                                })\r\n\r\n                                .filter(partnerDetails => {\r\n                                    if (searchIndustryTerm === \"\") {\r\n                                        return partnerDetails\r\n                                    } else if (partnerDetails.industry.toLowerCase().includes(searchIndustryTerm.toLowerCase())) {\r\n                                        return partnerDetails\r\n                                    }\r\n                                    return false;\r\n                                })\r\n\r\n                                .map((partnerDetails, key) => {\r\n                                    const companyName = partnerDetails.company_name;\r\n                                    const companyID = partnerDetails.id;\r\n                                    const partnerIndustry = partnerDetails.industry;\r\n                                    var truncatedSize = 85;\r\n                                    const companyAbout = partnerDetails.company_about;\r\n                                    var partnerAbout = companyAbout.substring(0, truncatedSize) + \"...\";\r\n\r\n                                    const partnerLogo = `${process.env.REACT_APP_SERVER_DOMAIN}/public/Assests/Images/user/` + partnerDetails.company_logo;\r\n\r\n\r\n                                    return (\r\n\r\n                                        <CardPartner\r\n                                            key={companyID}\r\n                                            cardImage={partnerLogo}\r\n                                            cardHeader={companyName}\r\n                                            cardMeta={partnerIndustry}\r\n                                            cardDesc={partnerAbout}\r\n\r\n                                        />\r\n\r\n                                    );\r\n\r\n                                })}\r\n\r\n                        </Row>\r\n                    </Col>\r\n                    <Col sm={2} className=\"sidebarHeader my-3\" >\r\n                        <Ads />\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n\r\n            <Footer />\r\n            <ScrollToTop />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Partner;\r\n","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Profile.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/PartnerLanding.jsx",["485","486"],"import React, { useEffect, useState } from 'react';\r\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\r\nimport { useParams } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\n\r\nimport LandingTop from '../Components/Partner/LandingTop';\r\nimport LandingAbout from '../Components/Partner/LandingAbout';\r\nimport LandingOverview from '../Components/Partner/LandingOverview';\r\nimport LandingAchievement from '../Components/Partner/LandingAchievement';\r\nimport LandingSidebar from '../Components/Partner/LandingSidebar';\r\nimport Footer from '../Components/Footer';\r\nimport ScrollToTop from '../Components/ScrollToTop';\r\n\r\nimport { Container, Row, Col, Tabs, Tab, Badge } from 'react-bootstrap';\r\n\r\n//Custom Style\r\nimport '../Styles/partner.css';\r\nimport LandingInfo from '../Components/Partner/LandingInfo';\r\n\r\nfunction PartnerLanding() {\r\n\r\n    const { companyname } = useParams();\r\n    const [partner, setPartner] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/partner/list/` + companyname)\r\n            .then((response) => {\r\n                setPartner(response.data);\r\n                console.log(response.data)\r\n            });\r\n    }, [companyname]);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <HelmetProvider>\r\n                <Helmet>\r\n                    <title>Partner | Zom-IN</title>\r\n                </Helmet>\r\n            </HelmetProvider>\r\n            <Container className=\"content mt-2\">\r\n\r\n                {partner\r\n\r\n                    .map((partnerDetails, key) => {\r\n                        const partnerName = partnerDetails.company_name;\r\n                        const partnerID = partnerDetails.id;\r\n                        const partnerIndustry = partnerDetails.industry;\r\n                        const partnerLogo = `${process.env.REACT_APP_SERVER_DOMAIN}/public/Assests/Images/user/`+ partnerDetails.company_logo;\r\n                        const partnerCoverPic = `${process.env.REACT_APP_SERVER_DOMAIN}/public/Assests/Images/user_cover/` + partnerDetails.company_team_pic;\r\n                        const partnerLocation = partnerDetails.location_com;\r\n\r\n\r\n                        return (\r\n                            <LandingTop\r\n                                key={partnerID}\r\n                                partnerLogo={partnerLogo}\r\n                                partnerName={partnerName}\r\n                                partnerCoverPic={partnerCoverPic}\r\n                                partnerIndustry={partnerIndustry}\r\n                                partnerLocation={partnerLocation}\r\n                            />\r\n                        );\r\n                    })}\r\n\r\n                <hr />\r\n                <Row>\r\n                    <Col sm={12} md={9} lg={9}>\r\n\r\n                        <Tabs defaultActiveKey=\"about\" id=\"uncontrolled-tab-example\" className=\"mb-3 nav-fill\">\r\n\r\n                            <Tab eventKey=\"overview\" title=\"Overview\">\r\n                                {partner.map((overview, key) => {\r\n                                    const partnerOverview = overview.interview;\r\n                                    \r\n                                    return (\r\n                                        <LandingOverview\r\n                                            partnerOverview={partnerOverview}\r\n                                        />\r\n                                    )\r\n                                })}\r\n                            </Tab>\r\n\r\n                            <Tab eventKey=\"about\" title=\"About\">\r\n                                {partner.map((about, key) => {\r\n                                    const partnerAbout = about.company_about;\r\n                                    \r\n                                    return (\r\n                                        <LandingAbout\r\n                                            partnerAbout={partnerAbout}\r\n                                        />\r\n                                    )\r\n                                })}\r\n                            </Tab>\r\n\r\n                            {/* <Tab eventKey=\"achievement\" title=\"Achievement\">\r\n                                {partner.map((achievement, key) => {\r\n                                    const partnerAchievement = \"Achievement\";\r\n                                    \r\n                                    return (\r\n                                        <LandingAchievement\r\n                                            partnerAchievement={partnerAchievement}\r\n                                        />\r\n                                    )\r\n                                })}\r\n                            </Tab>\r\n\r\n                            <Tab eventKey=\"jobs\" title=\"Jobs\">\r\n                               <div>\r\n                                   <h1>Jobs</h1>\r\n                               </div>\r\n                            </Tab>\r\n\r\n                            <Tab eventKey=\"qna\" title=\"Q&A\">\r\n                               <div>\r\n                                   <h1>Q&A</h1>\r\n                               </div>\r\n                            </Tab>\r\n                            <Tab eventKey=\"events\" title={<div>Event <span className=\"badge bg-secondary\">New</span></div>}>\r\n                               <div>\r\n                                   <h1>Events<Badge bg=\"secondary\">19</Badge></h1>\r\n                                   \r\n                               </div>\r\n                            </Tab> */}\r\n                        </Tabs>\r\n                    </Col>\r\n                    \r\n                    <Col sm={12} md={3} lg={3}>\r\n                    <LandingInfo />\r\n                    <LandingSidebar />\r\n                    </Col>\r\n                </Row>\r\n                \r\n            </Container>\r\n            <Footer />\r\n            <ScrollToTop />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PartnerLanding\r\n","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Opportunity.jsx",["487"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\r\nimport Axios from 'axios';\r\n\r\n//Componenents\r\nimport { AuthContext } from \"../Helpers/AuthContext\";\r\n\r\nimport Employer from \"../Components/Opportunity/Employer\";\r\nimport Footer from '../Components/Footer';\r\nimport ScrollToTop from '../Components/ScrollToTop';\r\nimport OpportunityShortCard from '../Components/Opportunity/OpportunityShortCard';\r\nimport OpportunityLongCard from '../Components/Opportunity/OpportunityLongCard';\r\n\r\n\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\n\r\n//Custom Style\r\nimport '../Styles/opportunity.css';\r\n\r\n//Icon\r\nimport { BiSearchAlt } from \"react-icons/bi\";\r\nimport updateResume from \"../Assests/Images/banner/SideBar/updateResume.jpeg\";\r\n\r\n\r\n\r\nfunction Opportunity() {\r\n  const { authState, setAuthState } = useContext(AuthContext);\r\n\r\n\r\n    const [isCard, setCard] = useState(false);\r\n\r\n    const [opportunityList, setOpportunityList] = useState([]);\r\n    const [stateList, setStateList] = useState([]);\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [searchLocationTerm, setSearchLocationTerm] = useState(\"\");\r\n    const [searchEducationTerm, setSearchEducationTerm] = useState(\"\");\r\n    const [searchJobTypeTerm, setSearchJobTypeTerm] = useState(\"\");\r\n\r\n    function getShortCard() {\r\n        setCard(true);\r\n    }\r\n\r\n    function getLongCard() {\r\n        setCard(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/opportunity/list`)\r\n            .then((response) => {\r\n                setOpportunityList(response.data);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/stateLocation`)\r\n            .then((response) => {\r\n                setStateList(response.data);\r\n            });\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <HelmetProvider >\r\n                <Helmet >\r\n                    <title> Opportunity | Zom - IN </title>\r\n                </Helmet>\r\n            </HelmetProvider>\r\n            {authState.company === 1 ? <Employer /> :\r\n            <>\r\n            <Container fluid className=\"h-100 searchbox\">\r\n                <Row className=\"py-3 px-5\">\r\n                    <div className=\"input-group \">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Keywords (Marketing, Internship, ...)\"\r\n                            aria-label=\"Keywords\"\r\n                            aria-describedby=\"button-addon2\"\r\n                            onChange={(event) => {\r\n                                setSearchTerm(event.target.value);\r\n                            }}\r\n                        />\r\n                        <button\r\n                            className=\"btn btn-outline-primary\"\r\n                            type=\"button\"\r\n                            id=\"button-addon2\" >\r\n                            < BiSearchAlt /> Search\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap align-items-center  align-content-center  filterbox\">\r\n                        <div>\r\n                            <select defaultValue={'DEFAULT'}\r\n                                className=\"form-select form-select-sm\"\r\n                                aria-label=\"Default select example\"\r\n                                onChange={(event) => {\r\n                                    setSearchLocationTerm(event.target.value);\r\n                                }} >\r\n                                <option value=\"\"> Location </option>\r\n                                {stateList.map((stateList, key) => {\r\n                                    const childName = stateList.child_name;\r\n                                    return (\r\n                                        <option value={childName} > {childName} </option>\r\n                                    );\r\n                                })}\r\n                            </select>\r\n                        </div>\r\n                        <div >\r\n                            <select defaultValue={'DEFAULT'}\r\n                                className=\"form-select form-select-sm\"\r\n                                aria-label=\"Default select example\"\r\n                                onChange={(event) => {\r\n                                    setSearchEducationTerm(event.target.value);\r\n                                }} >\r\n                                <option value=\"\"> Education </option>\r\n                                <option value=\"Bachelor's Degree\" > Bachelor's Degree </option>\r\n                                <option value=\"Diploma\" > Diploma </option>\r\n                                <option value=\"Sabah\" > Sabah </option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <select defaultValue={'DEFAULT'}\r\n                                className=\"form-select form-select-sm\"\r\n                                aria-label=\"Default select example\"\r\n                                onChange={(event) => {\r\n                                    setSearchJobTypeTerm(event.target.value);\r\n                                }}\r\n                            >\r\n                                <option value=\"\" > Job Type </option>\r\n                                <option value=\"Full Time\" > Full Time </option>\r\n                                <option value=\"Internship\" > Internship </option>\r\n                                <option value=\"Contract\" > Contract  </option>\r\n                                <option value=\"Part Time\" >Part Time</option>\r\n                            </select>\r\n                        </div>\r\n                        {/* <div>\r\n                            <select defaultValue={'DEFAULT'}\r\n                                className=\"form-select form-select-sm\"\r\n                                aria-label=\"Default select example\"\r\n                                onChange={(event) => {\r\n                                    setSearchSalaryTerm(event.target.value);\r\n                            }} >\r\n                                <option value=\"\"> Salary Range </option>\r\n                                <option value=\"RM 2001 and RM 3000\" > RM 2001 and RM 3000 </option>\r\n                                <option value=\"Selangor\" > Selangor </option>\r\n                                <option value=\"Sabah\" > Sabah </option>\r\n                            </select>\r\n                        </div> */}\r\n                        {/* <div className=\"form-check form-switch me-1\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                type=\"checkbox\"\r\n                                id=\"flexSwitchCheckDefault\"\r\n                                value=\"1\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"> <img\r\n                                alt=\"zom-in-fresh-graduate-icon\"\r\n                                className=\"icon\"\r\n                                src=\"https://www.zom-in.com/images/icon/graduated.svg\"\r\n                            /> Fresh Graduates</label>\r\n                        </div> */}\r\n                        {/* <div className=\"form-check form-switch\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"> <img\r\n                                alt=\"zom-in-fresh-graduate-icon\"\r\n                                className=\"icon\"\r\n                                src=\"https://www.zom-in.com/images/icon/opportunity.svg\"\r\n                            /> New Job Posted</label>\r\n                        </div> */}\r\n                    </div>\r\n\r\n\r\n                </Row>\r\n            </Container>\r\n\r\n            \r\n            <Container className=\"py-3 px-3\" >\r\n                <Row >\r\n                    <Col xs={12} sm={12} md={12} lg={10} >\r\n                        <Row className=\"g-1\" >\r\n                            <div className=\"text-end align-items-center\" >\r\n                                <p className=\"d-inline\" >View By: </p>\r\n                                {' '}\r\n                                <Button\r\n                                    onClick={getShortCard}\r\n                                    variant=\"outline-light\"\r\n                                    size=\"sm\"\r\n                                    className=\"border-0\"\r\n                                >\r\n                                    <img alt=\"dg\" className=\"icon\" src=\"https://www.zom-in.com/images/icon/grid-2x2.svg\" />\r\n                                </Button>\r\n                                {' '}\r\n                                <Button\r\n                                    onClick={getLongCard}\r\n                                    variant=\"outline-light\"\r\n                                    size=\"sm\"\r\n                                    className=\"border-0 text-center\"\r\n                                >\r\n                                    <img alt=\"dg\" className=\"icon\" src=\"https://www.zom-in.com/images/icon/grid-3x3.svg\" />\r\n                                </Button>\r\n\r\n                                {/* <p className=\"d-inline ms-2\">Sort by: </p>\r\n                                <select\r\n                                    defaultValue={'DEFAULT'}\r\n                                    className=\"d-inline sortBy form-select form-select-sm\"\r\n                                    aria-label=\"Default select example\"\r\n                                    name=\"sort\"\r\n                                >\r\n                                    <option value=\"oppo_id\" > oppo_id </option>\r\n                                    <option value=\"job_title\" > job_title </option>\r\n                                </select> */}\r\n\r\n                            </div>\r\n\r\n                        </Row>\r\n                        <Row xs={1} sm={1} md={2} lg={2} className=\"g-1 py-1 px-1 mt-4\">\r\n\r\n                            {opportunityList\r\n                                .filter(opportunityDetails => {\r\n                                    if (searchTerm === \"\") {\r\n                                        return opportunityDetails\r\n                                    } else if (\r\n                                        (opportunityDetails.job_title.toLowerCase().includes(searchTerm.toLowerCase()))\r\n                                        ||\r\n                                        (opportunityDetails.job_type.toLowerCase().includes(searchTerm.toLowerCase()))\r\n                                        ||\r\n                                        (opportunityDetails.company_name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n                                        ||\r\n                                        (opportunityDetails.job_location.toLowerCase().includes(searchTerm.toLowerCase()))\r\n                                    ) {\r\n                                        return opportunityDetails\r\n                                    }\r\n                                    return false;\r\n                                })\r\n\r\n                                .filter(opportunityDetails => {\r\n                                    if (searchLocationTerm === \"\") {\r\n                                        return opportunityDetails\r\n                                    } else if (opportunityDetails.job_location.toLowerCase().includes(searchLocationTerm.toLowerCase())) {\r\n                                        return opportunityDetails\r\n                                    }\r\n                                    return false;\r\n                                })\r\n\r\n                                .filter(opportunityDetails => {\r\n\r\n                                    if (searchEducationTerm === \"\") {\r\n                                        return opportunityDetails\r\n                                    } else if (opportunityDetails.education.toLowerCase().includes(searchEducationTerm.toLowerCase())) {\r\n                                        return opportunityDetails\r\n                                    }\r\n                                    return false;\r\n                                })\r\n\r\n\r\n                                .filter(opportunityDetails => {\r\n\r\n                                    if (searchJobTypeTerm === \"\") {\r\n                                        return opportunityDetails\r\n                                    } else if (opportunityDetails.job_type.toLowerCase().includes(searchJobTypeTerm.toLowerCase())) {\r\n                                        return opportunityDetails\r\n                                    }\r\n                                    return false;\r\n                                })\r\n\r\n                                .map((opportunityDetails, key) => {\r\n                                    const oppoID = opportunityDetails.oppo_id;\r\n                                    const job_type = opportunityDetails.job_type;\r\n                                    const job_title = opportunityDetails.job_title;\r\n                                    const company_name = opportunityDetails.companyname;\r\n                                    const job_location = opportunityDetails.job_location;\r\n                                    const salary_status = opportunityDetails.salary_status;\r\n                                    const salary = opportunityDetails.salary;\r\n                                    const test = opportunityDetails.test;\r\n                                    const nationality = opportunityDetails.nationality;\r\n                                    const year_exp = opportunityDetails.year_exp;\r\n                                    const fresh_graduate = opportunityDetails.fresh_graduate;\r\n                                    const education = opportunityDetails.education;\r\n                                    const field_study = opportunityDetails.field_study;\r\n                                    const iv_option = opportunityDetails.iv_option;\r\n                                    const job_desc = opportunityDetails.job_desc;\r\n                                    const partnerLink = \"/partner/\" + opportunityDetails.companyname.toLowerCase().trim().split(/\\s+/).join('-');\r\n                                    const partnerLogo = \"https://www.zom-in.com/images/profileimg/\" + opportunityDetails.company_logo;\r\n\r\n                                    return (\r\n\r\n                                        isCard\r\n                                            ?\r\n                                            <OpportunityShortCard\r\n                                                key={oppoID}\r\n                                                oppoID={oppoID}\r\n                                                cardImage={partnerLogo}\r\n                                                jobType={job_type}\r\n                                                jobTitle={job_title}\r\n                                                jobLocation={job_location}\r\n                                                compName={company_name}\r\n                                                compLink={partnerLink}\r\n                                                salary={salary}\r\n                                                salaryStatus={salary_status}\r\n                                            />\r\n                                            :\r\n                                            <OpportunityLongCard\r\n                                                key={oppoID}\r\n                                                oppoID={oppoID}\r\n                                                cardImage={partnerLogo}\r\n                                                jobType={job_type}\r\n                                                jobTitle={job_title}\r\n                                                jobLocation={job_location}\r\n                                                compName={company_name}\r\n                                                compLink={partnerLink}\r\n                                                salary={salary}\r\n                                                salaryStatus={salary_status}\r\n                                                jobTest={test}\r\n                                                nationality={nationality}\r\n                                                yearExp={year_exp}\r\n                                                freshGraduate={fresh_graduate}\r\n                                                education={education}\r\n                                                fieldStudy={field_study}\r\n                                                ivOption={iv_option}\r\n                                                jobDesc={job_desc}\r\n                                            />\r\n                                    );\r\n                                })}\r\n\r\n\r\n\r\n                        </Row>\r\n\r\n                    </Col>\r\n                    <Col xs={12} sm={12} md={12} lg={2}\r\n                        className=\"sidebarHeader\" >\r\n                        <img src={updateResume} alt=\"\" className=\"w-100\" />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        \r\n        </>\r\n            }\r\n\r\n\r\n            <Footer />\r\n            <ScrollToTop />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Opportunity;","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/OpportunityLanding.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Dashboard.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Interview.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Resume.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Faq.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ForgetPassword.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ResetPassword.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ResetPasswordToken.jsx",["488"],"import React, { Fragment, useEffect, useState } from 'react';\nimport { useParams , } from 'react-router-dom';\n\nimport Axios from 'axios';\nimport { BiError, BiMessageCheck, BiMinusCircle } from \"react-icons/bi\";\nimport { useNavigate } from \"react-router-dom\";\n\n//Toast\nimport { toast } from \"react-toastify\";\n\nfunction ResetPasswordToken() {\n    const navigate = useNavigate();\n    const { token } = useParams();\n    const [validToken, setValidToken] = useState(false);\n\n    useEffect(() => {\n        if (token) {\n            Axios.post(`${process.env.REACT_APP_SERVER_DOMAIN}/verify/resetpassword/token`, {\n                token: token\n            })\n                .then((response) => {\n                    if (response.data.success) {\n                        return [toast.success(\n                            <Fragment>\n                                <BiMessageCheck />\n                                <span>{response.data.success}</span>\n                            </Fragment>\n    \n                        ),setValidToken(true)];\n                    } else if (response.data.warn) {\n                        return toast.warn(\n                            <Fragment>\n                                <BiError />\n                                <span>{response.data.warn}</span>\n                            </Fragment>);\n                    }  else {\n                        return toast.error(\n                            <Fragment>\n                                <BiMinusCircle />\n                                <span>{response.data.error}</span>\n                            </Fragment>);\n                    }\n                }).then(\n                    navigate(\"/signup\")\n                );\n        }\n        else {\n            return toast.error(\n                <Fragment>\n                    <BiMinusCircle />\n                    <span>System is Error. Please Try Again!</span>\n                </Fragment>);\n        }\n    \n    \n    \n        if (token === null) {\n            navigate(\"/\");\n        }\n      }, []);\n\n\n\n    return (\n        <Fragment>\n           <p>{validToken ? \"HEllo\" : \"No token\"}</p>\n        </Fragment>\n    );\n\n\n}\n\nexport default ResetPasswordToken;","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/AboutUs.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Contact.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Settings.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/TermOfUse.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/PrivacyPolicy.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/SpiceIN.jsx",["489"],"import React, { useEffect, useState } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport ReactPaginate from \"react-paginate\";\nimport Axios from \"axios\";\n\nimport { Container, Row, Col, Pagination } from \"react-bootstrap\";\nimport CardSpiceIn from \"../Components/SpiceIN/CardSpiceIn\";\nimport Ads from \"../Components/Ads\";\n\nimport { BiSearchAlt } from \"react-icons/bi\";\n\nfunction SpiceIN() {\n  const [spiceInList, setSpiceInList] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const [pageNumber, setPageNumber] = useState(0);\n  var cardPerPage = 30;\n  const pagesVisited = pageNumber * cardPerPage;\n  const pageCount = Math.ceil(spiceInList.length / cardPerPage);\n  const changePage = ({ selected }) => {\n    setPageNumber(selected);\n  };\n\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/spicein/list`).then(\n      (response) => {\n        setSpiceInList(response.data);\n      }\n    );\n  }, []);\n\n  return (\n    <div>\n      <HelmetProvider>\n        <Helmet>\n          <title>Spice IN | Zom-IN</title>\n        </Helmet>\n      </HelmetProvider>\n\n      <Container fluid className=\" h-100 searchbox\">\n        <Row className=\"py-3 px-5\">\n          <div className=\"input-group \">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Keywords (Category, Industry, ...)\"\n              aria-label=\"Keywords\"\n              aria-describedby=\"button-addon2\"\n              onChange={(event) => {\n                setSearchTerm(event.target.value);\n                console.log(event.target.value);\n              }}\n            />\n            <button\n              className=\"btn btn-outline-primary\"\n              type=\"button\"\n              id=\"button-addon2\"\n            >\n              <BiSearchAlt /> Search\n            </button>\n          </div>\n        </Row>\n      </Container>\n\n      <Container>\n        <Row>\n          <Col sm={10}>\n            <Row xs={1} sm={1} md={3} lg={4} className=\"g-1 py-5\">\n              {spiceInList\n                .slice(pagesVisited, pagesVisited + cardPerPage)\n              \n                .filter(spiceINDetails => {\n                    if (searchTerm === \"\") {\n                        return spiceINDetails\n                    } else if (spiceINDetails.title_spice.toLowerCase().includes(searchTerm.toLowerCase())) {\n                        return spiceINDetails\n                    } else if (spiceINDetails.category_spice.toLowerCase().includes(searchTerm.toLowerCase())) {\n                        return spiceINDetails\n                    }\n                    return false;\n                })\n\n\n                .map((spiceINDetails, key) => {\n                  const spiceID = spiceINDetails.spicein_id;\n                  const category = spiceINDetails.category_spice;\n                  const title = spiceINDetails.title_spice;\n                  const spiceImg = spiceINDetails.img_title_spice;\n                  const url = spiceINDetails.url_spice;\n\n                  return (\n                    <CardSpiceIn\n                      key={spiceID}\n                      category={category}\n                      title={title}\n                      spiceImg={spiceImg}\n                      url={url}\n                    />\n                  );\n                })}\n\n              <div className=\"w-100\">\n                <ReactPaginate\n                  previousLabel={\"Previous\"}\n                  nextLabel={\"Next\"}\n                  pageCount={pageCount}\n                  onPageChange={changePage}\n                  containerClassName={\"paginateBtn\"}\n                  previousLinkClassName={\"previousBtn\"}\n                  nextLinkClassName={\"nextBtn\"}\n                  disabledClassName={\"paginateDisabled\"}\n                  activeClassName={\"paginateActive\"}\n                />\n              </div>\n            </Row>\n          </Col>\n          <Col sm={2} className=\"py-5\">\n            <Ads />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default SpiceIN;\n","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/TermOfBusiness.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/SpiceINLanding.jsx",["490","491","492"],"import React, { useEffect, useState } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { useParams } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport ReactHtmlParser from \"react-html-parser\";\n\n\nimport { Container, Row, Col, Tabs, Tab, Badge } from \"react-bootstrap\";\nimport Name from \"../Components/Name\";\nimport Ads from \"../Components/Ads\";\nimport Footer from \"../Components/Footer\";\nimport ScrollToTop from \"../Components/ScrollToTop\";\n\nfunction SpiceINLanding() {\n    const { spiceinLanding } = useParams();\n    const [spiceIn, setSpiceIn] = useState([]);\n\n    console.log(spiceinLanding)\n\n    useEffect(() => {\n        Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/spicein/list/` +spiceinLanding)\n            .then((response) => {\n                setSpiceIn(response.data);\n                console.log(response.data);\n            });\n    }, [spiceinLanding]);\n\n  return (\n    <div>\n      <HelmetProvider>\n        <Helmet>\n          <title>Spice IN | Zom-IN</title>\n        </Helmet>\n      </HelmetProvider>\n      <Container className=\"content mt-2\">\n        <Row>\n\n        {spiceIn\n        .map((spiceINLandingDetails, key) => {\n            const title = spiceINLandingDetails.title_spice;\n            const spiceImg = `${process.env.REACT_APP_SERVER_DOMAIN}/public/Assests/Images/spiceIN/` + spiceINLandingDetails.img_title_spice;\n            const author = spiceINLandingDetails.user_id;\n            const article = spiceINLandingDetails.editor;\n            \n            const postTime = new Date(spiceINLandingDetails.post_time);\n              const postDate = postTime\n                .toLocaleDateString(\"en-GB\", {\n                  day: \"numeric\",\n                  month: \"short\",\n                  year: \"numeric\",\n                })\n                .replace(/ /g, \" \");\n\n            return (\n                <Col sm={12} md={9} lg={9}>\n            <div className=\"text-center mx-auto px-lg-0 px-md-4 px-0\">\n              <img\n                src={spiceImg}\n                className=\"img-fluid mx-auto border\"\n                alt=\"Spice-In\"\n              />\n            </div>\n\n            <div className=\"text-center mx-auto px-lg-0 px-md-4 px-0\">\n            <h2 class=\"p-0 mx-0 mt-3 fw-bold\">{title}</h2>\n            <p class=\"p-0 my-3\">By <span class=\"fw-bold\">\n            <Name id={author} />\n            </span> | Updated at <span class=\"fw-bold\">{postDate}</span></p>\n            </div>\n            <div className=\"my-4 mx-2\">\n            {ReactHtmlParser(article)}\n            </div>\n          </Col>\n            );\n\n        })\n        }\n          \n          <Col sm={12} md={3} lg={3}>\n            <Ads />\n          </Col>\n        </Row>\n      </Container>\n      <ScrollToTop />\n        <Footer />\n    </div>\n  );\n}\n\nexport default SpiceINLanding;\n","/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ZomAdminUser.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/Application.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ZomAdminPartnerApplication.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ZomAdminStudent.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ZomDashboard.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ZomAdminEmployer.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ZomAdminPartner.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ZomAdminPartnerSavedApplication.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ZomAdminJobApplication.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ZomAdminSpiceIN.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Pages/ZomAdminJobVacancy.jsx",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/ImgError404.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Heading.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Footer.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Helpers/use-input.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Ads.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/ScrollToTop.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/BasicInfo/Employer.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Partner/LandingInfo.js",["493","494","495","496","497","498","499","500"],"import React from 'react';\r\nimport Heading from '../Heading';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { BsArrowReturnRight } from \"react-icons/bs\";\r\nimport { FaCalendarAlt, FaUserTie, FaLanguage, FaRegBuilding } from \"react-icons/fa\";\r\n\r\nfunction LandingInfo() {\r\n    return (\r\n        <div>\r\n            {/* <Heading content=\"Info\"  design=\"h4 mb-4 mb-0\"/>\r\n            <Row>\r\n                <Col sm={12}>\r\n                    <div className=\"text-info h5 mb-1\"><FaCalendarAlt /> Work Hour</div>\r\n                    <div className=\"fs-6 ms-4\"><BsArrowReturnRight /> Monday - Friday</div>\r\n                    <div className=\"fs-6 ms-4\"><BsArrowReturnRight /> 9AM - 5PM</div>\r\n                </Col>\r\n\r\n                <Col sm={12}>\r\n                    <div className=\"text-info h5 mb-1\"><FaUserTie /> Dress Code</div>\r\n                    <div className=\"fs-6 ms-4\"><BsArrowReturnRight /> Casual</div>\r\n                </Col>\r\n\r\n                <Col sm={12}>\r\n                    <div className=\"text-info h5 mb-1\"><FaLanguage /> Spoken Language</div>\r\n                    <div className=\"fs-6 ms-4\"><BsArrowReturnRight /> English</div>\r\n                    <div className=\"fs-6 ms-4\"><BsArrowReturnRight /> Malay</div>\r\n                </Col>\r\n\r\n                <Col sm={12}>\r\n                    <div className=\"text-info h5 mb-1\"><FaRegBuilding /> Company Size</div>\r\n                    <div className=\"fs-6 ms-4\"><BsArrowReturnRight /> 0 - 20</div>\r\n                </Col>\r\n            </Row>\r\n            <hr /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingInfo;\r\n","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Name.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Application/Employer.js",["501","502","503","504","505","506"],"import React, { Fragment, useEffect, useState, useContext } from \"react\";\nimport { AuthContext } from \"../../Helpers/AuthContext\";\nimport Axios from \"axios\";\n\nimport { Row, Col, Button, Nav, Form, Alert, Modal } from \"react-bootstrap\";\nimport briefcaseIcon from \"../../Assests/Images/icon/briefcase.svg\";\nimport {\n  BiTime,\n  BiXCircle,\n  BiCheckCircle,\n  BiMessageCheck,\n  BiMinusCircle,\n  BiErrorCircle,\n} from \"react-icons/bi\";\nimport { toast } from \"react-toastify\";\n\nimport Ads from \"../Ads\";\nimport Profile from \"../Profile\";\nimport Name from \"../Name\";\nimport Heading from \"../Heading\";\n\nfunction Employer() {\n  const { authState, setAuthState } = useContext(AuthContext);\n  const [applicationList, setApplicationList] = useState([]);\n\n  const [pendingNum, setPendingNum] = useState(0);\n  const [shortlistedNum, setShortlistedNum] = useState(0);\n  const [hiredNum, setHiredNum] = useState(0);\n  const [rejectNum, setRejectNum] = useState(0);\n  const [withdrewNum, setWithdrewNum] = useState(0);\n  const [allApplicationNum, setAllApplicationNum] = useState(0);\n\n  const [applicationStatus, setApplicationStatus] = useState(5);\n\n  const [shortlistedModal, setShortlistedModal] = useState(false);\n  const [hiredModal, setHiredModal] = useState(false);\n  const [rejectedModal, setRejectedModal] = useState(false);\n\n  useEffect(() => {\n    Axios.get(\n      `${process.env.REACT_APP_SERVER_DOMAIN}/employerApplication/numberList`,\n      {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n      }\n    ).then((response) => {\n      setPendingNum(response.data[0][0].pendingNum);\n      setRejectNum(response.data[1][0].rejectNum);\n      setHiredNum(response.data[2][0].hiredNum);\n      setShortlistedNum(response.data[3][0].shortlistedNum);\n      setWithdrewNum(response.data[4][0].withdrewNum);\n      setAllApplicationNum(response.data[5][0].allApplicationNum);\n    });\n  }, []);\n\n  useEffect(() => {\n    Axios.get(\n      `${process.env.REACT_APP_SERVER_DOMAIN}/employerApplication/list`,\n      {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n      }\n    ).then((response) => {\n      setApplicationList(response.data);\n    });\n  }, []);\n\n  const appStatus = (status) => {\n    setApplicationStatus(status);\n  };\n\n  const changingStatus = (e) => {\n    if (e.target.value == 1) {\n      setRejectedModal(true);\n    } else if (e.target.value == 2) {\n      setHiredModal(true);\n    } else {\n      setShortlistedModal(true);\n    }\n  };\n\n  return (\n    <div>\n      <Row className=\"mx-auto p-5\">\n        <Col lg={10} md={10} sm={12}>\n          <ul className=\"nav nav-fill nav-tabs\" id=\"appTab1\" role=\"tablist\">\n            <Nav.Item>\n              <Nav.Link eventKey=\"link-0\" onClick={() => appStatus(5)}>\n                All<span>({allApplicationNum})</span>\n              </Nav.Link>\n            </Nav.Item>\n            {pendingNum > 0 && (\n              <Nav.Item>\n                <Nav.Link eventKey=\"link-1\" onClick={() => appStatus(0)}>\n                  Pending<span>({pendingNum})</span>\n                </Nav.Link>\n              </Nav.Item>\n            )}\n            {shortlistedNum > 0 && (\n              <Nav.Item>\n                <Nav.Link eventKey=\"link-2\" onClick={() => appStatus(3)}>\n                  Shortlisted<span>({shortlistedNum})</span>\n                </Nav.Link>\n              </Nav.Item>\n            )}\n            {hiredNum > 0 && (\n              <Nav.Item>\n                <Nav.Link eventKey=\"link-3\" onClick={() => appStatus(2)}>\n                  Hired<span>({hiredNum})</span>\n                </Nav.Link>\n              </Nav.Item>\n            )}\n            {rejectNum > 0 && (\n              <Nav.Item>\n                <Nav.Link eventKey=\"link-4\" onClick={() => appStatus(1)}>\n                  Rejected<span>({rejectNum})</span>\n                </Nav.Link>\n              </Nav.Item>\n            )}\n            {withdrewNum > 0 && (\n              <Nav.Item>\n                <Nav.Link eventKey=\"link-5\" onClick={() => appStatus(4)}>\n                  Withdrew<span>({withdrewNum})</span>\n                </Nav.Link>\n              </Nav.Item>\n            )}\n          </ul>\n\n          <div className=\"tab-content\" id=\"appTabContent\">\n            <div\n              className=\"tab-pane fade show active\"\n              id=\"appApplied\"\n              role=\"tabpanel\"\n              aria-labelledby=\"applied-tab\"\n            >\n              {applicationList\n                .filter((applicationDetails) => {\n                  if (applicationStatus === \"\") {\n                    return applicationDetails;\n                  } else if (applicationStatus === 5) {\n                    return applicationDetails;\n                  } else if (\n                    applicationDetails.approve_candidate === applicationStatus\n                  ) {\n                    return applicationDetails;\n                  }\n                  return false;\n                })\n\n                .map((applicationDetails, key) => {\n                  const jobTitle = applicationDetails.job_title;\n                  const candidateID = applicationDetails.candidate_user_id;\n                  const jobType = applicationDetails.job_type;\n                  const applicationStatus =\n                    applicationDetails.approve_candidate;\n                  const withdrawReason = applicationDetails.withdrawReason;\n\n                  let jobTypeBG;\n                  switch (jobType) {\n                    case \"Contract\":\n                      jobTypeBG = \"bg-contract\";\n                      break;\n                    case \"Internship\":\n                      jobTypeBG = \"bg-internship\";\n                      break;\n                    case \"Part Time\":\n                      jobTypeBG = \"bg-partTime\";\n                      break;\n                    default:\n                      jobTypeBG = \"bg-fullTime\";\n                  }\n\n                  let status;\n                  let statusBG;\n                  let statusIcon;\n                  switch (applicationStatus) {\n                    case 4:\n                      status = \"Withdrew\";\n                      statusBG = \"link-danger\";\n                      statusIcon = <BiMinusCircle className=\"icon\" />;\n                      break;\n                    case 3:\n                      status = \"Shortlisted\";\n                      statusBG = \"link-warning\";\n                      statusIcon = <BiTime className=\"icon\" />;\n                      break;\n                    case 2:\n                      status = \"Accepted\";\n                      statusBG = \"link-success\";\n                      statusIcon = <BiCheckCircle className=\"icon\" />;\n                      break;\n                    case 1:\n                      status = \"Rejected\";\n                      statusBG = \"link-danger\";\n                      statusIcon = <BiXCircle className=\"icon\" />;\n                      break;\n                    default:\n                      status = \"Pending\";\n                      statusBG = \"link-warning\";\n                      statusIcon = <BiTime className=\"icon\" />;\n                  }\n\n                  return (\n                    <>\n                      <Row className=\"mx-auto my-3 p-3 border-bottom\">\n                        <Col sm={2} className=\"d-none d-md-none d-lg-block\">\n                          <Profile\n                            id={candidateID}\n                            design=\"rounded-circle\"\n                            width=\"100\"\n                            height=\"100\"\n                          />\n                        </Col>\n                        <Col xs={12} sm={8}>\n                          <p className=\"m-0\">{jobTitle}</p>\n                          <p className=\"m-0\">\n                            <Name id={candidateID} />\n                          </p>\n                          <p>\n                            <span\n                              className={`badge rounded-pill text-dark ${jobTypeBG}`}\n                            >\n                              <img\n                                alt=\"briefcaseIcon\"\n                                className=\"icon\"\n                                src={briefcaseIcon}\n                              />\n                              {jobType}\n                            </span>\n                          </p>\n                          {status === \"Withdrew\" && (\n                            <Alert variant=\"danger\">\n                              <BiErrorCircle /> Withdrew Reason:{\" \"}\n                              {withdrawReason}\n                            </Alert>\n                          )}\n                        </Col>\n                        <Col sm={2} className=\"text-center\">\n                          <p className={statusBG}>\n                            {\" \"}\n                            {statusIcon} {status}\n                          </p>\n                          {status === \"Shortlisted\" || status === \"Pending\" ? (\n                            <Form.Select\n                              defaultValue={applicationStatus}\n                              onChange={changingStatus}\n                            >\n                              <option value=\"0\">Pending</option>\n                              <option value=\"3\">Shortlisted</option>\n                              <option value=\"2\">Hired</option>\n                              <option value=\"1\">Rejected</option>x\n                            </Form.Select>\n                          ) : null}\n                        </Col>\n                      </Row>\n                    </>\n                  );\n                })}\n            </div>\n          </div>\n\n          {hiredModal === true && (\n            <>\n              <Modal\n                show={hiredModal}\n                onHide={() => setHiredModal(false)}\n                scrollable\n                size=\"md\"\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title>\n                    <Heading content=\"Hiring the candidate\" design=\"h4\" />\n                  </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  Once you choose \"hired\", an email will be sent to notify the\n                  candidate. Do you want to proceed?\n                </Modal.Body>\n                <Modal.Footer>\n                  <Button\n                    variant=\"secondary\"\n                    onClick={() => setHiredModal(false)}\n                  >\n                    Close\n                  </Button>\n                  <Button variant=\"primary\">Understood</Button>\n                </Modal.Footer>\n              </Modal>\n            </>\n          )}\n\n          {rejectedModal === true && (\n            <>\n              <Modal\n                show={rejectedModal}\n                onHide={() => setRejectedModal(false)}\n                scrollable\n                size=\"md\"\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title>\n                    <Heading content=\"Rejecting the candidate\" design=\"h4\" />\n                  </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                Once you choose \"rejected\", an email will be sent to notify the\n                  candidate. Do you want to proceed?\n                </Modal.Body>\n                <Modal.Footer>\n                  <Button\n                    variant=\"secondary\"\n                    onClick={() => setRejectedModal(false)}\n                  >\n                    Close\n                  </Button>\n                  <Button variant=\"primary\">Understood</Button>\n                </Modal.Footer>\n              </Modal>\n            </>\n          )}\n\n\n          {shortlistedModal === true && (\n            <>\n              <Modal\n                show={shortlistedModal}\n                onHide={() => setShortlistedModal(false)}\n                scrollable\n                size=\"md\"\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title>\n                    <Heading content=\"Shortlisting the candidate\" design=\"h4\" />\n                  </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                Once you choose \"shortlisting\", an email will be sent to notify the\n                  candidate. Do you want to proceed?\n                </Modal.Body>\n                <Modal.Footer>\n                  <Button\n                    variant=\"secondary\"\n                    onClick={() => setShortlistedModal(false)}\n                  >\n                    Close\n                  </Button>\n                  <Button variant=\"primary\">Understood</Button>\n                </Modal.Footer>\n              </Modal>\n            </>\n          )}\n        </Col>\n        <Col lg={2} md={2} sm={12} className=\"px-1 py-3 my-1 mx-auto\">\n          <Ads />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default Employer;\n","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Application/User.js",["507"],"import React, { Fragment, useEffect, useState, useContext } from \"react\";\nimport { AuthContext } from \"../../Helpers/AuthContext\";\nimport Axios from \"axios\";\n\nimport { Row, Col, Button, Nav, Form, Alert } from \"react-bootstrap\";\nimport briefcaseIcon from \"../../Assests/Images/icon/briefcase.svg\";\nimport {\n  BiTime,\n  BiXCircle,\n  BiCheckCircle,\n  BiMessageCheck,\n  BiMinusCircle,\n  BiErrorCircle,\n} from \"react-icons/bi\";\nimport { toast } from \"react-toastify\";\n\nimport Ads from \"../Ads\";\nimport Profile from \"../Profile\";\nimport Name from \"../Name\";\nimport Heading from \"../Heading\";\n\nfunction User() {\n  const { authState, setAuthState } = useContext(AuthContext);\n  const [applicationList, setApplicationList] = useState([]);\n\n  const [pendingNum, setPendingNum] = useState(0);\n  const [shortlistedNum, setShortlistedNum] = useState(0);\n  const [hiredNum, setHiredNum] = useState(0);\n  const [rejectNum, setRejectNum] = useState(0);\n  const [withdrewNum, setWithdrewNum] = useState(0);\n  const [allApplicationNum, setAllApplicationNum] = useState(0);\n\n  const [withdrawModal, setWithdrawModal] = useState(false);\n  const [requestWithdraw, setRequestWithdraw] = useState(\"\");\n  const [applicationStatus, setApplicationStatus] = useState(5);\n\n  useEffect(() => {\n    Axios.get(\n      `${process.env.REACT_APP_SERVER_DOMAIN}/userApplication/numberList`,\n      {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n      }\n    ).then((response) => {\n      setPendingNum(response.data[0][0].pendingNum);\n      setRejectNum(response.data[1][0].rejectNum);\n      setHiredNum(response.data[2][0].hiredNum);\n      setShortlistedNum(response.data[3][0].shortlistedNum);\n      setWithdrewNum(response.data[4][0].withdrewNum);\n      setAllApplicationNum(response.data[5][0].allApplicationNum);\n    });\n  }, []);\n\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/userApplication/list`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\"),\n      },\n    }).then((response) => {\n      setApplicationList(response.data);\n    });\n  }, []);\n\n  const appStatus = (status) => {\n    setApplicationStatus(status);\n  };\n\n  let requestWithdrawFormIsValid = false;\n\n  if (requestWithdraw !== \"\") {\n    requestWithdrawFormIsValid = true;\n  }\n\n  const requestWithdrawFormSubmissionHandler = (event) => {\n    event.preventDefault();\n    const withdrewID = event.target[0].value;\n\n    if (requestWithdraw === \"\") {\n      return;\n    } else {\n      Axios.patch(\n        `${process.env.REACT_APP_SERVER_DOMAIN}/userApplication/withdraw`,\n        {\n          grabID: withdrewID,\n          requestWithdraw: requestWithdraw,\n        },\n        {\n          headers: {\n            accessToken: localStorage.getItem(\"accessToken\"),\n          },\n        }\n      ).then((response) => {\n        if (response.data.error) {\n          return [\n            toast.error(\n              <Fragment>\n                <BiMinusCircle /> <span>{response.data.error}</span>\n              </Fragment>\n            ),\n            setWithdrawModal(false),\n          ];\n        } else {\n          return [\n            setWithdrawModal(false),\n            toast.success(\n              <Fragment>\n                <BiMessageCheck /> <span>{response.data.success}</span>\n              </Fragment>\n            ),\n\n            setApplicationList(response.data.list),\n          ];\n        }\n      });\n    }\n    setRequestWithdraw(\"\");\n  };\n\n  return (\n    <AuthContext.Provider value={{ authState, setAuthState }}>\n      <div>\n        <Row className=\"mx-auto p-5\">\n          <Col lg={10} md={10} sm={12}>\n            <ul className=\"nav nav-fill nav-tabs\" id=\"appTab1\" role=\"tablist\">\n              <Nav.Item>\n                <Nav.Link eventKey=\"link-0\" onClick={() => appStatus(5)}>\n                  All<span>({allApplicationNum})</span>\n                </Nav.Link>\n              </Nav.Item>\n              {pendingNum > 0 && (\n                <Nav.Item>\n                  <Nav.Link eventKey=\"link-1\" onClick={() => appStatus(0)}>\n                    Pending<span>({pendingNum})</span>\n                  </Nav.Link>\n                </Nav.Item>\n              )}\n              {shortlistedNum > 0 && (\n                <Nav.Item>\n                  <Nav.Link eventKey=\"link-2\" onClick={() => appStatus(3)}>\n                    Shortlisted<span>({shortlistedNum})</span>\n                  </Nav.Link>\n                </Nav.Item>\n              )}\n              {hiredNum > 0 && (\n                <Nav.Item>\n                  <Nav.Link eventKey=\"link-3\" onClick={() => appStatus(2)}>\n                    Hired<span>({hiredNum})</span>\n                  </Nav.Link>\n                </Nav.Item>\n              )}\n              {rejectNum > 0 && (\n                <Nav.Item>\n                  <Nav.Link eventKey=\"link-4\" onClick={() => appStatus(1)}>\n                    Rejected<span>({rejectNum})</span>\n                  </Nav.Link>\n                </Nav.Item>\n              )}\n              {withdrewNum > 0 && (\n                <Nav.Item>\n                  <Nav.Link eventKey=\"link-5\" onClick={() => appStatus(4)}>\n                    Withdrew<span>({withdrewNum})</span>\n                  </Nav.Link>\n                </Nav.Item>\n              )}\n            </ul>\n\n            <div className=\"tab-content\" id=\"appTabContent\">\n              <div\n                className=\"tab-pane fade show active\"\n                id=\"appApplied\"\n                role=\"tabpanel\"\n                aria-labelledby=\"applied-tab\"\n              >\n                {applicationList\n                  .filter((applicationDetails) => {\n                    if (applicationStatus === \"\") {\n                      return applicationDetails;\n                    } else if (applicationStatus === 5) {\n                      return applicationDetails;\n                    } else if (\n                      applicationDetails.approve_candidate === applicationStatus\n                    ) {\n                      return applicationDetails;\n                    }\n                    return false;\n                  })\n\n                  .map((applicationDetails, key) => {\n                    const jobTitle = applicationDetails.job_title;\n                    const compName = applicationDetails.user_id;\n                    const jobType = applicationDetails.job_type;\n                    const applicationStatus =\n                      applicationDetails.approve_candidate;\n                    const grabID = applicationDetails.grab_oppo_id;\n                    const withdrawReason = applicationDetails.withdrawReason;\n\n                    let jobTypeBG;\n                    switch (jobType) {\n                      case \"Contract\":\n                        jobTypeBG = \"bg-contract\";\n                        break;\n                      case \"Internship\":\n                        jobTypeBG = \"bg-internship\";\n                        break;\n                      case \"Part Time\":\n                        jobTypeBG = \"bg-partTime\";\n                        break;\n                      default:\n                        jobTypeBG = \"bg-fullTime\";\n                    }\n\n                    let status;\n                    let statusBG;\n                    let statusIcon;\n                    switch (applicationStatus) {\n                      case 4:\n                        status = \"Withdrew\";\n                        statusBG = \"link-danger\";\n                        statusIcon = <BiMinusCircle className=\"icon\" />;\n                        break;\n                      case 3:\n                        status = \"Shortlisted\";\n                        statusBG = \"link-warning\";\n                        statusIcon = <BiTime className=\"icon\" />;\n                        break;\n                      case 2:\n                        status = \"Accepted\";\n                        statusBG = \"link-success\";\n                        statusIcon = <BiCheckCircle className=\"icon\" />;\n                        break;\n                      case 1:\n                        status = \"Rejected\";\n                        statusBG = \"link-danger\";\n                        statusIcon = <BiXCircle className=\"icon\" />;\n                        break;\n                      default:\n                        status = \"Pending\";\n                        statusBG = \"link-warning\";\n                        statusIcon = <BiTime className=\"icon\" />;\n                    }\n\n                    return (\n                      <>\n                        <Row className=\"mx-auto my-3 p-3 border-bottom\">\n                          <Col sm={2} className=\"d-none d-md-none d-lg-block\">\n                            <Profile\n                              id={compName}\n                              design=\"rounded-circle\"\n                              width=\"100\"\n                              height=\"100\"\n                            />\n                          </Col>\n                          <Col xs={12} sm={8}>\n                            <p className=\"m-0\">{jobTitle}</p>\n                            <p className=\"m-0\">\n                              <Name id={compName} />\n                            </p>\n                            <p>\n                              <span\n                                className={`badge rounded-pill text-dark ${jobTypeBG}`}\n                              >\n                                <img\n                                  alt=\"briefcaseIcon\"\n                                  className=\"icon\"\n                                  src={briefcaseIcon}\n                                />\n                                {jobType}\n                              </span>\n                            </p>\n                            {status === \"Withdrew\" && (\n                              <Alert variant=\"danger\">\n                                <BiErrorCircle /> Withdrew Reason:{\" \"}\n                                {withdrawReason}\n                              </Alert>\n                            )}\n                          </Col>\n                          <Col sm={2} className=\"text-center\">\n                            <p className={statusBG}>\n                              {\" \"}\n                              {statusIcon} {status}\n                            </p>\n                            {status === \"Shortlisted\" ||\n                            status === \"Pending\" ? (\n                              <Button\n                                variant=\"danger\"\n                                onClick={() => setWithdrawModal(true)}\n                                data-bs-toggle=\"modal\"\n                                data-bs-target={`#col-${grabID}`}\n                              >\n                                Withdraw\n                              </Button>\n                            ) : null}\n                          </Col>\n                          <div\n                            className=\"modal fade\"\n                            id={`col-${grabID}`}\n                            data-bs-backdrop=\"static\"\n                            data-bs-keyboard=\"false\"\n                            tabIndex=\"-1\"\n                            aria-labelledby=\"staticBackdropLabel\"\n                            aria-hidden=\"true\"\n                          >\n                            <div className=\"modal-dialog modal-dialog-scrollable\">\n                              <div className=\"modal-content\">\n                                <div className=\" modal-header\">\n                                  <Heading\n                                    content=\"Request Application Withdrawal\"\n                                    design=\"h5\"\n                                  />\n                                  <button\n                                    type=\"button\"\n                                    id=\"closeButton\"\n                                    className=\"btn-close\"\n                                    data-bs-dismiss=\"modal\"\n                                    aria-label=\"Close\"\n                                  ></button>\n                                </div>\n                                <Form\n                                  onSubmit={\n                                    requestWithdrawFormSubmissionHandler\n                                  }\n                                >\n                                  <div className=\"modal-body\">\n                                    <Col sm={12} className=\"form-group mb-3\">\n                                      <Form.Control\n                                        type=\"hidden\"\n                                        name=\"grabID\"\n                                        value={grabID}\n                                      />\n\n                                      <label\n                                        htmlFor=\"withdrawReason\"\n                                        className=\"required\"\n                                      >\n                                        Reason for withdrawal\n                                      </label>\n                                      <Form.Check\n                                        type=\"radio\"\n                                        id=\"default-radio\"\n                                        label=\"I secured an offer from this website\"\n                                        value=\"I secured an offer from this website\"\n                                        name=\"reqWithdraw\"\n                                        onClick={(e) =>\n                                          setRequestWithdraw(e.target.value)\n                                        }\n                                      />\n                                      <Form.Check\n                                        type=\"radio\"\n                                        id=\"default-radio\"\n                                        label=\"I secured an offer from other job portal\"\n                                        value=\"I secured an offer from other job portal\"\n                                        name=\"reqWithdraw\"\n                                        onClick={(e) =>\n                                          setRequestWithdraw(e.target.value)\n                                        }\n                                      />\n                                      <Form.Check\n                                        type=\"radio\"\n                                        id=\"default-radio\"\n                                        label=\"I secured an offer offline\"\n                                        value=\"I secured an offer offline\"\n                                        name=\"reqWithdraw\"\n                                        onClick={(e) =>\n                                          setRequestWithdraw(e.target.value)\n                                        }\n                                      />\n                                      <Form.Check\n                                        type=\"radio\"\n                                        id=\"default-radio\"\n                                        label=\"I accidentally applied for the job\"\n                                        value=\"I accidentally applied for the job\"\n                                        name=\"reqWithdraw\"\n                                        onClick={(e) =>\n                                          setRequestWithdraw(e.target.value)\n                                        }\n                                      />\n\n                                      <Form.Check\n                                        type=\"radio\"\n                                        id=\"default-radio\"\n                                        label=\"Other\"\n                                        value=\"Other\"\n                                        name=\"reqWithdraw\"\n                                        onClick={(e) =>\n                                          setRequestWithdraw(e.target.value)\n                                        }\n                                      />\n                                    </Col>\n                                  </div>\n                                  <div className=\"modal-footer\">\n                                    <Button\n                                      variant=\"danger\"\n                                      type=\"submit\"\n                                      disabled={!requestWithdrawFormIsValid}\n                                    >\n                                      Withdraw\n                                    </Button>\n                                  </div>\n                                </Form>\n                              </div>\n                            </div>\n                          </div>\n                        </Row>\n                      </>\n                    );\n                  })}\n              </div>\n            </div>\n          </Col>\n          <Col lg={2} md={2} sm={12} className=\"px-1 py-3 my-1 mx-auto\">\n            <Ads />\n          </Col>\n        </Row>\n      </div>\n    </AuthContext.Provider>\n  );\n}\n\nexport default User;\n","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/SpiceIN/CardSpiceIn.js",["508"],"import React from \"react\";\n\nimport { Card, Button } from \"react-bootstrap\";\n\nfunction CardSpiceIn(props) {\n\n    const title = props.title;\n    const category = props.category;\n    const spiceImg = `${process.env.REACT_APP_SERVER_DOMAIN}/public/Assests/Images/spiceIN/` +\n    props.spiceImg;\n    var spiceINLink = \"/spiceIn/\" + props.url;\n\n\n  return (\n    <Card className=\"position-relative my-2 mx-4 p-0 pt-0 pb-2\">\n      <a\n        href={spiceINLink}\n        className=\"text-decoration-none text-dark m-0 p-0\"\n      >\n        <img\n          src={spiceImg}\n          className=\"img-fluid mx-auto mt-0 my-1 roundedImageCard border\"\n          alt=\"Spice-In\"\n        />\n        <div className=\"m-2\">\n          <p className=\" px-3 py-1 m-0 badge rounded-pill alert-primary fs-6 fw-normal text-dark\">\n            {category}\n          </p>\n        </div>\n        <p className=\"p-0 my-0 mx-2 fs-5 lh-sm fw-bold text-truncate-3\">\n          {title}\n        </p>\n      </a>\n    </Card>\n  );\n}\n\nexport default CardSpiceIn;\n","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Settings/Password.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Settings/SubMenu.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/AboutUs/ActivityEvent.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/AboutUs/Team.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/AboutUs/ZomINBg.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/AboutUs/AboutZomIN.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Email.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Contact.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Partner/LandingSidebar.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Interview/Employer.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Interview/User.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Dashboard/Employer.js",["509"],"import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\n\nimport { Row, Col } from \"react-bootstrap\";\n\nimport { BiChevronsRight } from \"react-icons/bi\";\nimport briefcaseIcon from \"../../Assests/Images/icon/briefcase.svg\";\nimport Ads from \"../Ads\";\n\nimport Heading from \"../Heading\";\n\nfunction Employer() {\n  const [pendingNum, setPendingNum] = useState(0);\n  const [shortlistedNum, setShortlistedNum] = useState(0);\n  const [hiredNum, setHiredNum] = useState(0);\n  const [rejectNum, setRejectNum] = useState(0);\n\n  useEffect(() => {\n    Axios.get(\n      `${process.env.REACT_APP_SERVER_DOMAIN}/dashboard/jobapplicationNum`,\n      {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n      }\n    ).then((response) => {\n      setPendingNum(response.data[0][0].pendingNum);\n      setRejectNum(response.data[1][0].rejectNum);\n      setHiredNum(response.data[2][0].hiredNum);\n      setShortlistedNum(response.data[3][0].shortlistedNum);\n    });\n  }, []);\n\n  return (\n    <Row>\n      <Col lg={10} md={12} sm={12} className=\"mx-auto my-3 p-5\">\n        <Col lg={12} md={12} sm={12} className=\"mx-auto my-3\">\n          <Row className=\"m-1 text-center text-light\">\n            <Col className=\"border border-0 rounded bg-warning mx-1 p-2\">\n              <h3>{pendingNum}</h3>\n              <h6>\n                <span className=\"d-none d-sm-block\">Application</span> Pending\n              </h6>\n            </Col>\n            <Col className=\"border border-0 rounded bg-primary mx-1 p-2\">\n              <h3>{shortlistedNum}</h3>\n              <h6>\n                <span className=\"d-none d-sm-block\">Application</span>{\" \"}\n                Shortlisted\n              </h6>\n            </Col>\n            <Col className=\"border border-0 rounded bg-danger mx-1 p-2\">\n              <h3>{rejectNum}</h3>\n              <h6>\n                <span className=\"d-none d-sm-block\">Application</span> Rejected\n              </h6>\n            </Col>\n            <Col className=\"border border-0 rounded bg-success mx-1 p-2\">\n              <h3>{hiredNum}</h3>\n              <h6>\n                <span className=\"d-none d-sm-block\">Application</span> Hired\n              </h6>\n            </Col>\n          </Row>\n        </Col>\n\n        <Col\n          lg={12}\n          md={12}\n          sm={12}\n          className=\"mx-auto my-3 border rounded p-2\"\n        >\n          <Row>\n            <Col sm={8}>\n              <Heading content=\"Latest Applicant\" design=\"h5\" />\n            </Col>\n            <Col sm={4} className=\"text-end fs-6\">\n              <p className=\"m-0\" role=\"button\">\n                View More <BiChevronsRight />\n              </p>\n            </Col>\n          </Row>\n        </Col>\n\n        <Col\n          lg={12}\n          md={12}\n          sm={12}\n          className=\"mx-auto my-3 border rounded p-2\"\n        >\n          <Row>\n            <Col sm={8}>\n              <Heading content=\"Upcoming Interview\" design=\"h5\" />\n            </Col>\n            <Col sm={4} className=\"text-end fs-6\">\n              <p className=\"m-0\" role=\"button\">\n                View More <BiChevronsRight />\n              </p>\n            </Col>\n          </Row>\n        </Col>\n      </Col>\n      <Col lg={2} md={12} sm={12} className=\"p-4\">\n        <Ads />\n      </Col>\n    </Row>\n  );\n}\n\nexport default Employer;\n","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Dashboard/User.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/LandingJD.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/ApplyJob.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/OpportunityShortCard.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/LandingCompany.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/LandingTop.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/OpportunityLongCard.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/Employer.js",["510","511"],"import React, { useState, useEffect, useContext } from \"react\";\nimport Axios from \"axios\";\n\nimport { Container, Row, Col, Button, Modal } from \"react-bootstrap\";\nimport { BiSearchAlt } from \"react-icons/bi\";\nimport OpportunityLongCard from \"./OpportunityLongCard\";\nimport Heading from \"../Heading\";\nimport FullTime from \"./FullTime\";\nimport Contract from \"./Contract\";\nimport PartTime from \"./PartTime\";\n\nimport updateResume from \"../../Assests/Images/banner/SideBar/updateResume.jpeg\";\nimport Internship from \"./Internship\";\nfunction Employer() {\n  const [opportunityList, setOpportunityList] = useState([]);\n  const [stateList, setStateList] = useState([]);\n  const [show, setShow] = useState(false);\n  const [currentJobType, setCurrentJobType] = useState(\"Full Time\");\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchLocationTerm, setSearchLocationTerm] = useState(\"\");\n  const [searchEducationTerm, setSearchEducationTerm] = useState(\"\");\n  const [searchJobTypeTerm, setSearchJobTypeTerm] = useState(\"\");\n\n  useEffect(() => {\n    Axios.get(\n      `${process.env.REACT_APP_SERVER_DOMAIN}/opportunity/employerlist`,\n      {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n      }\n    ).then((response) => {\n      setOpportunityList(response.data);\n    });\n  }, []);\n\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/stateLocation`).then(\n      (response) => {\n        setStateList(response.data);\n      }\n    );\n  }, []);\n\n  const onClickJobType = (currentJobType) => {\n    setCurrentJobType(currentJobType);\n\n    let jobTypeBG;\n    switch (currentJobType) {\n      case \"Contract\":\n        jobTypeBG = \"bg-contract\";\n        break;\n      case \"Internship\":\n        jobTypeBG = \"bg-internship\";\n        break;\n      case \"Part Time\":\n        jobTypeBG = \"bg-partTime\";\n        break;\n      default:\n        jobTypeBG = \"bg-fullTime\";\n    }\n  };\n\n  return (\n    <>\n      <Container fluid className=\"h-100 searchbox\">\n        <Row className=\"py-3 px-5\">\n          <div className=\"input-group \">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Keywords (Marketing, Internship, ...)\"\n              aria-label=\"Keywords\"\n              aria-describedby=\"button-addon2\"\n              onChange={(event) => {\n                setSearchTerm(event.target.value);\n              }}\n            />\n            <button\n              className=\"btn btn-outline-primary\"\n              type=\"button\"\n              id=\"button-addon2\"\n            >\n              <BiSearchAlt /> Search\n            </button>\n          </div>\n          <div className=\"d-flex flex-wrap align-items-center  align-content-center  filterbox\">\n            <div>\n              <select\n                defaultValue={\"DEFAULT\"}\n                className=\"form-select form-select-sm\"\n                aria-label=\"Default select example\"\n                onChange={(event) => {\n                  setSearchLocationTerm(event.target.value);\n                }}\n              >\n                <option value=\"\"> Location </option>\n                {stateList.map((stateList, key) => {\n                  const childName = stateList.child_name;\n                  return <option value={childName}> {childName} </option>;\n                })}\n              </select>\n            </div>\n            <div>\n              <select\n                defaultValue={\"DEFAULT\"}\n                className=\"form-select form-select-sm\"\n                aria-label=\"Default select example\"\n                onChange={(event) => {\n                  setSearchEducationTerm(event.target.value);\n                }}\n              >\n                <option value=\"\"> Education </option>\n                <option value=\"Bachelor's Degree\"> Bachelor's Degree </option>\n                <option value=\"Diploma\"> Diploma </option>\n                <option value=\"Sabah\"> Sabah </option>\n              </select>\n            </div>\n\n            <div>\n              <select\n                defaultValue={\"DEFAULT\"}\n                className=\"form-select form-select-sm\"\n                aria-label=\"Default select example\"\n                onChange={(event) => {\n                  setSearchJobTypeTerm(event.target.value);\n                }}\n              >\n                <option value=\"\"> Job Type </option>\n                <option value=\"Full Time\"> Full Time </option>\n                <option value=\"Internship\"> Internship </option>\n                <option value=\"Contract\"> Contract </option>\n                <option value=\"Part Time\">Part Time</option>\n              </select>\n            </div>\n            {/* <div>\n                            <select defaultValue={'DEFAULT'}\n                                className=\"form-select form-select-sm\"\n                                aria-label=\"Default select example\"\n                                onChange={(event) => {\n                                    setSearchSalaryTerm(event.target.value);\n                            }} >\n                                <option value=\"\"> Salary Range </option>\n                                <option value=\"RM 2001 and RM 3000\" > RM 2001 and RM 3000 </option>\n                                <option value=\"Selangor\" > Selangor </option>\n                                <option value=\"Sabah\" > Sabah </option>\n                            </select>\n                        </div> */}\n            {/* <div className=\"form-check form-switch me-1\">\n                            <input\n                                className=\"form-check-input\"\n                                type=\"checkbox\"\n                                id=\"flexSwitchCheckDefault\"\n                                value=\"1\" />\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"> <img\n                                alt=\"zom-in-fresh-graduate-icon\"\n                                className=\"icon\"\n                                src=\"https://www.zom-in.com/images/icon/graduated.svg\"\n                            /> Fresh Graduates</label>\n                        </div> */}\n            {/* <div className=\"form-check form-switch\">\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"> <img\n                                alt=\"zom-in-fresh-graduate-icon\"\n                                className=\"icon\"\n                                src=\"https://www.zom-in.com/images/icon/opportunity.svg\"\n                            /> New Job Posted</label>\n                        </div> */}\n          </div>\n        </Row>\n      </Container>\n\n      <Container className=\"py-3 px-3\">\n        <Row>\n          <Col xs={12} sm={12} md={12} lg={10}>\n            <Row>\n              <div className=\"text-end align-items-center\">\n                <Button variant=\"primary\" onClick={() => setShow(true)}>\n                  Add Job Posting\n                </Button>\n\n                <Modal\n                  show={show}\n                  onHide={() => setShow(false)}\n                  scrollable\n                  size=\"md\"\n                >\n                  <Modal.Header closeButton>\n                    <Modal.Title>\n                      <Heading content=\"Create Job\" />\n                    </Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body>\n                    <Row className=\"text-center\">\n                      <Col\n                        role=\"button\"\n                        className={`${\n                          currentJobType === \"Full Time\" && \"bg-fullTime\"\n                        } rounded m-1 p-1`}\n                        onClick={(e) => onClickJobType(\"Full Time\")}\n                      >\n                        Full Time\n                      </Col>\n                      <Col\n                        role=\"button\"\n                        className={`${\n                          currentJobType === \"Internship\" && \"bg-internship\"\n                        } rounded m-1 p-1`}\n                        onClick={(e) => onClickJobType(\"Internship\")}\n                      >\n                        Internship\n                      </Col>\n                      <Col\n                        role=\"button\"\n                        className={`${\n                          currentJobType === \"Contract\" && \"bg-contract\"\n                        } rounded m-1 p-1`}\n                        onClick={(e) => onClickJobType(\"Contract\")}\n                      >\n                        Contract\n                      </Col>\n                      <Col\n                        role=\"button\"\n                        className={`${\n                          currentJobType === \"Part Time\" && \"bg-partTime\"\n                        } rounded m-1 p-1`}\n                        onClick={(e) => onClickJobType(\"Part Time\")}\n                      >\n                        Part Time\n                      </Col>\n                    </Row>\n\n                    {currentJobType === \"Full Time\" && (\n                      <FullTime  show={show} setShow={setShow} />\n                    )}\n\n                    {currentJobType === \"Internship\" && (\n                      <Internship />\n                    )}\n\n                    {currentJobType === \"Contract\" && (\n                      <Contract />\n                    )}\n\n                    {currentJobType === \"Part Time\" && (\n                      <PartTime />\n                    )}\n                  </Modal.Body>\n                  <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShow(false)}>\n                      Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={() => setShow(false)}>\n                      Create Job\n                    </Button>\n                  </Modal.Footer>\n                </Modal>\n              </div>\n            </Row>\n            <Row xs={1} sm={1} md={2} lg={2} className=\"g-1 py-1 px-1 mt-4\">\n              {opportunityList\n                .filter((opportunityDetails) => {\n                  if (searchTerm === \"\") {\n                    return opportunityDetails;\n                  } else if (\n                    opportunityDetails.job_title\n                      .toLowerCase()\n                      .includes(searchTerm.toLowerCase()) ||\n                    opportunityDetails.job_type\n                      .toLowerCase()\n                      .includes(searchTerm.toLowerCase()) ||\n                    opportunityDetails.company_name\n                      .toLowerCase()\n                      .includes(searchTerm.toLowerCase()) ||\n                    opportunityDetails.job_location\n                      .toLowerCase()\n                      .includes(searchTerm.toLowerCase())\n                  ) {\n                    return opportunityDetails;\n                  }\n                  return false;\n                })\n\n                .filter((opportunityDetails) => {\n                  if (searchLocationTerm === \"\") {\n                    return opportunityDetails;\n                  } else if (\n                    opportunityDetails.job_location\n                      .toLowerCase()\n                      .includes(searchLocationTerm.toLowerCase())\n                  ) {\n                    return opportunityDetails;\n                  }\n                  return false;\n                })\n\n                .filter((opportunityDetails) => {\n                  if (searchEducationTerm === \"\") {\n                    return opportunityDetails;\n                  } else if (\n                    opportunityDetails.education\n                      .toLowerCase()\n                      .includes(searchEducationTerm.toLowerCase())\n                  ) {\n                    return opportunityDetails;\n                  }\n                  return false;\n                })\n\n                .filter((opportunityDetails) => {\n                  if (searchJobTypeTerm === \"\") {\n                    return opportunityDetails;\n                  } else if (\n                    opportunityDetails.job_type\n                      .toLowerCase()\n                      .includes(searchJobTypeTerm.toLowerCase())\n                  ) {\n                    return opportunityDetails;\n                  }\n                  return false;\n                })\n\n                .map((opportunityDetails, key) => {\n                  const oppoID = opportunityDetails.oppo_id;\n                  const job_type = opportunityDetails.job_type;\n                  const job_title = opportunityDetails.job_title;\n                  const company_name = opportunityDetails.companyname;\n                  const job_location = opportunityDetails.job_location;\n                  const salary_status = opportunityDetails.salary_status;\n                  const salary = opportunityDetails.salary;\n                  const test = opportunityDetails.test;\n                  const nationality = opportunityDetails.nationality;\n                  const year_exp = opportunityDetails.year_exp;\n                  const fresh_graduate = opportunityDetails.fresh_graduate;\n                  const education = opportunityDetails.education;\n                  const field_study = opportunityDetails.field_study;\n                  const iv_option = opportunityDetails.iv_option;\n                  const job_desc = opportunityDetails.job_desc;\n                  const partnerLink =\n                    \"/partner/\" +\n                    opportunityDetails.companyname\n                      .toLowerCase()\n                      .trim()\n                      .split(/\\s+/)\n                      .join(\"-\");\n                  const partnerLogo =\n                    \"https://www.zom-in.com/images/profileimg/\" +\n                    opportunityDetails.company_logo;\n\n                  return (\n                    <OpportunityLongCard\n                      key={oppoID}\n                      oppoID={oppoID}\n                      cardImage={partnerLogo}\n                      jobType={job_type}\n                      jobTitle={job_title}\n                      jobLocation={job_location}\n                      compName={company_name}\n                      compLink={partnerLink}\n                      salary={salary}\n                      salaryStatus={salary_status}\n                      jobTest={test}\n                      nationality={nationality}\n                      yearExp={year_exp}\n                      freshGraduate={fresh_graduate}\n                      education={education}\n                      fieldStudy={field_study}\n                      ivOption={iv_option}\n                      jobDesc={job_desc}\n                    />\n                  );\n                })}\n            </Row>\n          </Col>\n          <Col xs={12} sm={12} md={12} lg={2} className=\"sidebarHeader\">\n            <img src={updateResume} alt=\"\" className=\"w-100\" />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default Employer;\n","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Partner/LandingAchievement.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Partner/LandingOverview.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Partner/LandingAbout.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Partner/LandingTop.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/User.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/Employer.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/BasicInfo/User.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Partner/CardPartner.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Home/Home.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Index/Main.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/AboutUs/Events.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Interview/User/Reschedule.js",["512"],"import React, {useEffect, useState, useContext } from \"react\";\nimport Axios from \"axios\";\nimport { AuthContext } from \"../../../Helpers/AuthContext\";\n\nimport { Row, Alert, Col, Button } from \"react-bootstrap\";\nimport { BiTime } from \"react-icons/bi\";\n\nimport Heading from \"../../Heading\";\n\nfunction Reschedule(props) {\n  const interviewID = props.interviewID;\n  const interviewerName = props.interviewerName;\n  const interviewLink = props.interviewLink;\n\n  const { authState, setAuthState } = useContext(AuthContext);\n  const [newInterview, setNewInterview] = useState([]);\n\n\n  useEffect(() => {\n    Axios.get(\n      `${process.env.REACT_APP_SERVER_DOMAIN}/userinterview/reschedule/`+interviewID\n    ).then((response) => {\n      setNewInterview(response.data);\n    });\n  }, [interviewID]);\n\n\n  return (\n    <AuthContext.Provider value={{ authState, setAuthState }}>\n    {newInterview\n    .map((rescheduleDetails, key) => {\n        const proposedInterview = new Date(rescheduleDetails.proposed_interview);\n        const remarks = rescheduleDetails.remarks;\n\n        const newInterview = proposedInterview\n                .toLocaleDateString(\"en-GB\", {\n                  day: \"numeric\",\n                  month: \"short\",\n                  year: \"numeric\",\n                  hour: \"2-digit\",\n                  minute: \"2-digit\",\n                  hour12: true,\n                })\n                .replace(/ /g, \" \");\n\n        return (\n            <Row className=\"p-2\">\n      <Alert variant=\"warning\" className=\"mx-auto rounded\">\n      <Heading content=\"Reschedule to New Time and Date\" design=\"h4\" />\n        <Row>\n        <Col sm={12}>\n          <div>\n            <p className=\"m-0\">Intervierew Name: {interviewerName}</p>\n            <p className=\"m-0\">\n              <BiTime className=\"icon\" />\n              {newInterview}\n            </p>\n            <a\n              href={interviewLink}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className=\"m-0 text-decoration-none\"\n            >\n              {interviewLink}\n            </a>\n            <p className=\"m-0\">Reason: {remarks}</p>\n          </div>\n        </Col>\n        {/* <Col\n          sm={4}\n          className=\"mx-auto align-self-center text-lg-center text-md-end text-end\"\n        >\n        <Button variant=\"danger\" className=\"me-3 my-1\">Reject</Button>\n        <Button variant=\"success\" className=\"mx-auto my-auto\">Agree</Button>\n        </Col> */}\n        </Row>\n      </Alert>\n    </Row>\n        );\n    })}\n\n    </AuthContext.Provider>\n  );\n}\n\nexport default Reschedule;\n","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/Internship.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/Contract.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/PartTime.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Opportunity/FullTime.js",["513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530"],"import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\n\nimport { Row, Col, Form } from \"react-bootstrap\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n\nimport useInput from \"../../Helpers/use-input\";\n\nconst isNotEmpty = (value) => value.trim() !== \"\";\n\nfunction FullTime({setShow, show}) {\n  const [location, setlocation] = useState([]);\n  const [eduList, setEduList] = useState([]);\n\n\n  //Location\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/stateLocation`).then(\n      (response) => {\n        setlocation(response.data);\n      }\n    );\n  }, []);\n\n  //Education Level\n  useEffect(() => {\n    Axios.get(`${process.env.REACT_APP_SERVER_DOMAIN}/meta/eduLevel`).then(\n      (response) => {\n        setEduList(response.data);\n      }\n    );\n  });\n\n  //JobTitle Input Check\n  const {\n    value: enteredJobTitle,\n    isValid: enteredJobTitleIsValid,\n    hasError: jobTitleInputHasError,\n    valueChangeHandler: jobTitleChangeHandler,\n    inputBlurHandler: jobTitleBlurHandler,\n    reset: resetjobTitle,\n  } = useInput(isNotEmpty);\n\n  //Salary Input Check\n  const {\n    value: enteredSalary,\n    isValid: enteredSalaryIsValid,\n    hasError: salaryInputHasError,\n    valueChangeHandler: salaryChangeHandler,\n    inputBlurHandler: salaryBlurHandler,\n    reset: resetSalary,\n  } = useInput(isNotEmpty);\n\n  //Location Input Check\n  const {\n    value: enteredLocation,\n    isValid: enteredLocationIsValid,\n    hasError: locationInputHasError,\n    valueChangeHandler: locationChangeHandler,\n    inputBlurHandler: locationBlurHandler,\n    reset: resetLocation,\n  } = useInput(isNotEmpty);\n\n  //Experience Year Input Check\n  const {\n    value: enteredExpYear,\n    isValid: enteredExpYearIsValid,\n    hasError: expYearInputHasError,\n    valueChangeHandler: expYearChangeHandler,\n    inputBlurHandler: expYearBlurHandler,\n    reset: resetExpYear,\n  } = useInput(isNotEmpty);\n\n  //Edu Level Input Check\n  const {\n    value: enteredHighLevel,\n    isValid: enteredHighLevelIsValid,\n    hasError: highLevelInputHasError,\n    valueChangeHandler: highLevelChangeHandler,\n    inputBlurHandler: highLevelBlurHandler,\n    reset: resetHighLevel,\n  } = useInput(isNotEmpty);\n\n  //Study Field Input Check\n  const {\n    value: enteredStudyField,\n    isValid: enteredStudyFieldIsValid,\n    hasError: studyFieldInputHasError,\n    valueChangeHandler: studyFieldChangeHandler,\n    inputBlurHandler: studyFieldBlurHandler,\n    reset: resetStudyField,\n  } = useInput(isNotEmpty);\n\n  //Nationality Input Check\n  const {\n    value: enteredNationality,\n    isValid: enteredNationalityIsValid,\n    hasError: nationalityInputHasError,\n    valueChangeHandler: nationalityChangeHandler,\n    inputBlurHandler: nationalityBlurHandler,\n    reset: resetNationality,\n  } = useInput(isNotEmpty);\n\n  //Interview Option Input Check\n  const {\n    value: enteredInterviewOption,\n    isValid: enteredInterviewOptionIsValid,\n    hasError: interviewOptionHasError,\n    valueChangeHandler: interviewOptionChangeHandler,\n    inputBlurHandler: interviewOptionBlurHandler,\n    reset: resetInterviewOption,\n  } = useInput(isNotEmpty);\n\n  const [addData, setAdddata] = useState(\"\");\n\n\n  const fullTimeFormSubmissionHandler = (event) => {\n    alert(\"hi\");\n  }\n\n\n\n  const jobTitleClasses = jobTitleInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const salaryClasses = salaryInputHasError\n    ? \"form-select form-select-sm is-invalid\"\n    : \"form-select form-select-sm\";\n\n  const locationClasses = locationInputHasError\n    ? \"form-select form-select-sm is-invalid\"\n    : \"form-select form-select-sm\";\n\n  const expYearClasses = expYearInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const highLevelClasses = highLevelInputHasError\n    ? \"form-select form-select-sm is-invalid\"\n    : \"form-select form-select-sm\";\n\n  const studyFieldClasses = studyFieldInputHasError\n    ? \"form-control form-control-sm is-invalid\"\n    : \"form-control form-control-sm\";\n\n  const nationalityClasses = nationalityInputHasError\n    ? \"form-select form-select-sm is-invalid\"\n    : \"form-select form-select-sm\";\n\n  const interviewOptionClasses = interviewOptionHasError\n    ? \"form-select form-select-sm is-invalid\"\n    : \"form-select form-select-sm\";\n\n  return (\n    <Row className=\"my-2\">\n      <Form onSubmit={fullTimeFormSubmissionHandler}>\n        <Col sm={12} className=\"form-group mb-3\">\n          <label htmlFor=\"jobTitle\" className=\"required\">\n            Job Title\n          </label>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your Job Title\"\n            autoComplete=\"off\"\n            className=\"form-control form-control-sm\"\n            className={jobTitleClasses}\n            onChange={jobTitleChangeHandler}\n            onBlur={jobTitleBlurHandler}\n            value={enteredJobTitle}\n          />\n          <p class=\"fs-7 text-danger\">\n            * Make sure the Job title is correct and it is not editable{\" \"}\n          </p>\n\n          {jobTitleInputHasError && (\n            <Form.Control.Feedback type=\"invalid\">\n              Please fill in the job title.\n            </Form.Control.Feedback>\n          )}\n        </Col>\n\n        <Col sm={12} className=\"form-group mb-3\">\n          <label htmlFor=\"salary\" className=\"required\">\n            Salary\n          </label>\n          <select\n            aria-label=\"Salary\"\n            className={salaryClasses}\n            value={enteredSalary}\n            onChange={salaryChangeHandler}\n            onBlur={salaryBlurHandler}\n          >\n            <option value=\"\">Please Choose One</option>\n            <option value=\"MYR 1000 and Below\">MYR 1000 and Below</option>\n            <option value=\"MYR 1001 to MYR 2000\">MYR 1001 to MYR 2000</option>\n            <option value=\"MYR 2001 and MYR 3000\">MYR 2001 and MYR 3000</option>\n            <option value=\"MYR 3001 and MYR 4000\">MYR 3001 and MYR 4000</option>\n            <option value=\"MYR 4001 and MYR 5000\">MYR 4001 and MYR 5000</option>\n            <option value=\"MYR 5001 and Above\">MYR 5001 and Above</option>\n          </select>\n          <p>\n            <input type=\"checkbox\" name=\"salary_status\" value=\"0\" /> Do not\n            disclose salary range to job seeker.\n          </p>\n\n          {salaryInputHasError && (\n            <Form.Control.Feedback type=\"invalid\">\n              Please choose the salary range.\n            </Form.Control.Feedback>\n          )}\n        </Col>\n\n        <Col sm={12} className=\"form-group mb-2\">\n          <label htmlFor=\"location\" className=\"required\">\n            Location\n          </label>\n          <select\n            defaultValue={\"\"}\n            aria-label=\"Location\"\n            className={locationClasses}\n            onChange={locationChangeHandler}\n            onBlur={locationBlurHandler}\n            value={enteredLocation}\n          >\n            <option value=\"\">Please Choose One</option>\n            {location.map((location) => {\n              const enteredLocation = location.child_name;\n              const enteredLocationID = location.child_id;\n              return (\n                <option key={enteredLocationID} value={enteredLocation}>\n                  {enteredLocation}\n                </option>\n              );\n            })}\n          </select>\n          {locationInputHasError && (\n            <Form.Control.Feedback type=\"invalid\">\n              Please choose your location.\n            </Form.Control.Feedback>\n          )}\n        </Col>\n\n        <Col sm={12} className=\"form-group mb-3\">\n          <label htmlFor=\"expYear\" className=\"required\">\n            Experience in years\n          </label>\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"30\"\n            placeholder=\"Enter experience in years\"\n            className=\"form-control form-control-sm\"\n            className={expYearClasses}\n            onChange={expYearChangeHandler}\n            onBlur={expYearBlurHandler}\n            value={enteredExpYear}\n          />\n\n          {expYearInputHasError && (\n            <Form.Control.Feedback type=\"invalid\">\n              Please fill in the experience.\n            </Form.Control.Feedback>\n          )}\n        </Col>\n\n        <Col sm={12} className=\"form-group mb-2\">\n          <label htmlFor=\"eduLevel\" className=\"required\">\n            Minimum Education Level\n          </label>\n          <select\n            aria-label=\"Education Level\"\n            className={highLevelClasses}\n            onChange={highLevelChangeHandler}\n            onBlur={highLevelBlurHandler}\n            value={enteredHighLevel}\n          >\n            <option value=\"\">Please Choose One</option>\n            {eduList.map((eduList, key) => {\n              const enteredHighLevel = eduList.child_name;\n              return (\n                <option key={enteredHighLevel} value={enteredHighLevel}>\n                  {enteredHighLevel}\n                </option>\n              );\n            })}\n          </select>\n\n          {highLevelInputHasError && (\n            <Form.Control.Feedback type=\"invalid\">\n              Please choose your minimum education Level.\n            </Form.Control.Feedback>\n          )}\n        </Col>\n\n        <Col sm={12} className=\"form-group mb-2\">\n          <label htmlFor=\"studyField\" className=\"required\">\n            Field of Study\n          </label>\n          <input\n            type=\"text\"\n            placeholder=\"Enter Field of Study\"\n            className={studyFieldClasses}\n            onChange={studyFieldChangeHandler}\n            onBlur={studyFieldBlurHandler}\n            value={enteredStudyField}\n          />\n\n          {studyFieldInputHasError && (\n            <Form.Control.Feedback type=\"invalid\">\n              Please fill in your field of study.\n            </Form.Control.Feedback>\n          )}\n        </Col>\n\n        <Col sm={12} className=\"form-group mb-3\">\n          <label htmlFor=\"nationality\" className=\"required\">\n            Nationality\n          </label>\n          <select\n            defaultValue={\"\"}\n            aria-label=\"Nationality\"\n            className={nationalityClasses}\n            onChange={nationalityChangeHandler}\n            onBlur={nationalityBlurHandler}\n            value={enteredNationality}\n          >\n            <option value=\"\">Please Choose One</option>\n            <option value=\"Malaysian only\">Malaysian Only</option>\n            <option value=\"Not specific\">Not specific</option>\n          </select>\n\n          {nationalityInputHasError && (\n            <Form.Control.Feedback type=\"invalid\">\n              Please Choose One.\n            </Form.Control.Feedback>\n          )}\n        </Col>\n\n        <Col sm={12} className=\"form-group mb-3\">\n          <label htmlFor=\"interviewOption\" className=\"required\">\n            Interview Option\n          </label>\n          <select\n            defaultValue={\"\"}\n            aria-label=\"InterviewOption\"\n            className={interviewOptionClasses}\n            onChange={interviewOptionChangeHandler}\n            onBlur={interviewOptionBlurHandler}\n            value={enteredInterviewOption}\n          >\n            <option value=\"\">Please Choose One</option>\n            <option value=\"Face to Face\">Face to Face</option>\n            <option value=\"Video Call\">Video Call</option>\n            <option value=\"Face to Face / Video Call\">\n              Face to Face / Video Call\n            </option>\n          </select>\n\n          {interviewOptionHasError && (\n            <Form.Control.Feedback type=\"invalid\">\n              Please Choose One\n            </Form.Control.Feedback>\n          )}\n        </Col>\n\n        <Col sm={12} className=\"form-group mb-2\">\n          <label htmlFor=\"experience\" className=\"required\">\n            Job Requirement / Responsibility\n          </label>\n          <CKEditor\n            editor={ClassicEditor}\n            config={{\n              placeholder: \"Job Requirement / Responsibility\",\n              removePlugins: [\n                \"Heading\",\n                // // \"Essentials\",\n                // // \"Italic\",\n                // \"Bold\",\n                // \"Link\",\n                \"imageUpload\",\n                \"EasyImage\",\n                \"ImageUpload\",\n                \"MediaEmbed\",\n                \"BlockQuote\",\n                // // \"List\",\n                \"Indent\",\n                \"Table\",\n              ],\n            }}\n            data={addData}\n            onChange={(event, editor) => {\n              const data = editor.getData();\n              setAdddata(data);\n            }}\n          />\n        </Col>\n\n        <button onClick={() => setShow(false)}></button>\n      </Form>\n    </Row>\n  );\n}\n\nexport default FullTime;\n","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/Employer/About.js",["531"],"import React, { useState, useEffect, Fragment } from \"react\";\nimport Axios from \"axios\";\n\nimport { Col, Row, Form } from \"react-bootstrap\";\nimport Heading from \"../../Heading\";\nimport { BiPencil, BiMinusCircle, BiUser } from \"react-icons/bi\";\nimport LocationIcon from \"../../../Assests/Images/icon/location.svg\";\nimport ContactIcon from \"../../../Assests/Images/icon/contact.svg\";\nimport { toast } from \"react-toastify\";\n\nfunction About() {\n  const [aboutUser, setAboutUser] = useState([]);\n\n  useEffect(() => {\n    Axios.get(\n      `${process.env.REACT_APP_SERVER_DOMAIN}/dashboardEmployerProfile/about/`,\n      {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n      }\n    ).then((response) => {\n      if (response.data.error) {\n        return toast.error(\n          <Fragment>\n            <BiMinusCircle /> <span>{response.data.error}</span>\n          </Fragment>\n        );\n      } else {\n        console.log(response.data);\n        setAboutUser(response.data);\n      }\n    });\n  });\n\n  return (\n    <>\n      <Row className=\"mx-auto border rounded p-2 my-2\">\n        <Col sm={12}>\n          <Row>\n            <Col xs={10} sm={10} className=\"text-start\">\n              <Heading content=\"About Employer\" design=\"h5\" />\n            </Col>\n            <Col xs={2} sm={2} className=\"text-end align-self-center\">\n              <p role=\"button\" className=\"my-auto\">\n                <BiPencil\n                  className=\"icon\"\n                  type=\"button\"\n                  data-bs-toggle=\"modal\"\n                  data-bs-target=\"#about\"\n                />\n              </p>\n            </Col>\n          </Row>\n        </Col>\n\n        {aboutUser.map((aboutDetails, key) => {\n          const representativeName = aboutDetails.name;\n          const contact = aboutDetails.contnum;\n          const role = aboutDetails.role;\n          const address = aboutDetails.user_address;\n\n          return (\n            <>\n              {representativeName !== null && (\n                <p className=\"m-0 text-start fs-7 text-capitalize\">\n                  <BiUser className=\"icon\" />\n                  {representativeName} ({role})\n                </p>\n              )}\n\n              {contact !== null && (\n                <p className=\"m-0 text-start fs-7 text-capitalize\">\n                <img alt=\"\" src={ContactIcon} className=\"icon\" />\n                  {contact}\n                </p>\n              )}\n\n              {address !== null && (\n                <p className=\"m-0 text-start fs-7 text-capitalize\">\n                <img alt=\"\" src={LocationIcon} className=\"icon\" />\n                  {address}\n                </p>\n              )}\n            </>\n          );\n        })}\n        <Col sm={12}></Col>\n      </Row>\n    </>\n  );\n}\n\nexport default About;\n","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Home/Suggestion.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Home/Profile.js",["532","533","534"],"import React, { useState, useEffect, useContext } from \"react\";\nimport Axios from \"axios\";\nimport { AuthContext } from \"../../Helpers/AuthContext\";\n\nimport CoverImg from \"../../Assests/Images/background/bg-1.png\";\nimport { FaUniversity } from \"react-icons/fa\";\n\nfunction Profile(props) {\n  const userID = props.userID;\n  const { authState, setAuthState } = useContext(AuthContext);\n\n  const [viewName, setViewName] = useState(\"Zom-IN User\");\n  const [viewProfile, setViewProfile] = useState(\"avatar/male.svg\");\n  const [viewEducation, setViewEducation] = useState(\"Education\");\n\n  useEffect(() => {\n    Axios.get(\n      `${process.env.REACT_APP_SERVER_DOMAIN}/home/userProfile/` + userID,\n      {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n      }\n    ).then((response) => {\n      const profileDetail1 = response.data[0];\n      const profileDetail2 = response.data[1];\n\n      var profile;\n\n      if (profileDetail1.length === 0) {\n        if (authState.company === 1) {\n          profile = `${process.env.REACT_APP_SERVER_DOMAIN}/public/Assests/Images/avatar/bp.png`;\n          setViewProfile(profile);\n        } else {\n          if (profileDetail2[0].gender === \"Male\") {\n            profile = `${process.env.REACT_APP_SERVER_DOMAIN}/public/Assests/Images/avatar/male.svg`;\n            setViewProfile(profile);\n          } else {\n            profile = `${process.env.REACT_APP_SERVER_DOMAIN}/public/Assests/Images/avatar/female.svg`;\n            setViewProfile(profile);\n          }\n        }\n      } else {\n        profile =\n          `${process.env.REACT_APP_SERVER_DOMAIN}/public/Assests/Images/user/` +\n          profileDetail1[0].profile_photo;\n        setViewProfile(profile);\n      }\n    });\n  });\n\n  useEffect(() => {\n    Axios.get(\n      `${process.env.REACT_APP_SERVER_DOMAIN}/home/userName/` + userID\n    ).then((response) => {\n      const userName = response.data[0];\n      if (authState.company !== 1) {\n        setViewName(userName.name);\n      } else {\n        setViewName(userName.companyname);\n      }\n    });\n  });\n\n  // useEffect(() => {\n  //   if (authState.company === 0) {\n  //     Axios.get(\n  //       `${process.env.REACT_APP_SERVER_DOMAIN}/home/userEducation/` + userID\n  //     ).then((response) => {\n  //       const userEducation = response.data[0];\n  //       setViewEducation(userEducation.school);\n  //     });\n  //   } else {\n  //     Axios.get(\n  //       `${process.env.REACT_APP_SERVER_DOMAIN}/home/employerIndustry/` + userID\n  //     ).then((response) => {\n  //       const employerIndustry = response.data[0];\n  //       setViewEducation(employerIndustry.industry);\n  //     });\n  //   }\n  // });\n\n  return (\n    <AuthContext.Provider value={{ authState, setAuthState }}>\n      <div className=\"card mb-3\">\n        <img\n          src={CoverImg}\n          className=\"card-img-top profilecover\"\n          alt=\"Background Cover\"\n        />\n        <div className=\"position-relative\">\n          <div className=\"position-absolute top-50 start-50 translate-middle w-50\">\n            <img\n              src={viewProfile}\n              className=\" my-auto rounded-circle\"\n              width=\"100\"\n              height=\"100\"\n              alt=\"Background Cover\"\n            />\n          </div>\n        </div>\n        <div className=\"card-body mt-4 text-center pb-0 px-1\">\n          <h6 href=\"/edcwe\" className=\"card-title pt-3 text-truncate\">\n            <a className=\"text-decoration-none link-dark\" href=\"/profile\">\n              {viewName}\n            </a>\n          </h6>\n          {/* {viewEducation.length !== 0 &&\n            <p className=\"card-text text-muted text-small\">\n            {authState.company === 0 ? (\n              <p>\n                <FaUniversity className=\"icon\" />\n                {viewEducation}\n              </p>\n            ) : (\n              <span className=\"badge rounded-pill bg-info text-dark\">\n                {viewEducation}\n              </span>\n            )}\n          </p>\n          } */}\n        </div>\n        <hr className=\"dropdown-divider\" />\n        <div className=\"mx-auto m-1\">\n          <a href=\"/profile\" className=\"text-decoration-none link-primary\">\n            View Profile\n          </a>\n        </div>\n      </div>\n    </AuthContext.Provider>\n  );\n}\n\nexport default Profile;\n","/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Home/Posts.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Home/TopBanner.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Home/Like.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Home/Report.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Home/Comment.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Home/PostOwnerProfile.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Home/MiddleBanner.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/Employer/ChangeProfile.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/User/Reference.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/User/RealLifeExperience.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/User/Language.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/User/Portfolio.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/User/Achievement.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/User/Skills.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/User/About.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/User/WorkExperience.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/User/ChangeProfile.js",[],"/Users/samikshazomin/Desktop/zomin/frontend/src/Components/Profile/User/Education.js",[],{"ruleId":"535","replacedBy":"536"},{"ruleId":"537","replacedBy":"538"},{"ruleId":"539","severity":1,"message":"540","line":59,"column":10,"nodeType":"541","endLine":59,"endColumn":12,"suggestions":"542"},{"ruleId":"543","severity":1,"message":"544","line":5,"column":31,"nodeType":"545","messageId":"546","endLine":5,"endColumn":36},{"ruleId":"543","severity":1,"message":"547","line":8,"column":8,"nodeType":"545","messageId":"546","endLine":8,"endColumn":15},{"ruleId":"543","severity":1,"message":"548","line":10,"column":8,"nodeType":"545","messageId":"546","endLine":10,"endColumn":26},{"ruleId":"543","severity":1,"message":"549","line":15,"column":42,"nodeType":"545","messageId":"546","endLine":15,"endColumn":47},{"ruleId":"543","severity":1,"message":"550","line":27,"column":22,"nodeType":"545","messageId":"546","endLine":27,"endColumn":34},{"ruleId":"539","severity":1,"message":"540","line":60,"column":10,"nodeType":"541","endLine":60,"endColumn":12,"suggestions":"551"},{"ruleId":"543","severity":1,"message":"552","line":6,"column":31,"nodeType":"545","messageId":"546","endLine":6,"endColumn":41},{"ruleId":"543","severity":1,"message":"553","line":8,"column":31,"nodeType":"545","messageId":"546","endLine":8,"endColumn":35},{"ruleId":"543","severity":1,"message":"554","line":8,"column":37,"nodeType":"545","messageId":"546","endLine":8,"endColumn":40},{"ruleId":"543","severity":1,"message":"549","line":8,"column":42,"nodeType":"545","messageId":"546","endLine":8,"endColumn":47},{"ruleId":"543","severity":1,"message":"547","line":2,"column":8,"nodeType":"545","messageId":"546","endLine":2,"endColumn":15},{"ruleId":"543","severity":1,"message":"555","line":3,"column":10,"nodeType":"545","messageId":"546","endLine":3,"endColumn":13},{"ruleId":"543","severity":1,"message":"556","line":3,"column":15,"nodeType":"545","messageId":"546","endLine":3,"endColumn":18},{"ruleId":"543","severity":1,"message":"557","line":4,"column":10,"nodeType":"545","messageId":"546","endLine":4,"endColumn":28},{"ruleId":"543","severity":1,"message":"558","line":5,"column":10,"nodeType":"545","messageId":"546","endLine":5,"endColumn":23},{"ruleId":"543","severity":1,"message":"559","line":5,"column":25,"nodeType":"545","messageId":"546","endLine":5,"endColumn":34},{"ruleId":"543","severity":1,"message":"560","line":5,"column":36,"nodeType":"545","messageId":"546","endLine":5,"endColumn":46},{"ruleId":"543","severity":1,"message":"561","line":5,"column":48,"nodeType":"545","messageId":"546","endLine":5,"endColumn":61},{"ruleId":"543","severity":1,"message":"562","line":11,"column":3,"nodeType":"545","messageId":"546","endLine":11,"endColumn":17},{"ruleId":"543","severity":1,"message":"563","line":15,"column":10,"nodeType":"545","messageId":"546","endLine":15,"endColumn":15},{"ruleId":"543","severity":1,"message":"564","line":23,"column":11,"nodeType":"545","messageId":"546","endLine":23,"endColumn":20},{"ruleId":"543","severity":1,"message":"550","line":23,"column":22,"nodeType":"545","messageId":"546","endLine":23,"endColumn":34},{"ruleId":"565","severity":1,"message":"566","line":75,"column":24,"nodeType":"567","messageId":"568","endLine":75,"endColumn":26},{"ruleId":"565","severity":1,"message":"566","line":77,"column":31,"nodeType":"567","messageId":"568","endLine":77,"endColumn":33},{"ruleId":"543","severity":1,"message":"569","line":33,"column":10,"nodeType":"545","messageId":"546","endLine":33,"endColumn":23},{"ruleId":"543","severity":1,"message":"570","line":3,"column":16,"nodeType":"545","messageId":"546","endLine":3,"endColumn":22},{"ruleId":"543","severity":1,"message":"571","line":7,"column":8,"nodeType":"545","messageId":"546","endLine":7,"endColumn":21},{"ruleId":"543","severity":1,"message":"572","line":1,"column":38,"nodeType":"545","messageId":"546","endLine":1,"endColumn":48},{"ruleId":"543","severity":1,"message":"573","line":61,"column":9,"nodeType":"545","messageId":"546","endLine":61,"endColumn":18},{"ruleId":"543","severity":1,"message":"570","line":5,"column":27,"nodeType":"545","messageId":"546","endLine":5,"endColumn":33},{"ruleId":"543","severity":1,"message":"574","line":38,"column":14,"nodeType":"545","messageId":"546","endLine":38,"endColumn":36},{"ruleId":"543","severity":1,"message":"575","line":42,"column":12,"nodeType":"545","messageId":"546","endLine":42,"endColumn":25},{"ruleId":"543","severity":1,"message":"576","line":48,"column":14,"nodeType":"545","messageId":"546","endLine":48,"endColumn":34},{"ruleId":"543","severity":1,"message":"577","line":52,"column":12,"nodeType":"545","messageId":"546","endLine":52,"endColumn":23},{"ruleId":"543","severity":1,"message":"578","line":58,"column":14,"nodeType":"545","messageId":"546","endLine":58,"endColumn":36},{"ruleId":"543","severity":1,"message":"579","line":62,"column":12,"nodeType":"545","messageId":"546","endLine":62,"endColumn":25},{"ruleId":"543","severity":1,"message":"580","line":68,"column":14,"nodeType":"545","messageId":"546","endLine":68,"endColumn":35},{"ruleId":"543","severity":1,"message":"581","line":72,"column":12,"nodeType":"545","messageId":"546","endLine":72,"endColumn":24},{"ruleId":"543","severity":1,"message":"582","line":78,"column":14,"nodeType":"545","messageId":"546","endLine":78,"endColumn":37},{"ruleId":"543","severity":1,"message":"583","line":82,"column":12,"nodeType":"545","messageId":"546","endLine":82,"endColumn":26},{"ruleId":"543","severity":1,"message":"584","line":88,"column":14,"nodeType":"545","messageId":"546","endLine":88,"endColumn":38},{"ruleId":"543","severity":1,"message":"585","line":92,"column":12,"nodeType":"545","messageId":"546","endLine":92,"endColumn":27},{"ruleId":"543","severity":1,"message":"586","line":98,"column":14,"nodeType":"545","messageId":"546","endLine":98,"endColumn":39},{"ruleId":"543","severity":1,"message":"587","line":102,"column":12,"nodeType":"545","messageId":"546","endLine":102,"endColumn":28},{"ruleId":"543","severity":1,"message":"588","line":108,"column":14,"nodeType":"545","messageId":"546","endLine":108,"endColumn":43},{"ruleId":"543","severity":1,"message":"589","line":112,"column":12,"nodeType":"545","messageId":"546","endLine":112,"endColumn":32},{"ruleId":"590","severity":1,"message":"591","line":168,"column":13,"nodeType":"592","messageId":"593","endLine":168,"endColumn":40},{"ruleId":"590","severity":1,"message":"591","line":255,"column":13,"nodeType":"592","messageId":"593","endLine":255,"endColumn":39},{"ruleId":"543","severity":1,"message":"594","line":4,"column":20,"nodeType":"545","messageId":"546","endLine":4,"endColumn":24},{"ruleId":"543","severity":1,"message":"595","line":6,"column":10,"nodeType":"545","messageId":"546","endLine":6,"endColumn":22},{"ruleId":"543","severity":1,"message":"596","line":14,"column":10,"nodeType":"545","messageId":"546","endLine":14,"endColumn":23},{"ruleId":"543","severity":1,"message":"597","line":14,"column":25,"nodeType":"545","messageId":"546","endLine":14,"endColumn":41},"no-native-reassign",["598"],"no-negated-in-lhs",["599"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'navigate' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["600"],"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'Heading' is defined but never used.","'LandingAchievement' is defined but never used.","'Badge' is defined but never used.","'setAuthState' is assigned a value but never used.",["601"],"'Pagination' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'BsArrowReturnRight' is defined but never used.","'FaCalendarAlt' is defined but never used.","'FaUserTie' is defined but never used.","'FaLanguage' is defined but never used.","'FaRegBuilding' is defined but never used.","'BiMessageCheck' is defined but never used.","'toast' is defined but never used.","'authState' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'withdrawModal' is assigned a value but never used.","'Button' is defined but never used.","'briefcaseIcon' is defined but never used.","'useContext' is defined but never used.","'jobTypeBG' is assigned a value but never used.","'enteredJobTitleIsValid' is assigned a value but never used.","'resetjobTitle' is assigned a value but never used.","'enteredSalaryIsValid' is assigned a value but never used.","'resetSalary' is assigned a value but never used.","'enteredLocationIsValid' is assigned a value but never used.","'resetLocation' is assigned a value but never used.","'enteredExpYearIsValid' is assigned a value but never used.","'resetExpYear' is assigned a value but never used.","'enteredHighLevelIsValid' is assigned a value but never used.","'resetHighLevel' is assigned a value but never used.","'enteredStudyFieldIsValid' is assigned a value but never used.","'resetStudyField' is assigned a value but never used.","'enteredNationalityIsValid' is assigned a value but never used.","'resetNationality' is assigned a value but never used.","'enteredInterviewOptionIsValid' is assigned a value but never used.","'resetInterviewOption' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Form' is defined but never used.","'FaUniversity' is defined but never used.","'viewEducation' is assigned a value but never used.","'setViewEducation' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"602","fix":"603"},{"desc":"602","fix":"604"},"Update the dependencies array to be: [navigate, token]",{"range":"605","text":"606"},{"range":"607","text":"606"},[1966,1968],"[navigate, token]",[2023,2025]]